<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- saved from url=(0053)https://www.lfd.uci.edu/~gohlke/code/tifffile.py.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>tifffile.py - Christoph Gohlke</title>
<meta name="robots" content="noarchive">

<meta http-equiv="Author" content="Christoph Gohlke">
<meta name="handheldfriendly" content="true">
<meta name="viewport" content="width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<link rel="icon" href="https://www.lfd.uci.edu/~gohlke/icon.ico" type="image/x-icon">
<link rel="shortcut icon" href="https://www.lfd.uci.edu/~gohlke/icon.ico" type="image/x-icon">
<style type="text/css" media="screen">
@import url(style-small.css) screen and (max-width: 800px);
.highlight .hll { background-color: #ffffcc }
.highlight  { background: #f8f8f8; }
.highlight .c { color: #408080; font-style: italic } /* Comment */
.highlight .err { border: 1px solid #FF0000 } /* Error */
.highlight .k { color: #008000; font-weight: bold } /* Keyword */
.highlight .o { color: #666666 } /* Operator */
.highlight .ch { color: #408080; font-style: italic } /* Comment.Hashbang */
.highlight .cm { color: #408080; font-style: italic } /* Comment.Multiline */
.highlight .cp { color: #BC7A00 } /* Comment.Preproc */
.highlight .cpf { color: #408080; font-style: italic } /* Comment.PreprocFile */
.highlight .c1 { color: #408080; font-style: italic } /* Comment.Single */
.highlight .cs { color: #408080; font-style: italic } /* Comment.Special */
.highlight .gd { color: #A00000 } /* Generic.Deleted */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .gr { color: #FF0000 } /* Generic.Error */
.highlight .gh { color: #000080; font-weight: bold } /* Generic.Heading */
.highlight .gi { color: #00A000 } /* Generic.Inserted */
.highlight .go { color: #888888 } /* Generic.Output */
.highlight .gp { color: #000080; font-weight: bold } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.highlight .gt { color: #0044DD } /* Generic.Traceback */
.highlight .kc { color: #008000; font-weight: bold } /* Keyword.Constant */
.highlight .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */
.highlight .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */
.highlight .kp { color: #008000 } /* Keyword.Pseudo */
.highlight .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #B00040 } /* Keyword.Type */
.highlight .m { color: #666666 } /* Literal.Number */
.highlight .s { color: #BA2121 } /* Literal.String */
.highlight .na { color: #7D9029 } /* Name.Attribute */
.highlight .nb { color: #008000 } /* Name.Builtin */
.highlight .nc { color: #0000FF; font-weight: bold } /* Name.Class */
.highlight .no { color: #880000 } /* Name.Constant */
.highlight .nd { color: #AA22FF } /* Name.Decorator */
.highlight .ni { color: #999999; font-weight: bold } /* Name.Entity */
.highlight .ne { color: #D2413A; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #0000FF } /* Name.Function */
.highlight .nl { color: #A0A000 } /* Name.Label */
.highlight .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */
.highlight .nt { color: #008000; font-weight: bold } /* Name.Tag */
.highlight .nv { color: #19177C } /* Name.Variable */
.highlight .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */
.highlight .w { color: #bbbbbb } /* Text.Whitespace */
.highlight .mb { color: #666666 } /* Literal.Number.Bin */
.highlight .mf { color: #666666 } /* Literal.Number.Float */
.highlight .mh { color: #666666 } /* Literal.Number.Hex */
.highlight .mi { color: #666666 } /* Literal.Number.Integer */
.highlight .mo { color: #666666 } /* Literal.Number.Oct */
.highlight .sa { color: #BA2121 } /* Literal.String.Affix */
.highlight .sb { color: #BA2121 } /* Literal.String.Backtick */
.highlight .sc { color: #BA2121 } /* Literal.String.Char */
.highlight .dl { color: #BA2121 } /* Literal.String.Delimiter */
.highlight .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */
.highlight .s2 { color: #BA2121 } /* Literal.String.Double */
.highlight .se { color: #BB6622; font-weight: bold } /* Literal.String.Escape */
.highlight .sh { color: #BA2121 } /* Literal.String.Heredoc */
.highlight .si { color: #BB6688; font-weight: bold } /* Literal.String.Interpol */
.highlight .sx { color: #008000 } /* Literal.String.Other */
.highlight .sr { color: #BB6688 } /* Literal.String.Regex */
.highlight .s1 { color: #BA2121 } /* Literal.String.Single */
.highlight .ss { color: #19177C } /* Literal.String.Symbol */
.highlight .bp { color: #008000 } /* Name.Builtin.Pseudo */
.highlight .fm { color: #0000FF } /* Name.Function.Magic */
.highlight .vc { color: #19177C } /* Name.Variable.Class */
.highlight .vg { color: #19177C } /* Name.Variable.Global */
.highlight .vi { color: #19177C } /* Name.Variable.Instance */
.highlight .vm { color: #19177C } /* Name.Variable.Magic */
.highlight .il { color: #666666 } /* Literal.Number.Integer.Long */
</style>
</head>
<body style="background:#f8f8f8;">
<div class="highlight"><pre><span></span><a name="line-1"></a><span class="ch">#! /usr/bin/python3</span>
<a name="line-2"></a><span class="c1"># -*- coding: utf-8 -*-</span>
<a name="line-3"></a><span class="c1"># tifffile.py</span>
<a name="line-4"></a>
<a name="line-5"></a><span class="c1"># Copyright (c) 2008-2017, Christoph Gohlke</span>
<a name="line-6"></a><span class="c1"># Copyright (c) 2008-2017, The Regents of the University of California</span>
<a name="line-7"></a><span class="c1"># Produced at the Laboratory for Fluorescence Dynamics</span>
<a name="line-8"></a><span class="c1"># All rights reserved.</span>
<a name="line-9"></a><span class="c1">#</span>
<a name="line-10"></a><span class="c1"># Redistribution and use in source and binary forms, with or without</span>
<a name="line-11"></a><span class="c1"># modification, are permitted provided that the following conditions are met:</span>
<a name="line-12"></a><span class="c1">#</span>
<a name="line-13"></a><span class="c1"># * Redistributions of source code must retain the above copyright</span>
<a name="line-14"></a><span class="c1">#   notice, this list of conditions and the following disclaimer.</span>
<a name="line-15"></a><span class="c1"># * Redistributions in binary form must reproduce the above copyright</span>
<a name="line-16"></a><span class="c1">#   notice, this list of conditions and the following disclaimer in the</span>
<a name="line-17"></a><span class="c1">#   documentation and/or other materials provided with the distribution.</span>
<a name="line-18"></a><span class="c1"># * Neither the name of the copyright holders nor the names of any</span>
<a name="line-19"></a><span class="c1">#   contributors may be used to endorse or promote products derived</span>
<a name="line-20"></a><span class="c1">#   from this software without specific prior written permission.</span>
<a name="line-21"></a><span class="c1">#</span>
<a name="line-22"></a><span class="c1"># THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</span>
<a name="line-23"></a><span class="c1"># AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span>
<a name="line-24"></a><span class="c1"># IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</span>
<a name="line-25"></a><span class="c1"># ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE</span>
<a name="line-26"></a><span class="c1"># LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</span>
<a name="line-27"></a><span class="c1"># CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</span>
<a name="line-28"></a><span class="c1"># SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</span>
<a name="line-29"></a><span class="c1"># INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</span>
<a name="line-30"></a><span class="c1"># CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</span>
<a name="line-31"></a><span class="c1"># ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>
<a name="line-32"></a><span class="c1"># POSSIBILITY OF SUCH DAMAGE.</span>
<a name="line-33"></a>
<a name="line-34"></a><span class="sd">"""Read image and meta data from (bio) TIFF® files. Save numpy arrays as TIFF.</span>
<a name="line-35"></a>
<a name="line-36"></a><span class="sd">Image and metadata can be read from TIFF, BigTIFF, OME-TIFF, STK, LSM, NIH,</span>
<a name="line-37"></a><span class="sd">SGI, ImageJ, MicroManager, FluoView, SEQ and GEL files.</span>
<a name="line-38"></a>
<a name="line-39"></a><span class="sd">Tifffile is not a general purpose TIFF library. Only a subset of the TIFF</span>
<a name="line-40"></a><span class="sd">specification is supported, mainly uncompressed and losslessly compressed</span>
<a name="line-41"></a><span class="sd">2**(0 to 6) bit integer, 16, 32 and 64-bit float, grayscale and RGB(A) images,</span>
<a name="line-42"></a><span class="sd">which are commonly used in bio-scientific imaging. Specifically, reading image</span>
<a name="line-43"></a><span class="sd">trees defined via SubIFDs, JPEG and CCITT compression, chroma subsampling,</span>
<a name="line-44"></a><span class="sd">or IPTC and XMP metadata are not implemented.</span>
<a name="line-45"></a>
<a name="line-46"></a><span class="sd">TIFF®, the tagged Image File Format, is a trademark and under control of</span>
<a name="line-47"></a><span class="sd">Adobe Systems Incorporated. BigTIFF allows for files greater than 4 GB.</span>
<a name="line-48"></a><span class="sd">STK, LSM, FluoView, SGI, SEQ, GEL, and OME-TIFF, are custom extensions</span>
<a name="line-49"></a><span class="sd">defined by Molecular Devices (Universal Imaging Corporation), Carl Zeiss</span>
<a name="line-50"></a><span class="sd">MicroImaging, Olympus, Silicon Graphics International, Media Cybernetics,</span>
<a name="line-51"></a><span class="sd">Molecular Dynamics, and the Open Microscopy Environment consortium</span>
<a name="line-52"></a><span class="sd">respectively.</span>
<a name="line-53"></a>
<a name="line-54"></a><span class="sd">For command line usage run C{python -m tifffile --help}</span>
<a name="line-55"></a>
<a name="line-56"></a><span class="sd">:Author:</span>
<a name="line-57"></a><span class="sd">  `Christoph Gohlke &lt;http://www.lfd.uci.edu/~gohlke/&gt;`_</span>
<a name="line-58"></a>
<a name="line-59"></a><span class="sd">:Organization:</span>
<a name="line-60"></a><span class="sd">  Laboratory for Fluorescence Dynamics, University of California, Irvine</span>
<a name="line-61"></a>
<a name="line-62"></a><span class="sd">:Version: 2017.09.29</span>
<a name="line-63"></a>
<a name="line-64"></a><span class="sd">Requirements</span>
<a name="line-65"></a><span class="sd">------------</span>
<a name="line-66"></a><span class="sd">* `CPython 3.6 64-bit &lt;http://www.python.org&gt;`_</span>
<a name="line-67"></a><span class="sd">* `Numpy 1.13 &lt;http://www.numpy.org&gt;`_</span>
<a name="line-68"></a><span class="sd">* `Matplotlib 2.0 &lt;http://www.matplotlib.org&gt;`_ (optional for plotting)</span>
<a name="line-69"></a><span class="sd">* `Tifffile.c 2017.01.10 &lt;http://www.lfd.uci.edu/~gohlke/&gt;`_</span>
<a name="line-70"></a><span class="sd">  (recommended for faster decoding of PackBits and LZW encoded strings)</span>
<a name="line-71"></a>
<a name="line-72"></a><span class="sd">Revisions</span>
<a name="line-73"></a><span class="sd">---------</span>
<a name="line-74"></a><span class="sd">2017.09.29 (tentative)</span>
<a name="line-75"></a><span class="sd">    Many backwards incompatible changes improving speed and resource usage:</span>
<a name="line-76"></a><span class="sd">    Pass 2268 tests.</span>
<a name="line-77"></a><span class="sd">    Add detail argument to __str__ function. Remove info functions.</span>
<a name="line-78"></a><span class="sd">    Fix potential issue correcting offsets of large LSM files with positions.</span>
<a name="line-79"></a><span class="sd">    Remove TiffFile iterator interface; use TiffFile.pages instead.</span>
<a name="line-80"></a><span class="sd">    Do not make tag values available as TiffPage attributes.</span>
<a name="line-81"></a><span class="sd">    Use str (not bytes) type for tag and metadata strings (WIP).</span>
<a name="line-82"></a><span class="sd">    Use documented standard tag and value names (WIP).</span>
<a name="line-83"></a><span class="sd">    Use enums for some documented TIFF tag values.</span>
<a name="line-84"></a><span class="sd">    Remove 'memmap' and 'tmpfile' options; use out='memmap' instead.</span>
<a name="line-85"></a><span class="sd">    Add option to specify output in asarray functions.</span>
<a name="line-86"></a><span class="sd">    Add option to concurrently decode image strips or tiles using threads.</span>
<a name="line-87"></a><span class="sd">    Add TiffPage.asrgb function (WIP).</span>
<a name="line-88"></a><span class="sd">    Do not apply colormap in asarray.</span>
<a name="line-89"></a><span class="sd">    Remove 'colormapped', 'rgbonly', and 'scale_mdgel' options from asarray.</span>
<a name="line-90"></a><span class="sd">    Consolidate metadata in TiffFile _metadata functions.</span>
<a name="line-91"></a><span class="sd">    Remove non-tag metadata properties from TiffPage.</span>
<a name="line-92"></a><span class="sd">    Add function to convert LSM to tiled BIN files.</span>
<a name="line-93"></a><span class="sd">    Align image data in file.</span>
<a name="line-94"></a><span class="sd">    Make TiffPage.dtype a numpy.dtype.</span>
<a name="line-95"></a><span class="sd">    Add 'ndim' and 'size' properties to TiffPage and TiffPageSeries.</span>
<a name="line-96"></a><span class="sd">    Allow imsave to write non-BigTIFF files up to ~4 GB.</span>
<a name="line-97"></a><span class="sd">    Only read one page for shaped series if possible.</span>
<a name="line-98"></a><span class="sd">    Add memmap function to create memory-mapped array stored in TIFF file.</span>
<a name="line-99"></a><span class="sd">    Add option to save empty arrays to TIFF files.</span>
<a name="line-100"></a><span class="sd">    Add option to save truncated TIFF files.</span>
<a name="line-101"></a><span class="sd">    Allow single tile images to be saved contiguously.</span>
<a name="line-102"></a><span class="sd">    Add optional movie mode for files with uniform pages.</span>
<a name="line-103"></a><span class="sd">    Lazy load pages.</span>
<a name="line-104"></a><span class="sd">    Use lightweight TiffFrame for IFDs sharing properties with key TiffPage.</span>
<a name="line-105"></a><span class="sd">    Move module constants to 'TIFF' namespace (speed up module import).</span>
<a name="line-106"></a><span class="sd">    Remove 'fastij' option from TiffFile.</span>
<a name="line-107"></a><span class="sd">    Remove 'pages' parameter from TiffFile.</span>
<a name="line-108"></a><span class="sd">    Remove TIFFfile alias.</span>
<a name="line-109"></a><span class="sd">    Deprecate Python 2.</span>
<a name="line-110"></a><span class="sd">    Require enum34 and futures packages on Python 2.7.</span>
<a name="line-111"></a><span class="sd">    Remove Record class and return all metadata as dict instead.</span>
<a name="line-112"></a><span class="sd">    Add functions to parse STK, MetaSeries, ScanImage, SVS, Pilatus metadata.</span>
<a name="line-113"></a><span class="sd">    Read tags from EXIF and GPS IFDs.</span>
<a name="line-114"></a><span class="sd">    Use pformat for tag and metadata values.</span>
<a name="line-115"></a><span class="sd">    Fix reading some UIC tags (bug fix).</span>
<a name="line-116"></a><span class="sd">    Do not modify input array in imshow (bug fix).</span>
<a name="line-117"></a><span class="sd">    Fix Python implementation of unpack_ints.</span>
<a name="line-118"></a><span class="sd">2017.05.23</span>
<a name="line-119"></a><span class="sd">    Pass 1961 tests.</span>
<a name="line-120"></a><span class="sd">    Write correct number of sample_format values (bug fix).</span>
<a name="line-121"></a><span class="sd">    Use Adobe deflate code to write ZIP compressed files.</span>
<a name="line-122"></a><span class="sd">    Add option to pass tag values as packed binary data for writing.</span>
<a name="line-123"></a><span class="sd">    Defer tag validation to attribute access.</span>
<a name="line-124"></a><span class="sd">    Use property instead of lazyattr decorator for simple expressions.</span>
<a name="line-125"></a><span class="sd">2017.03.17</span>
<a name="line-126"></a><span class="sd">    Write IFDs and tag values on word boundaries.</span>
<a name="line-127"></a><span class="sd">    Read ScanImage metadata.</span>
<a name="line-128"></a><span class="sd">    Remove is_rgb and is_indexed attributes from TiffFile.</span>
<a name="line-129"></a><span class="sd">    Create files used by doctests.</span>
<a name="line-130"></a><span class="sd">2017.01.12</span>
<a name="line-131"></a><span class="sd">    Read Zeiss SEM metadata.</span>
<a name="line-132"></a><span class="sd">    Read OME-TIFF with invalid references to external files.</span>
<a name="line-133"></a><span class="sd">    Rewrite C LZW decoder (5x faster).</span>
<a name="line-134"></a><span class="sd">    Read corrupted LSM files missing EOI code in LZW stream.</span>
<a name="line-135"></a><span class="sd">2017.01.01</span>
<a name="line-136"></a><span class="sd">    Add option to append images to existing TIFF files.</span>
<a name="line-137"></a><span class="sd">    Read files without pages.</span>
<a name="line-138"></a><span class="sd">    Read S-FEG and Helios NanoLab tags created by FEI software.</span>
<a name="line-139"></a><span class="sd">    Allow saving Color Filter Array (CFA) images.</span>
<a name="line-140"></a><span class="sd">    Add info functions returning more information about TiffFile and TiffPage.</span>
<a name="line-141"></a><span class="sd">    Add option to read specific pages only.</span>
<a name="line-142"></a><span class="sd">    Remove maxpages argument (backwards incompatible).</span>
<a name="line-143"></a><span class="sd">    Remove test_tifffile function.</span>
<a name="line-144"></a><span class="sd">2016.10.28</span>
<a name="line-145"></a><span class="sd">    Pass 1944 tests.</span>
<a name="line-146"></a><span class="sd">    Improve detection of ImageJ hyperstacks.</span>
<a name="line-147"></a><span class="sd">    Read TVIPS metadata created by EM-MENU (by Marco Oster).</span>
<a name="line-148"></a><span class="sd">    Add option to disable using OME-XML metadata.</span>
<a name="line-149"></a><span class="sd">    Allow non-integer range attributes in modulo tags (by Stuart Berg).</span>
<a name="line-150"></a><span class="sd">2016.06.21</span>
<a name="line-151"></a><span class="sd">    Do not always memmap contiguous data in page series.</span>
<a name="line-152"></a><span class="sd">2016.05.13</span>
<a name="line-153"></a><span class="sd">    Add option to specify resolution unit.</span>
<a name="line-154"></a><span class="sd">    Write grayscale images with extra samples when planarconfig is specified.</span>
<a name="line-155"></a><span class="sd">    Do not write RGB color images with 2 samples.</span>
<a name="line-156"></a><span class="sd">    Reorder TiffWriter.save keyword arguments (backwards incompatible).</span>
<a name="line-157"></a><span class="sd">2016.04.18</span>
<a name="line-158"></a><span class="sd">    Pass 1932 tests.</span>
<a name="line-159"></a><span class="sd">    TiffWriter, imread, and imsave accept open binary file streams.</span>
<a name="line-160"></a><span class="sd">2016.04.13</span>
<a name="line-161"></a><span class="sd">    Correctly handle reversed fill order in 2 and 4 bps images (bug fix).</span>
<a name="line-162"></a><span class="sd">    Implement reverse_bitorder in C.</span>
<a name="line-163"></a><span class="sd">2016.03.18</span>
<a name="line-164"></a><span class="sd">    Fix saving additional ImageJ metadata.</span>
<a name="line-165"></a><span class="sd">2016.02.22</span>
<a name="line-166"></a><span class="sd">    Pass 1920 tests.</span>
<a name="line-167"></a><span class="sd">    Write 8 bytes double tag values using offset if necessary (bug fix).</span>
<a name="line-168"></a><span class="sd">    Add option to disable writing second image description tag.</span>
<a name="line-169"></a><span class="sd">    Detect tags with incorrect counts.</span>
<a name="line-170"></a><span class="sd">    Disable color mapping for LSM.</span>
<a name="line-171"></a><span class="sd">2015.11.13</span>
<a name="line-172"></a><span class="sd">    Read LSM 6 mosaics.</span>
<a name="line-173"></a><span class="sd">    Add option to specify directory of memory-mapped files.</span>
<a name="line-174"></a><span class="sd">    Add command line options to specify vmin and vmax values for colormapping.</span>
<a name="line-175"></a><span class="sd">2015.10.06</span>
<a name="line-176"></a><span class="sd">    New helper function to apply colormaps.</span>
<a name="line-177"></a><span class="sd">    Renamed is_palette attributes to is_indexed (backwards incompatible).</span>
<a name="line-178"></a><span class="sd">    Color-mapped samples are now contiguous (backwards incompatible).</span>
<a name="line-179"></a><span class="sd">    Do not color-map ImageJ hyperstacks (backwards incompatible).</span>
<a name="line-180"></a><span class="sd">    Towards supporting Leica SCN.</span>
<a name="line-181"></a><span class="sd">2015.09.25</span>
<a name="line-182"></a><span class="sd">    Read images with reversed bit order (FillOrder is LSB2MSB).</span>
<a name="line-183"></a><span class="sd">2015.09.21</span>
<a name="line-184"></a><span class="sd">    Read RGB OME-TIFF.</span>
<a name="line-185"></a><span class="sd">    Warn about malformed OME-XML.</span>
<a name="line-186"></a><span class="sd">2015.09.16</span>
<a name="line-187"></a><span class="sd">    Detect some corrupted ImageJ metadata.</span>
<a name="line-188"></a><span class="sd">    Better axes labels for 'shaped' files.</span>
<a name="line-189"></a><span class="sd">    Do not create TiffTag for default values.</span>
<a name="line-190"></a><span class="sd">    Chroma subsampling is not supported.</span>
<a name="line-191"></a><span class="sd">    Memory-map data in TiffPageSeries if possible (optional).</span>
<a name="line-192"></a><span class="sd">2015.08.17</span>
<a name="line-193"></a><span class="sd">    Pass 1906 tests.</span>
<a name="line-194"></a><span class="sd">    Write ImageJ hyperstacks (optional).</span>
<a name="line-195"></a><span class="sd">    Read and write LZMA compressed data.</span>
<a name="line-196"></a><span class="sd">    Specify datetime when saving (optional).</span>
<a name="line-197"></a><span class="sd">    Save tiled and color-mapped images (optional).</span>
<a name="line-198"></a><span class="sd">    Ignore void bytecounts and offsets if possible.</span>
<a name="line-199"></a><span class="sd">    Ignore bogus image_depth tag created by ISS Vista software.</span>
<a name="line-200"></a><span class="sd">    Decode floating point horizontal differencing (not tiled).</span>
<a name="line-201"></a><span class="sd">    Save image data contiguously if possible.</span>
<a name="line-202"></a><span class="sd">    Only read first IFD from ImageJ files if possible.</span>
<a name="line-203"></a><span class="sd">    Read ImageJ 'raw' format (files larger than 4 GB).</span>
<a name="line-204"></a><span class="sd">    TiffPageSeries class for pages with compatible shape and data type.</span>
<a name="line-205"></a><span class="sd">    Try to read incomplete tiles.</span>
<a name="line-206"></a><span class="sd">    Open file dialog if no filename is passed on command line.</span>
<a name="line-207"></a><span class="sd">    Ignore errors when decoding OME-XML.</span>
<a name="line-208"></a><span class="sd">    Rename decoder functions (backwards incompatible).</span>
<a name="line-209"></a><span class="sd">2014.08.24</span>
<a name="line-210"></a><span class="sd">    TiffWriter class for incremental writing images.</span>
<a name="line-211"></a><span class="sd">    Simplify examples.</span>
<a name="line-212"></a><span class="sd">2014.08.19</span>
<a name="line-213"></a><span class="sd">    Add memmap function to FileHandle.</span>
<a name="line-214"></a><span class="sd">    Add function to determine if image data in TiffPage is memory-mappable.</span>
<a name="line-215"></a><span class="sd">    Do not close files if multifile_close parameter is False.</span>
<a name="line-216"></a><span class="sd">2014.08.10</span>
<a name="line-217"></a><span class="sd">    Pass 1730 tests.</span>
<a name="line-218"></a><span class="sd">    Return all extrasamples by default (backwards incompatible).</span>
<a name="line-219"></a><span class="sd">    Read data from series of pages into memory-mapped array (optional).</span>
<a name="line-220"></a><span class="sd">    Squeeze OME dimensions (backwards incompatible).</span>
<a name="line-221"></a><span class="sd">    Workaround missing EOI code in strips.</span>
<a name="line-222"></a><span class="sd">    Support image and tile depth tags (SGI extension).</span>
<a name="line-223"></a><span class="sd">    Better handling of STK/UIC tags (backwards incompatible).</span>
<a name="line-224"></a><span class="sd">    Disable color mapping for STK.</span>
<a name="line-225"></a><span class="sd">    Julian to datetime converter.</span>
<a name="line-226"></a><span class="sd">    TIFF ASCII type may be NULL separated.</span>
<a name="line-227"></a><span class="sd">    Unwrap strip offsets for LSM files greater than 4 GB.</span>
<a name="line-228"></a><span class="sd">    Correct strip byte counts in compressed LSM files.</span>
<a name="line-229"></a><span class="sd">    Skip missing files in OME series.</span>
<a name="line-230"></a><span class="sd">    Read embedded TIFF files.</span>
<a name="line-231"></a><span class="sd">2014.02.05</span>
<a name="line-232"></a><span class="sd">    Save rational numbers as type 5 (bug fix).</span>
<a name="line-233"></a><span class="sd">2013.12.20</span>
<a name="line-234"></a><span class="sd">    Keep other files in OME multi-file series closed.</span>
<a name="line-235"></a><span class="sd">    FileHandle class to abstract binary file handle.</span>
<a name="line-236"></a><span class="sd">    Disable color mapping for bad OME-TIFF produced by bio-formats.</span>
<a name="line-237"></a><span class="sd">    Read bad OME-XML produced by ImageJ when cropping.</span>
<a name="line-238"></a><span class="sd">2013.11.03</span>
<a name="line-239"></a><span class="sd">    Allow zlib compress data in imsave function (optional).</span>
<a name="line-240"></a><span class="sd">    Memory-map contiguous image data (optional).</span>
<a name="line-241"></a><span class="sd">2013.10.28</span>
<a name="line-242"></a><span class="sd">    Read MicroManager metadata and little endian ImageJ tag.</span>
<a name="line-243"></a><span class="sd">    Save extra tags in imsave function.</span>
<a name="line-244"></a><span class="sd">    Save tags in ascending order by code (bug fix).</span>
<a name="line-245"></a><span class="sd">2012.10.18</span>
<a name="line-246"></a><span class="sd">    Accept file like objects (read from OIB files).</span>
<a name="line-247"></a><span class="sd">2012.08.21</span>
<a name="line-248"></a><span class="sd">    Rename TIFFfile to TiffFile and TIFFpage to TiffPage.</span>
<a name="line-249"></a><span class="sd">    TiffSequence class for reading sequence of TIFF files.</span>
<a name="line-250"></a><span class="sd">    Read UltraQuant tags.</span>
<a name="line-251"></a><span class="sd">    Allow float numbers as resolution in imsave function.</span>
<a name="line-252"></a><span class="sd">2012.08.03</span>
<a name="line-253"></a><span class="sd">    Read MD GEL tags and NIH Image header.</span>
<a name="line-254"></a><span class="sd">2012.07.25</span>
<a name="line-255"></a><span class="sd">    Read ImageJ tags.</span>
<a name="line-256"></a><span class="sd">    ...</span>
<a name="line-257"></a>
<a name="line-258"></a><span class="sd">Notes</span>
<a name="line-259"></a><span class="sd">-----</span>
<a name="line-260"></a><span class="sd">The API is not stable yet and might change between revisions.</span>
<a name="line-261"></a>
<a name="line-262"></a><span class="sd">Tested on little-endian platforms only.</span>
<a name="line-263"></a>
<a name="line-264"></a><span class="sd">Other Python packages and modules for reading bio-scientific TIFF files:</span>
<a name="line-265"></a>
<a name="line-266"></a><span class="sd">*  `python-bioformats &lt;https://github.com/CellProfiler/python-bioformats&gt;`_</span>
<a name="line-267"></a><span class="sd">*  `Imread &lt;https://github.com/luispedro/imread&gt;`_</span>
<a name="line-268"></a><span class="sd">*  `PyLibTiff &lt;https://github.com/pearu/pylibtiff&gt;`_</span>
<a name="line-269"></a><span class="sd">*  `SimpleITK &lt;http://www.simpleitk.org&gt;`_</span>
<a name="line-270"></a><span class="sd">*  `PyLSM &lt;https://launchpad.net/pylsm&gt;`_</span>
<a name="line-271"></a><span class="sd">*  `PyMca.TiffIO.py &lt;https://github.com/vasole/pymca&gt;`_ (same as fabio.TiffIO)</span>
<a name="line-272"></a><span class="sd">*  `BioImageXD.Readers &lt;http://www.bioimagexd.net/&gt;`_</span>
<a name="line-273"></a><span class="sd">*  `Cellcognition.io &lt;http://cellcognition.org/&gt;`_</span>
<a name="line-274"></a><span class="sd">*  `pymimage &lt;https://github.com/ardoi/pymimage&gt;`_</span>
<a name="line-275"></a>
<a name="line-276"></a><span class="sd">Acknowledgements</span>
<a name="line-277"></a><span class="sd">----------------</span>
<a name="line-278"></a><span class="sd">*   Egor Zindy, University of Manchester, for lsm_scan_info specifics.</span>
<a name="line-279"></a><span class="sd">*   Wim Lewis for a bug fix and some LSM functions.</span>
<a name="line-280"></a><span class="sd">*   Hadrien Mary for help on reading MicroManager files.</span>
<a name="line-281"></a><span class="sd">*   Christian Kliche for help writing tiled and color-mapped files.</span>
<a name="line-282"></a>
<a name="line-283"></a><span class="sd">References</span>
<a name="line-284"></a><span class="sd">----------</span>
<a name="line-285"></a><span class="sd">1)  TIFF 6.0 Specification and Supplements. Adobe Systems Incorporated.</span>
<a name="line-286"></a><span class="sd">    http://partners.adobe.com/public/developer/tiff/</span>
<a name="line-287"></a><span class="sd">2)  TIFF File Format FAQ. http://www.awaresystems.be/imaging/tiff/faq.html</span>
<a name="line-288"></a><span class="sd">3)  MetaMorph Stack (STK) Image File Format.</span>
<a name="line-289"></a><span class="sd">    http://support.meta.moleculardevices.com/docs/t10243.pdf</span>
<a name="line-290"></a><span class="sd">4)  Image File Format Description LSM 5/7 Release 6.0 (ZEN 2010).</span>
<a name="line-291"></a><span class="sd">    Carl Zeiss MicroImaging GmbH. BioSciences. May 10, 2011</span>
<a name="line-292"></a><span class="sd">5)  The OME-TIFF format.</span>
<a name="line-293"></a><span class="sd">    http://www.openmicroscopy.org/site/support/file-formats/ome-tiff</span>
<a name="line-294"></a><span class="sd">6)  UltraQuant(r) Version 6.0 for Windows Start-Up Guide.</span>
<a name="line-295"></a><span class="sd">    http://www.ultralum.com/images%20ultralum/pdf/UQStart%20Up%20Guide.pdf</span>
<a name="line-296"></a><span class="sd">7)  Micro-Manager File Formats.</span>
<a name="line-297"></a><span class="sd">    http://www.micro-manager.org/wiki/Micro-Manager_File_Formats</span>
<a name="line-298"></a><span class="sd">8)  Tags for TIFF and Related Specifications. Digital Preservation.</span>
<a name="line-299"></a><span class="sd">    http://www.digitalpreservation.gov/formats/content/tiff_tags.shtml</span>
<a name="line-300"></a><span class="sd">9)  ScanImage BigTiff Specification - ScanImage 2016.</span>
<a name="line-301"></a><span class="sd">    http://scanimage.vidriotechnologies.com/display/SI2016/</span>
<a name="line-302"></a><span class="sd">    ScanImage+BigTiff+Specification</span>
<a name="line-303"></a><span class="sd">10) CIPA DC-008-2016: Exchangeable image file format for digital still cameras:</span>
<a name="line-304"></a><span class="sd">    Exif Version 2.31.</span>
<a name="line-305"></a><span class="sd">    http://www.cipa.jp/std/documents/e/DC-008-Translation-2016-E.pdf</span>
<a name="line-306"></a>
<a name="line-307"></a><span class="sd">Examples</span>
<a name="line-308"></a><span class="sd">--------</span>
<a name="line-309"></a><span class="sd">&gt;&gt;&gt; # write and read numpy array</span>
<a name="line-310"></a><span class="sd">&gt;&gt;&gt; data = numpy.random.rand(5, 301, 219)</span>
<a name="line-311"></a><span class="sd">&gt;&gt;&gt; imsave('temp.tif', data)</span>
<a name="line-312"></a><span class="sd">&gt;&gt;&gt; image = imread('temp.tif')</span>
<a name="line-313"></a><span class="sd">&gt;&gt;&gt; numpy.testing.assert_array_equal(image, data)</span>
<a name="line-314"></a>
<a name="line-315"></a><span class="sd">&gt;&gt;&gt; # iterate over pages and tags</span>
<a name="line-316"></a><span class="sd">&gt;&gt;&gt; with TiffFile('temp.tif') as tif:</span>
<a name="line-317"></a><span class="sd">...     images = tif.asarray()</span>
<a name="line-318"></a><span class="sd">...     for page in tif.pages:</span>
<a name="line-319"></a><span class="sd">...         for tag in page.tags.values():</span>
<a name="line-320"></a><span class="sd">...             _ = tag.name, tag.value</span>
<a name="line-321"></a><span class="sd">...         image = page.asarray()</span>
<a name="line-322"></a>
<a name="line-323"></a><span class="sd">"""</span>
<a name="line-324"></a>
<a name="line-325"></a><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">division</span><span class="p">,</span> <span class="n">print_function</span>
<a name="line-326"></a>
<a name="line-327"></a><span class="kn">import</span> <span class="nn">sys</span>
<a name="line-328"></a><span class="kn">import</span> <span class="nn">os</span>
<a name="line-329"></a><span class="kn">import</span> <span class="nn">io</span>
<a name="line-330"></a><span class="kn">import</span> <span class="nn">re</span>
<a name="line-331"></a><span class="kn">import</span> <span class="nn">glob</span>
<a name="line-332"></a><span class="kn">import</span> <span class="nn">math</span>
<a name="line-333"></a><span class="kn">import</span> <span class="nn">zlib</span>
<a name="line-334"></a><span class="kn">import</span> <span class="nn">time</span>
<a name="line-335"></a><span class="kn">import</span> <span class="nn">json</span>
<a name="line-336"></a><span class="kn">import</span> <span class="nn">enum</span>
<a name="line-337"></a><span class="kn">import</span> <span class="nn">struct</span>
<a name="line-338"></a><span class="kn">import</span> <span class="nn">warnings</span>
<a name="line-339"></a><span class="kn">import</span> <span class="nn">tempfile</span>
<a name="line-340"></a><span class="kn">import</span> <span class="nn">datetime</span>
<a name="line-341"></a><span class="kn">import</span> <span class="nn">threading</span>
<a name="line-342"></a><span class="kn">import</span> <span class="nn">collections</span>
<a name="line-343"></a><span class="kn">import</span> <span class="nn">multiprocessing</span>
<a name="line-344"></a><span class="kn">import</span> <span class="nn">concurrent.futures</span>
<a name="line-345"></a><span class="c1"># from fractions import Fraction  # delay import</span>
<a name="line-346"></a><span class="c1"># from xml.etree import cElementTree as etree  # delay import</span>
<a name="line-347"></a>
<a name="line-348"></a><span class="kn">import</span> <span class="nn">numpy</span>
<a name="line-349"></a>
<a name="line-350"></a><span class="k">try</span><span class="p">:</span>
<a name="line-351"></a>    <span class="kn">import</span> <span class="nn">lzma</span>
<a name="line-352"></a><span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
<a name="line-353"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-354"></a>        <span class="kn">import</span> <span class="nn">backports.lzma</span> <span class="kn">as</span> <span class="nn">lzma</span>
<a name="line-355"></a>    <span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
<a name="line-356"></a>        <span class="n">lzma</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-357"></a>
<a name="line-358"></a><span class="n">__version__</span> <span class="o">=</span> <span class="s1">'2017.09.29'</span>
<a name="line-359"></a><span class="n">__docformat__</span> <span class="o">=</span> <span class="s1">'restructuredtext en'</span>
<a name="line-360"></a><span class="n">__all__</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-361"></a>    <span class="s1">'imsave'</span><span class="p">,</span> <span class="s1">'imread'</span><span class="p">,</span> <span class="s1">'imshow'</span><span class="p">,</span> <span class="s1">'memmap'</span><span class="p">,</span>
<a name="line-362"></a>    <span class="s1">'TiffFile'</span><span class="p">,</span> <span class="s1">'TiffWriter'</span><span class="p">,</span> <span class="s1">'TiffSequence'</span><span class="p">,</span>
<a name="line-363"></a>    <span class="c1"># utility functions used by oiffile or czifile</span>
<a name="line-364"></a>    <span class="s1">'FileHandle'</span><span class="p">,</span> <span class="s1">'lazyattr'</span><span class="p">,</span> <span class="s1">'natural_sorted'</span><span class="p">,</span> <span class="s1">'decode_lzw'</span><span class="p">,</span> <span class="s1">'stripnull'</span><span class="p">,</span>
<a name="line-365"></a>    <span class="s1">'create_output'</span><span class="p">,</span> <span class="s1">'repeat_nd'</span><span class="p">,</span> <span class="s1">'format_size'</span><span class="p">,</span> <span class="s1">'product'</span><span class="p">)</span>
<a name="line-366"></a>
<a name="line-367"></a>
<a name="line-368"></a><span class="k">def</span> <span class="nf">imread</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-369"></a>    <span class="sd">"""Return image data from TIFF file(s) as numpy array.</span>
<a name="line-370"></a>
<a name="line-371"></a><span class="sd">    Refer to the TiffFile class and member functions for documentation.</span>
<a name="line-372"></a>
<a name="line-373"></a><span class="sd">    Parameters</span>
<a name="line-374"></a><span class="sd">    ----------</span>
<a name="line-375"></a><span class="sd">    files : str, binary stream, or sequence</span>
<a name="line-376"></a><span class="sd">        File name, seekable binary stream, glob pattern, or sequence of</span>
<a name="line-377"></a><span class="sd">        file names.</span>
<a name="line-378"></a><span class="sd">    kwargs : dict</span>
<a name="line-379"></a><span class="sd">        Parameters 'multifile' and 'is_ome' are passed to the TiffFile class.</span>
<a name="line-380"></a><span class="sd">        The 'pattern' parameter is passed to the TiffSequence class.</span>
<a name="line-381"></a><span class="sd">        Other parameters are passed to the asarray functions.</span>
<a name="line-382"></a><span class="sd">        The first image series is returned if no arguments are provided.</span>
<a name="line-383"></a>
<a name="line-384"></a><span class="sd">    Examples</span>
<a name="line-385"></a><span class="sd">    --------</span>
<a name="line-386"></a><span class="sd">    &gt;&gt;&gt; # get image from first page</span>
<a name="line-387"></a><span class="sd">    &gt;&gt;&gt; imsave('temp.tif', numpy.random.rand(3, 4, 301, 219))</span>
<a name="line-388"></a><span class="sd">    &gt;&gt;&gt; im = imread('temp.tif', key=0)</span>
<a name="line-389"></a><span class="sd">    &gt;&gt;&gt; im.shape</span>
<a name="line-390"></a><span class="sd">    (4, 301, 219)</span>
<a name="line-391"></a>
<a name="line-392"></a><span class="sd">    &gt;&gt;&gt; # get images from sequence of files</span>
<a name="line-393"></a><span class="sd">    &gt;&gt;&gt; ims = imread(['temp.tif', 'temp.tif'])</span>
<a name="line-394"></a><span class="sd">    &gt;&gt;&gt; ims.shape</span>
<a name="line-395"></a><span class="sd">    (2, 3, 4, 301, 219)</span>
<a name="line-396"></a>
<a name="line-397"></a><span class="sd">    """</span>
<a name="line-398"></a>    <span class="n">kwargs_file</span> <span class="o">=</span> <span class="n">parse_kwargs</span><span class="p">(</span><span class="n">kwargs</span><span class="p">,</span> <span class="s1">'multifile'</span><span class="p">,</span> <span class="s1">'is_ome'</span><span class="p">)</span>
<a name="line-399"></a>    <span class="n">kwargs_seq</span> <span class="o">=</span> <span class="n">parse_kwargs</span><span class="p">(</span><span class="n">kwargs</span><span class="p">,</span> <span class="s1">'pattern'</span><span class="p">)</span>
<a name="line-400"></a>
<a name="line-401"></a>    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="nb">basestring</span><span class="p">)</span> <span class="ow">and</span> <span class="nb">any</span><span class="p">(</span><span class="n">i</span> <span class="ow">in</span> <span class="n">files</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="s1">'?*'</span><span class="p">):</span>
<a name="line-402"></a>        <span class="n">files</span> <span class="o">=</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="n">files</span><span class="p">)</span>
<a name="line-403"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">files</span><span class="p">:</span>
<a name="line-404"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">'no files found'</span><span class="p">)</span>
<a name="line-405"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="s1">'seek'</span><span class="p">)</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">files</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-406"></a>        <span class="n">files</span> <span class="o">=</span> <span class="n">files</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-407"></a>
<a name="line-408"></a>    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="nb">basestring</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="s1">'seek'</span><span class="p">):</span>
<a name="line-409"></a>        <span class="k">with</span> <span class="n">TiffFile</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs_file</span><span class="p">)</span> <span class="k">as</span> <span class="n">tif</span><span class="p">:</span>
<a name="line-410"></a>            <span class="k">return</span> <span class="n">tif</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-411"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-412"></a>        <span class="k">with</span> <span class="n">TiffSequence</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs_seq</span><span class="p">)</span> <span class="k">as</span> <span class="n">imseq</span><span class="p">:</span>
<a name="line-413"></a>            <span class="k">return</span> <span class="n">imseq</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-414"></a>
<a name="line-415"></a>
<a name="line-416"></a><span class="k">def</span> <span class="nf">imsave</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">bigsize</span><span class="o">=</span><span class="mi">2</span><span class="o">**</span><span class="mi">32</span><span class="o">-</span><span class="mi">2</span><span class="o">**</span><span class="mi">25</span><span class="p">,</span>
<a name="line-417"></a>           <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-418"></a>    <span class="sd">"""Write numpy array to TIFF file.</span>
<a name="line-419"></a>
<a name="line-420"></a><span class="sd">    Refer to the TiffWriter class and member functions for documentation.</span>
<a name="line-421"></a>
<a name="line-422"></a><span class="sd">    Parameters</span>
<a name="line-423"></a><span class="sd">    ----------</span>
<a name="line-424"></a><span class="sd">    file : str or binary stream</span>
<a name="line-425"></a><span class="sd">        File name or writable binary stream, such as a open file or BytesIO.</span>
<a name="line-426"></a><span class="sd">    data : array_like</span>
<a name="line-427"></a><span class="sd">        Input image. The last dimensions are assumed to be image depth,</span>
<a name="line-428"></a><span class="sd">        height, width, and samples.</span>
<a name="line-429"></a><span class="sd">        If data is None, an empty array of the specified shape and dtype is</span>
<a name="line-430"></a><span class="sd">        saved to file.</span>
<a name="line-431"></a><span class="sd">    shape : tuple</span>
<a name="line-432"></a><span class="sd">        If data is None, shape of an empty array to save to the file.</span>
<a name="line-433"></a><span class="sd">    dtype : numpy.dtype</span>
<a name="line-434"></a><span class="sd">        If data is None, data-type of an empty array to save to the file.</span>
<a name="line-435"></a><span class="sd">    bigsize : int</span>
<a name="line-436"></a><span class="sd">        Create a BigTIFF file if the size of data in bytes is larger than</span>
<a name="line-437"></a><span class="sd">        this threshold and 'imagej' or 'truncate' are not enabled.</span>
<a name="line-438"></a><span class="sd">        By default, the threshold is 4 GB minus 32 MB reserved for metadata.</span>
<a name="line-439"></a><span class="sd">        Use the 'bigtiff' parameter to explicitly specify the type of</span>
<a name="line-440"></a><span class="sd">        file created.</span>
<a name="line-441"></a><span class="sd">    kwargs : dict</span>
<a name="line-442"></a><span class="sd">        Parameters 'append', 'byteorder', 'bigtiff', 'software', and 'imagej',</span>
<a name="line-443"></a><span class="sd">        are passed to TiffWriter().</span>
<a name="line-444"></a><span class="sd">        Other parameters are passed to TiffWriter.save().</span>
<a name="line-445"></a>
<a name="line-446"></a><span class="sd">    Returns</span>
<a name="line-447"></a><span class="sd">    -------</span>
<a name="line-448"></a><span class="sd">    If the image data are written contiguously, return offset and bytecount</span>
<a name="line-449"></a><span class="sd">    of image data in the file.</span>
<a name="line-450"></a>
<a name="line-451"></a><span class="sd">    Examples</span>
<a name="line-452"></a><span class="sd">    --------</span>
<a name="line-453"></a><span class="sd">    &gt;&gt;&gt; # save a RGB image</span>
<a name="line-454"></a><span class="sd">    &gt;&gt;&gt; data = numpy.random.randint(0, 255, (256, 256, 3), 'uint8')</span>
<a name="line-455"></a><span class="sd">    &gt;&gt;&gt; imsave('temp.tif', data, photometric='rgb')</span>
<a name="line-456"></a>
<a name="line-457"></a><span class="sd">    &gt;&gt;&gt; # save a random array and metadata, using compression</span>
<a name="line-458"></a><span class="sd">    &gt;&gt;&gt; data = numpy.random.rand(2, 5, 3, 301, 219)</span>
<a name="line-459"></a><span class="sd">    &gt;&gt;&gt; imsave('temp.tif', data, compress=6, metadata={'axes': 'TZCYX'})</span>
<a name="line-460"></a>
<a name="line-461"></a><span class="sd">    """</span>
<a name="line-462"></a>    <span class="n">tifargs</span> <span class="o">=</span> <span class="n">parse_kwargs</span><span class="p">(</span><span class="n">kwargs</span><span class="p">,</span> <span class="s1">'append'</span><span class="p">,</span> <span class="s1">'bigtiff'</span><span class="p">,</span> <span class="s1">'byteorder'</span><span class="p">,</span>
<a name="line-463"></a>                           <span class="s1">'software'</span><span class="p">,</span> <span class="s1">'imagej'</span><span class="p">)</span>
<a name="line-464"></a>    <span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-465"></a>        <span class="n">size</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">*</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span><span class="o">.</span><span class="n">itemsize</span>
<a name="line-466"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-467"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-468"></a>            <span class="n">size</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">nbytes</span>
<a name="line-469"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-470"></a>            <span class="n">size</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-471"></a>    <span class="k">if</span> <span class="n">size</span> <span class="o">&gt;</span> <span class="n">bigsize</span> <span class="ow">and</span> <span class="s1">'bigtiff'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">tifargs</span> <span class="ow">and</span> <span class="ow">not</span> <span class="p">(</span>
<a name="line-472"></a>            <span class="n">tifargs</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'imagej'</span><span class="p">,</span> <span class="bp">False</span><span class="p">)</span> <span class="ow">or</span> <span class="n">tifargs</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'truncate'</span><span class="p">,</span> <span class="bp">False</span><span class="p">)):</span>
<a name="line-473"></a>        <span class="n">tifargs</span><span class="p">[</span><span class="s1">'bigtiff'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-474"></a>
<a name="line-475"></a>    <span class="k">with</span> <span class="n">TiffWriter</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="o">**</span><span class="n">tifargs</span><span class="p">)</span> <span class="k">as</span> <span class="n">tif</span><span class="p">:</span>
<a name="line-476"></a>        <span class="k">return</span> <span class="n">tif</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-477"></a>
<a name="line-478"></a>
<a name="line-479"></a><span class="k">def</span> <span class="nf">memmap</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">page</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">series</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">'r+'</span><span class="p">,</span>
<a name="line-480"></a>           <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-481"></a>    <span class="sd">"""Return memory-mapped numpy array stored in TIFF file.</span>
<a name="line-482"></a>
<a name="line-483"></a><span class="sd">    Memory-mapping requires data stored in native byte order, without tiling,</span>
<a name="line-484"></a><span class="sd">    compression, predictors, etc.</span>
<a name="line-485"></a><span class="sd">    If shape and dtype are provided, existing files will be overwritten or</span>
<a name="line-486"></a><span class="sd">    appended to depending on the 'append' parameter.</span>
<a name="line-487"></a><span class="sd">    Otherwise the image data of a specified page or series in an existing</span>
<a name="line-488"></a><span class="sd">    file will be memory-mapped. By default, the image data of the first page</span>
<a name="line-489"></a><span class="sd">    series is memory-mapped.</span>
<a name="line-490"></a><span class="sd">    Call flush() to write any changes in the array to the file.</span>
<a name="line-491"></a><span class="sd">    Raise ValueError if the image data in the file is not memory-mappable</span>
<a name="line-492"></a>
<a name="line-493"></a><span class="sd">    Parameters</span>
<a name="line-494"></a><span class="sd">    ----------</span>
<a name="line-495"></a><span class="sd">    filename : str</span>
<a name="line-496"></a><span class="sd">        Name of the TIFF file which stores the array.</span>
<a name="line-497"></a><span class="sd">    shape : tuple</span>
<a name="line-498"></a><span class="sd">        Shape of the empty array.</span>
<a name="line-499"></a><span class="sd">    dtype : numpy.dtype</span>
<a name="line-500"></a><span class="sd">        Data-type of the empty array.</span>
<a name="line-501"></a><span class="sd">    page : int</span>
<a name="line-502"></a><span class="sd">        Index of the page which image data to memory-map.</span>
<a name="line-503"></a><span class="sd">    series : int</span>
<a name="line-504"></a><span class="sd">        Index of the page series which image data to memory-map.</span>
<a name="line-505"></a><span class="sd">    mode : {'r+', 'r', 'c'}, optional</span>
<a name="line-506"></a><span class="sd">        The file open mode. Default is to open existing file for reading and</span>
<a name="line-507"></a><span class="sd">        writing ('r+').</span>
<a name="line-508"></a><span class="sd">    kwargs : dict</span>
<a name="line-509"></a><span class="sd">        Additional parameters passed to imsave() or TiffFile().</span>
<a name="line-510"></a>
<a name="line-511"></a><span class="sd">    Examples</span>
<a name="line-512"></a><span class="sd">    --------</span>
<a name="line-513"></a><span class="sd">    &gt;&gt;&gt; # create an empty TIFF file and write to memory-mapped image</span>
<a name="line-514"></a><span class="sd">    &gt;&gt;&gt; im = memmap('temp.tif', shape=(256, 256), dtype='float32')</span>
<a name="line-515"></a><span class="sd">    &gt;&gt;&gt; im[255, 255] = 1.0</span>
<a name="line-516"></a><span class="sd">    &gt;&gt;&gt; im.flush()</span>
<a name="line-517"></a><span class="sd">    &gt;&gt;&gt; im.shape, im.dtype</span>
<a name="line-518"></a><span class="sd">    ((256, 256), dtype('float32'))</span>
<a name="line-519"></a><span class="sd">    &gt;&gt;&gt; del im</span>
<a name="line-520"></a>
<a name="line-521"></a><span class="sd">    &gt;&gt;&gt; # memory-map image data in a TIFF file</span>
<a name="line-522"></a><span class="sd">    &gt;&gt;&gt; im = memmap('temp.tif', page=0)</span>
<a name="line-523"></a><span class="sd">    &gt;&gt;&gt; im[255, 255]</span>
<a name="line-524"></a><span class="sd">    1.0</span>
<a name="line-525"></a>
<a name="line-526"></a><span class="sd">    """</span>
<a name="line-527"></a>    <span class="k">if</span> <span class="n">shape</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span> <span class="ow">and</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-528"></a>        <span class="c1"># create a new, empty array</span>
<a name="line-529"></a>        <span class="n">kwargs</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">dtype</span><span class="p">,</span> <span class="n">returnoffset</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
<a name="line-530"></a>                      <span class="n">align</span><span class="o">=</span><span class="n">TIFF</span><span class="o">.</span><span class="n">ALLOCATIONGRANULARITY</span><span class="p">)</span>
<a name="line-531"></a>        <span class="n">result</span> <span class="o">=</span> <span class="n">imsave</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-532"></a>        <span class="k">if</span> <span class="n">result</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-533"></a>            <span class="c1"># TODO: fail before creating file or writing data</span>
<a name="line-534"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"image data is not memory-mappable"</span><span class="p">)</span>
<a name="line-535"></a>        <span class="n">offset</span> <span class="o">=</span> <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-536"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-537"></a>        <span class="c1"># use existing file</span>
<a name="line-538"></a>        <span class="k">with</span> <span class="n">TiffFile</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span> <span class="k">as</span> <span class="n">tif</span><span class="p">:</span>
<a name="line-539"></a>            <span class="k">if</span> <span class="n">page</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-540"></a>                <span class="n">page</span> <span class="o">=</span> <span class="n">tif</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="n">page</span><span class="p">]</span>
<a name="line-541"></a>                <span class="k">if</span> <span class="ow">not</span> <span class="n">page</span><span class="o">.</span><span class="n">is_memmappable</span><span class="p">:</span>
<a name="line-542"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"image data is not memory-mappable"</span><span class="p">)</span>
<a name="line-543"></a>                <span class="n">offset</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">is_contiguous</span>
<a name="line-544"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span>
<a name="line-545"></a>                <span class="n">dtype</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-546"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-547"></a>                <span class="n">series</span> <span class="o">=</span> <span class="n">tif</span><span class="o">.</span><span class="n">series</span><span class="p">[</span><span class="n">series</span><span class="p">]</span>
<a name="line-548"></a>                <span class="k">if</span> <span class="n">series</span><span class="o">.</span><span class="n">offset</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-549"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"image data is not memory-mappable"</span><span class="p">)</span>
<a name="line-550"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span>
<a name="line-551"></a>                <span class="n">dtype</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-552"></a>                <span class="n">offset</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">offset</span>
<a name="line-553"></a>    <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">memmap</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">offset</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="s1">'C'</span><span class="p">)</span>
<a name="line-554"></a>
<a name="line-555"></a>
<a name="line-556"></a><span class="k">class</span> <span class="nc">lazyattr</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-557"></a>    <span class="sd">"""Attribute whose value is computed on first access."""</span>
<a name="line-558"></a>    <span class="c1"># TODO: help() doesn't work</span>
<a name="line-559"></a>    <span class="vm">__slots__</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'func'</span><span class="p">,)</span>
<a name="line-560"></a>
<a name="line-561"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">func</span><span class="p">):</span>
<a name="line-562"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">func</span> <span class="o">=</span> <span class="n">func</span>
<a name="line-563"></a>        <span class="c1"># self.__name__ = func.__name__</span>
<a name="line-564"></a>        <span class="c1"># self.__doc__ = func.__doc__</span>
<a name="line-565"></a>        <span class="c1"># self.lock = threading.RLock()</span>
<a name="line-566"></a>
<a name="line-567"></a>    <span class="k">def</span> <span class="fm">__get__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">):</span>
<a name="line-568"></a>        <span class="c1"># with self.lock:</span>
<a name="line-569"></a>        <span class="k">if</span> <span class="n">instance</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-570"></a>            <span class="k">return</span> <span class="bp">self</span>
<a name="line-571"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-572"></a>            <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">func</span><span class="p">(</span><span class="n">instance</span><span class="p">)</span>
<a name="line-573"></a>        <span class="k">except</span> <span class="ne">AttributeError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-574"></a>            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
<a name="line-575"></a>        <span class="k">if</span> <span class="n">value</span> <span class="ow">is</span> <span class="bp">NotImplemented</span><span class="p">:</span>
<a name="line-576"></a>            <span class="k">return</span> <span class="nb">getattr</span><span class="p">(</span><span class="nb">super</span><span class="p">(</span><span class="n">owner</span><span class="p">,</span> <span class="n">instance</span><span class="p">),</span> <span class="bp">self</span><span class="o">.</span><span class="n">func</span><span class="o">.</span><span class="vm">__name__</span><span class="p">)</span>
<a name="line-577"></a>        <span class="nb">setattr</span><span class="p">(</span><span class="n">instance</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">func</span><span class="o">.</span><span class="vm">__name__</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
<a name="line-578"></a>        <span class="k">return</span> <span class="n">value</span>
<a name="line-579"></a>
<a name="line-580"></a>
<a name="line-581"></a><span class="k">class</span> <span class="nc">TiffWriter</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-582"></a>    <span class="sd">"""Write numpy arrays to TIFF file.</span>
<a name="line-583"></a>
<a name="line-584"></a><span class="sd">    TiffWriter instances must be closed using the 'close' method, which is</span>
<a name="line-585"></a><span class="sd">    automatically called when using the 'with' context manager.</span>
<a name="line-586"></a>
<a name="line-587"></a><span class="sd">    TiffWriter's main purpose is saving nD numpy array's as TIFF,</span>
<a name="line-588"></a><span class="sd">    not to create any possible TIFF format. Specifically, JPEG compression,</span>
<a name="line-589"></a><span class="sd">    SubIFDs, ExifIFD, or GPSIFD tags are not supported.</span>
<a name="line-590"></a>
<a name="line-591"></a><span class="sd">    Examples</span>
<a name="line-592"></a><span class="sd">    --------</span>
<a name="line-593"></a><span class="sd">    &gt;&gt;&gt; # successively append images to BigTIFF file</span>
<a name="line-594"></a><span class="sd">    &gt;&gt;&gt; data = numpy.random.rand(2, 5, 3, 301, 219)</span>
<a name="line-595"></a><span class="sd">    &gt;&gt;&gt; with TiffWriter('temp.tif', bigtiff=True) as tif:</span>
<a name="line-596"></a><span class="sd">    ...     for i in range(data.shape[0]):</span>
<a name="line-597"></a><span class="sd">    ...         tif.save(data[i], compress=6)</span>
<a name="line-598"></a>
<a name="line-599"></a><span class="sd">    """</span>
<a name="line-600"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">file</span><span class="p">,</span> <span class="n">bigtiff</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-601"></a>                 <span class="n">software</span><span class="o">=</span><span class="s1">'tifffile.py'</span><span class="p">,</span> <span class="n">append</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">imagej</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
<a name="line-602"></a>        <span class="sd">"""Open a TIFF file for writing.</span>
<a name="line-603"></a>
<a name="line-604"></a><span class="sd">        An empty TIFF file is created if the file does not exist, else the</span>
<a name="line-605"></a><span class="sd">        file is overwritten with an empty empty TIFF file unless 'append'</span>
<a name="line-606"></a><span class="sd">        is true. Use bigtiff=True when creating files larger than 4 GB.</span>
<a name="line-607"></a>
<a name="line-608"></a><span class="sd">        Parameters</span>
<a name="line-609"></a><span class="sd">        ----------</span>
<a name="line-610"></a><span class="sd">        file : str, binary stream, or FileHandle</span>
<a name="line-611"></a><span class="sd">            File name or writable binary stream, such as a open file</span>
<a name="line-612"></a><span class="sd">            or BytesIO.</span>
<a name="line-613"></a><span class="sd">        bigtiff : bool</span>
<a name="line-614"></a><span class="sd">            If True, the BigTIFF format is used.</span>
<a name="line-615"></a><span class="sd">        byteorder : {'&lt;', '&gt;'}</span>
<a name="line-616"></a><span class="sd">            The endianness of the data in the file.</span>
<a name="line-617"></a><span class="sd">            By default, this is the system's native byte order.</span>
<a name="line-618"></a><span class="sd">        software : str</span>
<a name="line-619"></a><span class="sd">            Name of the software used to create the file.</span>
<a name="line-620"></a><span class="sd">            Saved with the first page in the file only.</span>
<a name="line-621"></a><span class="sd">            Must be 7-bit ASCII.</span>
<a name="line-622"></a><span class="sd">        append : bool</span>
<a name="line-623"></a><span class="sd">            If True and 'file' is an existing standard TIFF file, image data</span>
<a name="line-624"></a><span class="sd">            and tags are appended to the file.</span>
<a name="line-625"></a><span class="sd">            Appending data may corrupt specifically formatted TIFF files</span>
<a name="line-626"></a><span class="sd">            such as LSM, STK, ImageJ, NIH, or FluoView.</span>
<a name="line-627"></a><span class="sd">        imagej : bool</span>
<a name="line-628"></a><span class="sd">            If True, write an ImageJ hyperstack compatible file.</span>
<a name="line-629"></a><span class="sd">            This format can handle data types uint8, uint16, or float32 and</span>
<a name="line-630"></a><span class="sd">            data shapes up to 6 dimensions in TZCYXS order.</span>
<a name="line-631"></a><span class="sd">            RGB images (S=3 or S=4) must be uint8.</span>
<a name="line-632"></a><span class="sd">            ImageJ's default byte order is big endian but this implementation</span>
<a name="line-633"></a><span class="sd">            uses the system's native byte order by default.</span>
<a name="line-634"></a><span class="sd">            ImageJ does not support BigTIFF format or LZMA compression.</span>
<a name="line-635"></a><span class="sd">            The ImageJ file format is undocumented.</span>
<a name="line-636"></a>
<a name="line-637"></a><span class="sd">        """</span>
<a name="line-638"></a>        <span class="k">if</span> <span class="n">append</span><span class="p">:</span>
<a name="line-639"></a>            <span class="c1"># determine if file is an existing TIFF file that can be extended</span>
<a name="line-640"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-641"></a>                <span class="k">with</span> <span class="n">FileHandle</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">'rb'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span> <span class="k">as</span> <span class="n">fh</span><span class="p">:</span>
<a name="line-642"></a>                    <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-643"></a>                    <span class="k">try</span><span class="p">:</span>
<a name="line-644"></a>                        <span class="k">with</span> <span class="n">TiffFile</span><span class="p">(</span><span class="n">fh</span><span class="p">)</span> <span class="k">as</span> <span class="n">tif</span><span class="p">:</span>
<a name="line-645"></a>                            <span class="k">if</span> <span class="p">(</span><span class="n">append</span> <span class="o">!=</span> <span class="s1">'force'</span> <span class="ow">and</span>
<a name="line-646"></a>                                    <span class="nb">any</span><span class="p">(</span><span class="nb">getattr</span><span class="p">(</span><span class="n">tif</span><span class="p">,</span> <span class="s1">'is_'</span><span class="o">+</span><span class="n">a</span><span class="p">)</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="p">(</span>
<a name="line-647"></a>                                        <span class="s1">'lsm'</span><span class="p">,</span> <span class="s1">'stk'</span><span class="p">,</span> <span class="s1">'imagej'</span><span class="p">,</span> <span class="s1">'nih'</span><span class="p">,</span>
<a name="line-648"></a>                                        <span class="s1">'fluoview'</span><span class="p">,</span> <span class="s1">'micromanager'</span><span class="p">))):</span>
<a name="line-649"></a>                                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"file contains metadata"</span><span class="p">)</span>
<a name="line-650"></a>                            <span class="n">byteorder</span> <span class="o">=</span> <span class="n">tif</span><span class="o">.</span><span class="n">byteorder</span>
<a name="line-651"></a>                            <span class="n">bigtiff</span> <span class="o">=</span> <span class="n">tif</span><span class="o">.</span><span class="n">is_bigtiff</span>
<a name="line-652"></a>                            <span class="bp">self</span><span class="o">.</span><span class="n">_ifdoffset</span> <span class="o">=</span> <span class="n">tif</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">next_page_offset</span>
<a name="line-653"></a>                            <span class="k">if</span> <span class="n">tif</span><span class="o">.</span><span class="n">pages</span><span class="p">:</span>
<a name="line-654"></a>                                <span class="n">software</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-655"></a>                    <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-656"></a>                        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"can not append to file: </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
<a name="line-657"></a>                    <span class="k">finally</span><span class="p">:</span>
<a name="line-658"></a>                        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-659"></a>            <span class="k">except</span> <span class="p">(</span><span class="ne">IOError</span><span class="p">,</span> <span class="n">FileNotFoundError</span><span class="p">):</span>
<a name="line-660"></a>                <span class="n">append</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-661"></a>
<a name="line-662"></a>        <span class="k">if</span> <span class="n">byteorder</span> <span class="ow">in</span> <span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="s1">'='</span><span class="p">):</span>
<a name="line-663"></a>            <span class="n">byteorder</span> <span class="o">=</span> <span class="s1">'&lt;'</span> <span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'little'</span> <span class="k">else</span> <span class="s1">'&gt;'</span>
<a name="line-664"></a>        <span class="k">elif</span> <span class="n">byteorder</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'&lt;'</span><span class="p">,</span> <span class="s1">'&gt;'</span><span class="p">):</span>
<a name="line-665"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid byteorder </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">byteorder</span><span class="p">)</span>
<a name="line-666"></a>        <span class="k">if</span> <span class="n">imagej</span> <span class="ow">and</span> <span class="n">bigtiff</span><span class="p">:</span>
<a name="line-667"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"writing incompatible BigTIFF ImageJ"</span><span class="p">)</span>
<a name="line-668"></a>
<a name="line-669"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_byteorder</span> <span class="o">=</span> <span class="n">byteorder</span>
<a name="line-670"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_software</span> <span class="o">=</span> <span class="n">software</span>
<a name="line-671"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span> <span class="o">=</span> <span class="nb">bool</span><span class="p">(</span><span class="n">imagej</span><span class="p">)</span>
<a name="line-672"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_truncate</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-673"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_metadata</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-674"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_colormap</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-675"></a>
<a name="line-676"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionoffset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-677"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlen</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-678"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlenoffset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-679"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_tags</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-680"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># normalized shape of data in consecutive pages</span>
<a name="line-681"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># shape of data in consecutive pages</span>
<a name="line-682"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_datadtype</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># data type</span>
<a name="line-683"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_dataoffset</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># offset to data</span>
<a name="line-684"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_databytecounts</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># byte counts per plane</span>
<a name="line-685"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_tagoffsets</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># strip or tile offset tag code</span>
<a name="line-686"></a>
<a name="line-687"></a>        <span class="k">if</span> <span class="n">bigtiff</span><span class="p">:</span>
<a name="line-688"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_bigtiff</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-689"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_offsetsize</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-690"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_tagsize</span> <span class="o">=</span> <span class="mi">20</span>
<a name="line-691"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_tagnoformat</span> <span class="o">=</span> <span class="s1">'Q'</span>
<a name="line-692"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_offsetformat</span> <span class="o">=</span> <span class="s1">'Q'</span>
<a name="line-693"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_valueformat</span> <span class="o">=</span> <span class="s1">'8s'</span>
<a name="line-694"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-695"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_bigtiff</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-696"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_offsetsize</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-697"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_tagsize</span> <span class="o">=</span> <span class="mi">12</span>
<a name="line-698"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_tagnoformat</span> <span class="o">=</span> <span class="s1">'H'</span>
<a name="line-699"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_offsetformat</span> <span class="o">=</span> <span class="s1">'I'</span>
<a name="line-700"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_valueformat</span> <span class="o">=</span> <span class="s1">'4s'</span>
<a name="line-701"></a>
<a name="line-702"></a>        <span class="k">if</span> <span class="n">append</span><span class="p">:</span>
<a name="line-703"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="o">=</span> <span class="n">FileHandle</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">'r+b'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<a name="line-704"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-705"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-706"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="o">=</span> <span class="n">FileHandle</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">'wb'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<a name="line-707"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">({</span><span class="s1">'&lt;'</span><span class="p">:</span> <span class="sa">b</span><span class="s1">'II'</span><span class="p">,</span> <span class="s1">'&gt;'</span><span class="p">:</span> <span class="sa">b</span><span class="s1">'MM'</span><span class="p">}[</span><span class="n">byteorder</span><span class="p">])</span>
<a name="line-708"></a>            <span class="k">if</span> <span class="n">bigtiff</span><span class="p">:</span>
<a name="line-709"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="s1">'HHH'</span><span class="p">,</span> <span class="mi">43</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<a name="line-710"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-711"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="s1">'H'</span><span class="p">,</span> <span class="mi">42</span><span class="p">))</span>
<a name="line-712"></a>            <span class="c1"># first IFD</span>
<a name="line-713"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_ifdoffset</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-714"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="bp">self</span><span class="o">.</span><span class="n">_offsetformat</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<a name="line-715"></a>
<a name="line-716"></a>    <span class="k">def</span> <span class="nf">save</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">returnoffset</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
<a name="line-717"></a>             <span class="n">photometric</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">planarconfig</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">tile</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-718"></a>             <span class="n">contiguous</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">align</span><span class="o">=</span><span class="mi">16</span><span class="p">,</span> <span class="n">truncate</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">compress</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
<a name="line-719"></a>             <span class="n">colormap</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">description</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">datetime</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">resolution</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-720"></a>             <span class="n">metadata</span><span class="o">=</span><span class="p">{},</span> <span class="n">extratags</span><span class="o">=</span><span class="p">()):</span>
<a name="line-721"></a>        <span class="sd">"""Write numpy array and tags to TIFF file.</span>
<a name="line-722"></a>
<a name="line-723"></a><span class="sd">        The data shape's last dimensions are assumed to be image depth,</span>
<a name="line-724"></a><span class="sd">        height (length), width, and samples.</span>
<a name="line-725"></a><span class="sd">        If a colormap is provided, the data's dtype must be uint8 or uint16</span>
<a name="line-726"></a><span class="sd">        and the data values are indices into the last dimension of the</span>
<a name="line-727"></a><span class="sd">        colormap.</span>
<a name="line-728"></a><span class="sd">        If shape and dtype are specified, an empty array is saved.</span>
<a name="line-729"></a><span class="sd">        This option can not be used with compression or multiple tiles.</span>
<a name="line-730"></a><span class="sd">        Image data are written in one stripe per plane by default.</span>
<a name="line-731"></a><span class="sd">        Dimensions larger than 2 to 4 (depending on photometric mode, planar</span>
<a name="line-732"></a><span class="sd">        configuration, and SGI mode) are flattened and saved as separate pages.</span>
<a name="line-733"></a><span class="sd">        The 'SampleFormat' and 'BitsPerSample' tags are derived from</span>
<a name="line-734"></a><span class="sd">        the data type.</span>
<a name="line-735"></a>
<a name="line-736"></a><span class="sd">        Parameters</span>
<a name="line-737"></a><span class="sd">        ----------</span>
<a name="line-738"></a><span class="sd">        data : numpy.ndarray or None</span>
<a name="line-739"></a><span class="sd">            Input image array.</span>
<a name="line-740"></a><span class="sd">        shape : tuple or None</span>
<a name="line-741"></a><span class="sd">            Shape of the empty array to save. Used only if data is None.</span>
<a name="line-742"></a><span class="sd">        dtype : numpy.dtype or None</span>
<a name="line-743"></a><span class="sd">            Data-type of the empty array to save. Used only if data is None.</span>
<a name="line-744"></a><span class="sd">        returnoffset : bool</span>
<a name="line-745"></a><span class="sd">            If True and the image data in the file is memory-mappable, return</span>
<a name="line-746"></a><span class="sd">            the offset and number of bytes of the image data in the file.</span>
<a name="line-747"></a><span class="sd">        photometric : {'MINISBLACK', 'MINISWHITE', 'RGB', 'PALETTE', 'CFA'}</span>
<a name="line-748"></a><span class="sd">            The color space of the image data.</span>
<a name="line-749"></a><span class="sd">            By default, this setting is inferred from the data shape and the</span>
<a name="line-750"></a><span class="sd">            value of colormap.</span>
<a name="line-751"></a><span class="sd">            For CFA images, DNG tags must be specified in extratags.</span>
<a name="line-752"></a><span class="sd">        planarconfig : {'CONTIG', 'SEPARATE'}</span>
<a name="line-753"></a><span class="sd">            Specifies if samples are stored contiguous or in separate planes.</span>
<a name="line-754"></a><span class="sd">            By default, this setting is inferred from the data shape.</span>
<a name="line-755"></a><span class="sd">            If this parameter is set, extra samples are used to store grayscale</span>
<a name="line-756"></a><span class="sd">            images.</span>
<a name="line-757"></a><span class="sd">            'CONTIG': last dimension contains samples.</span>
<a name="line-758"></a><span class="sd">            'SEPARATE': third last dimension contains samples.</span>
<a name="line-759"></a><span class="sd">        tile : tuple of int</span>
<a name="line-760"></a><span class="sd">            The shape (depth, length, width) of image tiles to write.</span>
<a name="line-761"></a><span class="sd">            If None (default), image data are written in one stripe per plane.</span>
<a name="line-762"></a><span class="sd">            The tile length and width must be a multiple of 16.</span>
<a name="line-763"></a><span class="sd">            If the tile depth is provided, the SGI ImageDepth and TileDepth</span>
<a name="line-764"></a><span class="sd">            tags are used to save volume data.</span>
<a name="line-765"></a><span class="sd">            Unless a single tile is used, tiles cannot be used to write</span>
<a name="line-766"></a><span class="sd">            contiguous files.</span>
<a name="line-767"></a><span class="sd">            Few software can read the SGI format, e.g. MeVisLab.</span>
<a name="line-768"></a><span class="sd">        contiguous : bool</span>
<a name="line-769"></a><span class="sd">            If True (default) and the data and parameters are compatible with</span>
<a name="line-770"></a><span class="sd">            previous ones, if any, the image data are stored contiguously after</span>
<a name="line-771"></a><span class="sd">            the previous one. Parameters 'photometric' and 'planarconfig'</span>
<a name="line-772"></a><span class="sd">            are ignored. Parameters 'description', datetime', and 'extratags'</span>
<a name="line-773"></a><span class="sd">            are written to the first page of a contiguous series only.</span>
<a name="line-774"></a><span class="sd">        align : int</span>
<a name="line-775"></a><span class="sd">            Byte boundary on which to align the image data in the file.</span>
<a name="line-776"></a><span class="sd">            Default 16. Use mmap.ALLOCATIONGRANULARITY for memory-mapped data.</span>
<a name="line-777"></a><span class="sd">            Following contiguous writes are not aligned.</span>
<a name="line-778"></a><span class="sd">        truncate : bool</span>
<a name="line-779"></a><span class="sd">            If True, only write the first page including shape metadata if</span>
<a name="line-780"></a><span class="sd">            possible (uncompressed, contiguous, not tiled).</span>
<a name="line-781"></a><span class="sd">            Other TIFF readers will only be able to read part of the data.</span>
<a name="line-782"></a><span class="sd">        compress : int or 'LZMA'</span>
<a name="line-783"></a><span class="sd">            Values from 0 to 9 controlling the level of zlib compression.</span>
<a name="line-784"></a><span class="sd">            If 0, data are written uncompressed (default).</span>
<a name="line-785"></a><span class="sd">            Compression cannot be used to write contiguous files.</span>
<a name="line-786"></a><span class="sd">            If 'LZMA', LZMA compression is used, which is not available on</span>
<a name="line-787"></a><span class="sd">            all platforms.</span>
<a name="line-788"></a><span class="sd">        colormap : numpy.ndarray</span>
<a name="line-789"></a><span class="sd">            RGB color values for the corresponding data value.</span>
<a name="line-790"></a><span class="sd">            Must be of shape (3, 2**(data.itemsize*8)) and dtype uint16.</span>
<a name="line-791"></a><span class="sd">        description : str</span>
<a name="line-792"></a><span class="sd">            The subject of the image. Must be 7-bit ASCII. Cannot be used with</span>
<a name="line-793"></a><span class="sd">            the ImageJ format. Saved with the first page only.</span>
<a name="line-794"></a><span class="sd">        datetime : datetime</span>
<a name="line-795"></a><span class="sd">            Date and time of image creation. If None (default), the current</span>
<a name="line-796"></a><span class="sd">            date and time is used. Saved with the first page only.</span>
<a name="line-797"></a><span class="sd">        resolution : (float, float[, str]) or ((int, int), (int, int)[, str])</span>
<a name="line-798"></a><span class="sd">            X and Y resolutions in pixels per resolution unit as float or</span>
<a name="line-799"></a><span class="sd">            rational numbers. A third, optional parameter specifies the</span>
<a name="line-800"></a><span class="sd">            resolution unit, which must be None (default for ImageJ),</span>
<a name="line-801"></a><span class="sd">            'INCH' (default), or 'CENTIMETER'.</span>
<a name="line-802"></a><span class="sd">        metadata : dict</span>
<a name="line-803"></a><span class="sd">            Additional meta data to be saved along with shape information</span>
<a name="line-804"></a><span class="sd">            in JSON or ImageJ formats in an ImageDescription tag.</span>
<a name="line-805"></a><span class="sd">            If None, do not write a second ImageDescription tag.</span>
<a name="line-806"></a><span class="sd">            Strings must be 7-bit ASCII. Saved with the first page only.</span>
<a name="line-807"></a><span class="sd">        extratags : sequence of tuples</span>
<a name="line-808"></a><span class="sd">            Additional tags as [(code, dtype, count, value, writeonce)].</span>
<a name="line-809"></a>
<a name="line-810"></a><span class="sd">            code : int</span>
<a name="line-811"></a><span class="sd">                The TIFF tag Id.</span>
<a name="line-812"></a><span class="sd">            dtype : str</span>
<a name="line-813"></a><span class="sd">                Data type of items in 'value' in Python struct format.</span>
<a name="line-814"></a><span class="sd">                One of B, s, H, I, 2I, b, h, i, 2i, f, d, Q, or q.</span>
<a name="line-815"></a><span class="sd">            count : int</span>
<a name="line-816"></a><span class="sd">                Number of data values. Not used for string or byte string</span>
<a name="line-817"></a><span class="sd">                values.</span>
<a name="line-818"></a><span class="sd">            value : sequence</span>
<a name="line-819"></a><span class="sd">                'Count' values compatible with 'dtype'.</span>
<a name="line-820"></a><span class="sd">                Byte strings must contain count values of dtype packed as</span>
<a name="line-821"></a><span class="sd">                binary data.</span>
<a name="line-822"></a><span class="sd">            writeonce : bool</span>
<a name="line-823"></a><span class="sd">                If True, the tag is written to the first page only.</span>
<a name="line-824"></a>
<a name="line-825"></a><span class="sd">        """</span>
<a name="line-826"></a>        <span class="c1"># TODO: refactor this function</span>
<a name="line-827"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span>
<a name="line-828"></a>        <span class="n">byteorder</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_byteorder</span>
<a name="line-829"></a>
<a name="line-830"></a>        <span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-831"></a>            <span class="k">if</span> <span class="n">compress</span><span class="p">:</span>
<a name="line-832"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"can not save compressed empty file"</span><span class="p">)</span>
<a name="line-833"></a>            <span class="n">datashape</span> <span class="o">=</span> <span class="n">shape</span>
<a name="line-834"></a>            <span class="n">datadtype</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span><span class="o">.</span><span class="n">newbyteorder</span><span class="p">(</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-835"></a>            <span class="n">datadtypechar</span> <span class="o">=</span> <span class="n">datadtype</span><span class="o">.</span><span class="n">char</span>
<a name="line-836"></a>            <span class="n">data</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-837"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-838"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">+</span><span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">char</span><span class="p">,</span> <span class="s1">'C'</span><span class="p">)</span>
<a name="line-839"></a>            <span class="k">if</span> <span class="n">data</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-840"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"can not save empty array"</span><span class="p">)</span>
<a name="line-841"></a>            <span class="n">datashape</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span>
<a name="line-842"></a>            <span class="n">datadtype</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-843"></a>            <span class="n">datadtypechar</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">char</span>
<a name="line-844"></a>
<a name="line-845"></a>        <span class="n">returnoffset</span> <span class="o">=</span> <span class="n">returnoffset</span> <span class="ow">and</span> <span class="n">datadtype</span><span class="o">.</span><span class="n">isnative</span>
<a name="line-846"></a>        <span class="n">datasize</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">datashape</span><span class="p">)</span> <span class="o">*</span> <span class="n">datadtype</span><span class="o">.</span><span class="n">itemsize</span>
<a name="line-847"></a>
<a name="line-848"></a>        <span class="c1"># just append contiguous data if possible</span>
<a name="line-849"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_truncate</span> <span class="o">=</span> <span class="nb">bool</span><span class="p">(</span><span class="n">truncate</span><span class="p">)</span>
<a name="line-850"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span><span class="p">:</span>
<a name="line-851"></a>            <span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="n">contiguous</span>
<a name="line-852"></a>                    <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span> <span class="o">!=</span> <span class="n">datashape</span>
<a name="line-853"></a>                    <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">_datadtype</span> <span class="o">!=</span> <span class="n">datadtype</span>
<a name="line-854"></a>                    <span class="ow">or</span> <span class="p">(</span><span class="n">compress</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tags</span><span class="p">)</span>
<a name="line-855"></a>                    <span class="ow">or</span> <span class="n">tile</span>
<a name="line-856"></a>                    <span class="ow">or</span> <span class="ow">not</span> <span class="n">numpy</span><span class="o">.</span><span class="n">array_equal</span><span class="p">(</span><span class="n">colormap</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_colormap</span><span class="p">)):</span>
<a name="line-857"></a>                <span class="c1"># incompatible shape, dtype, compression mode, or colormap</span>
<a name="line-858"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_write_remaining_pages</span><span class="p">()</span>
<a name="line-859"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_write_image_description</span><span class="p">()</span>
<a name="line-860"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_truncate</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-861"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionoffset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-862"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlenoffset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-863"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-864"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_colormap</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-865"></a>                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">:</span>
<a name="line-866"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span>
<a name="line-867"></a>                        <span class="s2">"ImageJ does not support non-contiguous data"</span><span class="p">)</span>
<a name="line-868"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-869"></a>                <span class="c1"># consecutive mode</span>
<a name="line-870"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">datashape</span>
<a name="line-871"></a>                <span class="k">if</span> <span class="ow">not</span> <span class="n">compress</span><span class="p">:</span>
<a name="line-872"></a>                    <span class="c1"># write contiguous data, write ifds/tags later</span>
<a name="line-873"></a>                    <span class="n">offset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-874"></a>                    <span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-875"></a>                        <span class="n">fh</span><span class="o">.</span><span class="n">write_empty</span><span class="p">(</span><span class="n">datasize</span><span class="p">)</span>
<a name="line-876"></a>                    <span class="k">else</span><span class="p">:</span>
<a name="line-877"></a>                        <span class="n">fh</span><span class="o">.</span><span class="n">write_array</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<a name="line-878"></a>                    <span class="k">if</span> <span class="n">returnoffset</span><span class="p">:</span>
<a name="line-879"></a>                        <span class="k">return</span> <span class="n">offset</span><span class="p">,</span> <span class="n">datasize</span>
<a name="line-880"></a>                    <span class="k">return</span>
<a name="line-881"></a>
<a name="line-882"></a>        <span class="n">input_shape</span> <span class="o">=</span> <span class="n">datashape</span>
<a name="line-883"></a>        <span class="n">tagnoformat</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tagnoformat</span>
<a name="line-884"></a>        <span class="n">valueformat</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_valueformat</span>
<a name="line-885"></a>        <span class="n">offsetformat</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offsetformat</span>
<a name="line-886"></a>        <span class="n">offsetsize</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offsetsize</span>
<a name="line-887"></a>        <span class="n">tagsize</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tagsize</span>
<a name="line-888"></a>
<a name="line-889"></a>        <span class="n">MINISBLACK</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">MINISBLACK</span>
<a name="line-890"></a>        <span class="n">RGB</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">RGB</span>
<a name="line-891"></a>        <span class="n">CFA</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">CFA</span>
<a name="line-892"></a>        <span class="n">PALETTE</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">PALETTE</span>
<a name="line-893"></a>        <span class="n">CONTIG</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PLANARCONFIG</span><span class="o">.</span><span class="n">CONTIG</span>
<a name="line-894"></a>        <span class="n">SEPARATE</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PLANARCONFIG</span><span class="o">.</span><span class="n">SEPARATE</span>
<a name="line-895"></a>
<a name="line-896"></a>        <span class="k">if</span> <span class="n">photometric</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-897"></a>            <span class="n">photometric</span> <span class="o">=</span> <span class="n">enumarg</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span><span class="p">,</span> <span class="n">photometric</span><span class="p">)</span>
<a name="line-898"></a>        <span class="k">if</span> <span class="n">planarconfig</span><span class="p">:</span>
<a name="line-899"></a>            <span class="n">planarconfig</span> <span class="o">=</span> <span class="n">enumarg</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">PLANARCONFIG</span><span class="p">,</span> <span class="n">planarconfig</span><span class="p">)</span>
<a name="line-900"></a>
<a name="line-901"></a>        <span class="c1"># prepare compression</span>
<a name="line-902"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">compress</span><span class="p">:</span>
<a name="line-903"></a>            <span class="n">compress</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-904"></a>            <span class="n">compresstag</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-905"></a>        <span class="k">elif</span> <span class="n">compress</span> <span class="o">==</span> <span class="s1">'LZMA'</span><span class="p">:</span>
<a name="line-906"></a>            <span class="n">compress</span> <span class="o">=</span> <span class="n">lzma</span><span class="o">.</span><span class="n">compress</span>
<a name="line-907"></a>            <span class="n">compresstag</span> <span class="o">=</span> <span class="mi">34925</span>
<a name="line-908"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">:</span>
<a name="line-909"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"ImageJ can not handle LZMA compression"</span><span class="p">)</span>
<a name="line-910"></a>        <span class="k">elif</span> <span class="ow">not</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">compress</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">:</span>
<a name="line-911"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid compression level </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">compress</span><span class="p">)</span>
<a name="line-912"></a>        <span class="k">elif</span> <span class="n">compress</span><span class="p">:</span>
<a name="line-913"></a>            <span class="k">def</span> <span class="nf">compress</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">level</span><span class="o">=</span><span class="n">compress</span><span class="p">):</span>
<a name="line-914"></a>                <span class="k">return</span> <span class="n">zlib</span><span class="o">.</span><span class="n">compress</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">level</span><span class="p">)</span>
<a name="line-915"></a>            <span class="n">compresstag</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-916"></a>
<a name="line-917"></a>        <span class="c1"># prepare ImageJ format</span>
<a name="line-918"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">:</span>
<a name="line-919"></a>            <span class="k">if</span> <span class="n">description</span><span class="p">:</span>
<a name="line-920"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"not writing description to ImageJ file"</span><span class="p">)</span>
<a name="line-921"></a>                <span class="n">description</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-922"></a>            <span class="n">volume</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-923"></a>            <span class="k">if</span> <span class="n">datadtypechar</span> <span class="ow">not</span> <span class="ow">in</span> <span class="s1">'BHhf'</span><span class="p">:</span>
<a name="line-924"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span>
<a name="line-925"></a>                    <span class="s2">"ImageJ does not support data type '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="n">datadtypechar</span><span class="p">)</span>
<a name="line-926"></a>            <span class="n">ijrgb</span> <span class="o">=</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">RGB</span> <span class="k">if</span> <span class="n">photometric</span> <span class="k">else</span> <span class="bp">None</span>
<a name="line-927"></a>            <span class="k">if</span> <span class="n">datadtypechar</span> <span class="ow">not</span> <span class="ow">in</span> <span class="s1">'B'</span><span class="p">:</span>
<a name="line-928"></a>                <span class="n">ijrgb</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-929"></a>            <span class="n">ijshape</span> <span class="o">=</span> <span class="n">imagej_shape</span><span class="p">(</span><span class="n">datashape</span><span class="p">,</span> <span class="n">ijrgb</span><span class="p">)</span>
<a name="line-930"></a>            <span class="k">if</span> <span class="n">ijshape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-931"></a>                <span class="n">photometric</span> <span class="o">=</span> <span class="n">RGB</span>
<a name="line-932"></a>                <span class="k">if</span> <span class="n">datadtypechar</span> <span class="ow">not</span> <span class="ow">in</span> <span class="s1">'B'</span><span class="p">:</span>
<a name="line-933"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"ImageJ does not support data type '</span><span class="si">%s</span><span class="s2">' "</span>
<a name="line-934"></a>                                     <span class="s2">"for RGB"</span> <span class="o">%</span> <span class="n">datadtypechar</span><span class="p">)</span>
<a name="line-935"></a>            <span class="k">elif</span> <span class="n">photometric</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-936"></a>                <span class="n">photometric</span> <span class="o">=</span> <span class="n">MINISBLACK</span>
<a name="line-937"></a>                <span class="n">planarconfig</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-938"></a>            <span class="k">if</span> <span class="n">planarconfig</span> <span class="o">==</span> <span class="n">SEPARATE</span><span class="p">:</span>
<a name="line-939"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"ImageJ does not support planar images"</span><span class="p">)</span>
<a name="line-940"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-941"></a>                <span class="n">planarconfig</span> <span class="o">=</span> <span class="n">CONTIG</span> <span class="k">if</span> <span class="n">ijrgb</span> <span class="k">else</span> <span class="bp">None</span>
<a name="line-942"></a>
<a name="line-943"></a>        <span class="c1"># verify colormap and indices</span>
<a name="line-944"></a>        <span class="k">if</span> <span class="n">colormap</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-945"></a>            <span class="k">if</span> <span class="n">datadtypechar</span> <span class="ow">not</span> <span class="ow">in</span> <span class="s1">'BH'</span><span class="p">:</span>
<a name="line-946"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid data dtype for palette mode"</span><span class="p">)</span>
<a name="line-947"></a>            <span class="n">colormap</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">colormap</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">byteorder</span><span class="o">+</span><span class="s1">'H'</span><span class="p">)</span>
<a name="line-948"></a>            <span class="k">if</span> <span class="n">colormap</span><span class="o">.</span><span class="n">shape</span> <span class="o">!=</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="o">**</span><span class="p">(</span><span class="n">datadtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">*</span> <span class="mi">8</span><span class="p">)):</span>
<a name="line-949"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid color map shape"</span><span class="p">)</span>
<a name="line-950"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_colormap</span> <span class="o">=</span> <span class="n">colormap</span>
<a name="line-951"></a>
<a name="line-952"></a>        <span class="c1"># verify tile shape</span>
<a name="line-953"></a>        <span class="k">if</span> <span class="n">tile</span><span class="p">:</span>
<a name="line-954"></a>            <span class="n">tile</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">tile</span><span class="p">[:</span><span class="mi">3</span><span class="p">])</span>
<a name="line-955"></a>            <span class="n">volume</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">tile</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span>
<a name="line-956"></a>            <span class="k">if</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">tile</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">2</span> <span class="ow">or</span> <span class="n">tile</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">%</span> <span class="mi">16</span> <span class="ow">or</span> <span class="n">tile</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">%</span> <span class="mi">16</span> <span class="ow">or</span>
<a name="line-957"></a>                    <span class="nb">any</span><span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">tile</span><span class="p">)):</span>
<a name="line-958"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid tile shape"</span><span class="p">)</span>
<a name="line-959"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-960"></a>            <span class="n">tile</span> <span class="o">=</span> <span class="p">()</span>
<a name="line-961"></a>            <span class="n">volume</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-962"></a>
<a name="line-963"></a>        <span class="c1"># normalize data shape to 5D or 6D, depending on volume:</span>
<a name="line-964"></a>        <span class="c1">#   (pages, planar_samples, [depth,] height, width, contig_samples)</span>
<a name="line-965"></a>        <span class="n">datashape</span> <span class="o">=</span> <span class="n">reshape_nd</span><span class="p">(</span><span class="n">datashape</span><span class="p">,</span> <span class="mi">3</span> <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">RGB</span> <span class="k">else</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-966"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="n">datashape</span>
<a name="line-967"></a>        <span class="n">ndim</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">datashape</span><span class="p">)</span>
<a name="line-968"></a>
<a name="line-969"></a>        <span class="n">samplesperpixel</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-970"></a>        <span class="n">extrasamples</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-971"></a>        <span class="k">if</span> <span class="n">volume</span> <span class="ow">and</span> <span class="n">ndim</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
<a name="line-972"></a>            <span class="n">volume</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-973"></a>        <span class="k">if</span> <span class="n">colormap</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-974"></a>            <span class="n">photometric</span> <span class="o">=</span> <span class="n">PALETTE</span>
<a name="line-975"></a>            <span class="n">planarconfig</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-976"></a>        <span class="k">if</span> <span class="n">photometric</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-977"></a>            <span class="n">photometric</span> <span class="o">=</span> <span class="n">MINISBLACK</span>
<a name="line-978"></a>            <span class="k">if</span> <span class="n">planarconfig</span> <span class="o">==</span> <span class="n">CONTIG</span><span class="p">:</span>
<a name="line-979"></a>                <span class="k">if</span> <span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-980"></a>                    <span class="n">photometric</span> <span class="o">=</span> <span class="n">RGB</span>
<a name="line-981"></a>            <span class="k">elif</span> <span class="n">planarconfig</span> <span class="o">==</span> <span class="n">SEPARATE</span><span class="p">:</span>
<a name="line-982"></a>                <span class="k">if</span> <span class="n">volume</span> <span class="ow">and</span> <span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-983"></a>                    <span class="n">photometric</span> <span class="o">=</span> <span class="n">RGB</span>
<a name="line-984"></a>                <span class="k">elif</span> <span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-985"></a>                    <span class="n">photometric</span> <span class="o">=</span> <span class="n">RGB</span>
<a name="line-986"></a>            <span class="k">elif</span> <span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-987"></a>                <span class="n">photometric</span> <span class="o">=</span> <span class="n">RGB</span>
<a name="line-988"></a>            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">:</span>
<a name="line-989"></a>                <span class="n">photometric</span> <span class="o">=</span> <span class="n">MINISBLACK</span>
<a name="line-990"></a>            <span class="k">elif</span> <span class="n">volume</span> <span class="ow">and</span> <span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">3</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-991"></a>                <span class="n">photometric</span> <span class="o">=</span> <span class="n">RGB</span>
<a name="line-992"></a>            <span class="k">elif</span> <span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-993"></a>                <span class="n">photometric</span> <span class="o">=</span> <span class="n">RGB</span>
<a name="line-994"></a>        <span class="k">if</span> <span class="n">planarconfig</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="p">(</span><span class="mi">3</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="mi">2</span><span class="p">):</span>
<a name="line-995"></a>            <span class="n">planarconfig</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-996"></a>            <span class="n">photometric</span> <span class="o">=</span> <span class="n">MINISBLACK</span>
<a name="line-997"></a>        <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">RGB</span><span class="p">:</span>
<a name="line-998"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
<a name="line-999"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a RGB(A) image"</span><span class="p">)</span>
<a name="line-1000"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">:</span>
<a name="line-1001"></a>                <span class="n">volume</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-1002"></a>            <span class="k">if</span> <span class="n">planarconfig</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1003"></a>                <span class="k">if</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-1004"></a>                    <span class="n">planarconfig</span> <span class="o">=</span> <span class="n">CONTIG</span>
<a name="line-1005"></a>                <span class="k">elif</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="o">-</span><span class="mi">3</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-1006"></a>                    <span class="n">planarconfig</span> <span class="o">=</span> <span class="n">SEPARATE</span>
<a name="line-1007"></a>                <span class="k">elif</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="o">-</span><span class="mi">3</span><span class="p">]:</span>
<a name="line-1008"></a>                    <span class="n">planarconfig</span> <span class="o">=</span> <span class="n">SEPARATE</span>
<a name="line-1009"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-1010"></a>                    <span class="n">planarconfig</span> <span class="o">=</span> <span class="n">CONTIG</span>
<a name="line-1011"></a>            <span class="k">if</span> <span class="n">planarconfig</span> <span class="o">==</span> <span class="n">CONTIG</span><span class="p">:</span>
<a name="line-1012"></a>                <span class="n">datashape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">shape</span><span class="p">[(</span><span class="o">-</span><span class="mi">4</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="o">-</span><span class="mi">3</span><span class="p">):]</span>
<a name="line-1013"></a>                <span class="n">samplesperpixel</span> <span class="o">=</span> <span class="n">datashape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1014"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1015"></a>                <span class="n">datashape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">shape</span><span class="p">[(</span><span class="o">-</span><span class="mi">4</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="o">-</span><span class="mi">3</span><span class="p">):]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span>
<a name="line-1016"></a>                <span class="n">samplesperpixel</span> <span class="o">=</span> <span class="n">datashape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1017"></a>            <span class="k">if</span> <span class="n">samplesperpixel</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">:</span>
<a name="line-1018"></a>                <span class="n">extrasamples</span> <span class="o">=</span> <span class="n">samplesperpixel</span> <span class="o">-</span> <span class="mi">3</span>
<a name="line-1019"></a>        <span class="k">elif</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">CFA</span><span class="p">:</span>
<a name="line-1020"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-1021"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid CFA image"</span><span class="p">)</span>
<a name="line-1022"></a>            <span class="n">volume</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-1023"></a>            <span class="n">planarconfig</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1024"></a>            <span class="n">datashape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">:]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span>
<a name="line-1025"></a>            <span class="k">if</span> <span class="mi">50706</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="n">et</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">et</span> <span class="ow">in</span> <span class="n">extratags</span><span class="p">):</span>
<a name="line-1026"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"must specify DNG tags for CFA image"</span><span class="p">)</span>
<a name="line-1027"></a>        <span class="k">elif</span> <span class="n">planarconfig</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">&gt;</span> <span class="p">(</span><span class="mi">3</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="mi">2</span><span class="p">):</span>
<a name="line-1028"></a>            <span class="k">if</span> <span class="n">planarconfig</span> <span class="o">==</span> <span class="n">CONTIG</span><span class="p">:</span>
<a name="line-1029"></a>                <span class="n">datashape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">shape</span><span class="p">[(</span><span class="o">-</span><span class="mi">4</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="o">-</span><span class="mi">3</span><span class="p">):]</span>
<a name="line-1030"></a>                <span class="n">samplesperpixel</span> <span class="o">=</span> <span class="n">datashape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1031"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1032"></a>                <span class="n">datashape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">shape</span><span class="p">[(</span><span class="o">-</span><span class="mi">4</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="o">-</span><span class="mi">3</span><span class="p">):]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span>
<a name="line-1033"></a>                <span class="n">samplesperpixel</span> <span class="o">=</span> <span class="n">datashape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1034"></a>            <span class="n">extrasamples</span> <span class="o">=</span> <span class="n">samplesperpixel</span> <span class="o">-</span> <span class="mi">1</span>
<a name="line-1035"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1036"></a>            <span class="n">planarconfig</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1037"></a>            <span class="c1"># remove trailing 1s</span>
<a name="line-1038"></a>            <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1039"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="n">shape</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1040"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
<a name="line-1041"></a>                <span class="n">volume</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-1042"></a>            <span class="n">datashape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">shape</span><span class="p">[(</span><span class="o">-</span><span class="mi">3</span> <span class="k">if</span> <span class="n">volume</span> <span class="k">else</span> <span class="o">-</span><span class="mi">2</span><span class="p">):]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span>
<a name="line-1043"></a>
<a name="line-1044"></a>        <span class="c1"># normalize shape to 6D</span>
<a name="line-1045"></a>        <span class="k">assert</span> <span class="nb">len</span><span class="p">(</span><span class="n">datashape</span><span class="p">)</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
<a name="line-1046"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">datashape</span><span class="p">)</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
<a name="line-1047"></a>            <span class="n">datashape</span> <span class="o">=</span> <span class="n">datashape</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">datashape</span><span class="p">[</span><span class="mi">2</span><span class="p">:]</span>
<a name="line-1048"></a>        <span class="k">if</span> <span class="n">datashape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
<a name="line-1049"></a>            <span class="n">s0</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">input_shape</span><span class="p">)</span> <span class="o">//</span> <span class="n">product</span><span class="p">(</span><span class="n">datashape</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
<a name="line-1050"></a>            <span class="n">datashape</span> <span class="o">=</span> <span class="p">(</span><span class="n">s0</span><span class="p">,)</span> <span class="o">+</span> <span class="n">datashape</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
<a name="line-1051"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="n">datashape</span>
<a name="line-1052"></a>        <span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1053"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-1054"></a>
<a name="line-1055"></a>        <span class="k">if</span> <span class="n">tile</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">volume</span><span class="p">:</span>
<a name="line-1056"></a>            <span class="n">tile</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">tile</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span> <span class="n">tile</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<a name="line-1057"></a>
<a name="line-1058"></a>        <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">PALETTE</span><span class="p">:</span>
<a name="line-1059"></a>            <span class="k">if</span> <span class="p">(</span><span class="n">samplesperpixel</span> <span class="o">!=</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">extrasamples</span> <span class="ow">or</span>
<a name="line-1060"></a>                    <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">):</span>
<a name="line-1061"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid data shape for palette mode"</span><span class="p">)</span>
<a name="line-1062"></a>
<a name="line-1063"></a>        <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">RGB</span> <span class="ow">and</span> <span class="n">samplesperpixel</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-1064"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a RGB image (samplesperpixel=2)"</span><span class="p">)</span>
<a name="line-1065"></a>
<a name="line-1066"></a>        <span class="n">bytestr</span> <span class="o">=</span> <span class="nb">bytes</span> <span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'2'</span> <span class="k">else</span> <span class="p">(</span>
<a name="line-1067"></a>            <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="s1">'ascii'</span><span class="p">)</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="nb">str</span><span class="p">)</span> <span class="k">else</span> <span class="n">x</span><span class="p">)</span>
<a name="line-1068"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="p">[]</span>  <span class="c1"># list of (code, ifdentry, ifdvalue, writeonce)</span>
<a name="line-1069"></a>
<a name="line-1070"></a>        <span class="n">strip_or_tile</span> <span class="o">=</span> <span class="s1">'Tile'</span> <span class="k">if</span> <span class="n">tile</span> <span class="k">else</span> <span class="s1">'Strip'</span>
<a name="line-1071"></a>        <span class="n">tagbytecounts</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_NAMES</span><span class="p">[</span><span class="n">strip_or_tile</span> <span class="o">+</span> <span class="s1">'ByteCounts'</span><span class="p">]</span>
<a name="line-1072"></a>        <span class="n">tag_offsets</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_NAMES</span><span class="p">[</span><span class="n">strip_or_tile</span> <span class="o">+</span> <span class="s1">'Offsets'</span><span class="p">]</span>
<a name="line-1073"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_tagoffsets</span> <span class="o">=</span> <span class="n">tag_offsets</span>
<a name="line-1074"></a>
<a name="line-1075"></a>        <span class="k">def</span> <span class="nf">pack</span><span class="p">(</span><span class="n">fmt</span><span class="p">,</span> <span class="o">*</span><span class="n">val</span><span class="p">):</span>
<a name="line-1076"></a>            <span class="k">return</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="n">fmt</span><span class="p">,</span> <span class="o">*</span><span class="n">val</span><span class="p">)</span>
<a name="line-1077"></a>
<a name="line-1078"></a>        <span class="k">def</span> <span class="nf">addtag</span><span class="p">(</span><span class="n">code</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">writeonce</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
<a name="line-1079"></a>            <span class="c1"># Compute ifdentry &amp; ifdvalue bytes from code, dtype, count, value</span>
<a name="line-1080"></a>            <span class="c1"># Append (code, ifdentry, ifdvalue, writeonce) to tags list</span>
<a name="line-1081"></a>            <span class="n">code</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_NAMES</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">code</span><span class="p">,</span> <span class="n">code</span><span class="p">))</span>
<a name="line-1082"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-1083"></a>                <span class="n">tifftype</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">DATA_DTYPES</span><span class="p">[</span><span class="n">dtype</span><span class="p">]</span>
<a name="line-1084"></a>            <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
<a name="line-1085"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"unknown dtype </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-1086"></a>            <span class="n">rawcount</span> <span class="o">=</span> <span class="n">count</span>
<a name="line-1087"></a>
<a name="line-1088"></a>            <span class="k">if</span> <span class="n">dtype</span> <span class="o">==</span> <span class="s1">'s'</span><span class="p">:</span>
<a name="line-1089"></a>                <span class="c1"># strings</span>
<a name="line-1090"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">bytestr</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">+</span> <span class="sa">b</span><span class="s1">'</span><span class="se">\0</span><span class="s1">'</span>
<a name="line-1091"></a>                <span class="n">count</span> <span class="o">=</span> <span class="n">rawcount</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-1092"></a>                <span class="n">rawcount</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="sa">b</span><span class="s1">'</span><span class="se">\0\0</span><span class="s1">'</span><span class="p">)</span>
<a name="line-1093"></a>                <span class="k">if</span> <span class="n">rawcount</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-1094"></a>                    <span class="n">rawcount</span> <span class="o">=</span> <span class="n">count</span>
<a name="line-1095"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-1096"></a>                    <span class="n">rawcount</span> <span class="o">+=</span> <span class="mi">1</span>  <span class="c1"># length of string without buffer</span>
<a name="line-1097"></a>                <span class="n">value</span> <span class="o">=</span> <span class="p">(</span><span class="n">value</span><span class="p">,)</span>
<a name="line-1098"></a>            <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">):</span>
<a name="line-1099"></a>                <span class="c1"># packed binary data</span>
<a name="line-1100"></a>                <span class="n">dtsize</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">calcsize</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-1101"></a>                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">%</span> <span class="n">dtsize</span><span class="p">:</span>
<a name="line-1102"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">'invalid packed binary data'</span><span class="p">)</span>
<a name="line-1103"></a>                <span class="n">count</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">//</span> <span class="n">dtsize</span>
<a name="line-1104"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1105"></a>                <span class="n">count</span> <span class="o">*=</span> <span class="nb">int</span><span class="p">(</span><span class="n">dtype</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<a name="line-1106"></a>                <span class="n">dtype</span> <span class="o">=</span> <span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1107"></a>            <span class="n">ifdentry</span> <span class="o">=</span> <span class="p">[</span><span class="n">pack</span><span class="p">(</span><span class="s1">'HH'</span><span class="p">,</span> <span class="n">code</span><span class="p">,</span> <span class="n">tifftype</span><span class="p">),</span>
<a name="line-1108"></a>                        <span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">rawcount</span><span class="p">)]</span>
<a name="line-1109"></a>            <span class="n">ifdvalue</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1110"></a>            <span class="k">if</span> <span class="n">struct</span><span class="o">.</span><span class="n">calcsize</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span> <span class="o">*</span> <span class="n">count</span> <span class="o">&lt;=</span> <span class="n">offsetsize</span><span class="p">:</span>
<a name="line-1111"></a>                <span class="c1"># value(s) can be written directly</span>
<a name="line-1112"></a>                <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">):</span>
<a name="line-1113"></a>                    <span class="n">ifdentry</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">valueformat</span><span class="p">,</span> <span class="n">value</span><span class="p">))</span>
<a name="line-1114"></a>                <span class="k">elif</span> <span class="n">count</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1115"></a>                    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="p">(</span><span class="nb">tuple</span><span class="p">,</span> <span class="nb">list</span><span class="p">,</span> <span class="n">numpy</span><span class="o">.</span><span class="n">ndarray</span><span class="p">)):</span>
<a name="line-1116"></a>                        <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-1117"></a>                    <span class="n">ifdentry</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">valueformat</span><span class="p">,</span> <span class="n">pack</span><span class="p">(</span><span class="n">dtype</span><span class="p">,</span> <span class="n">value</span><span class="p">)))</span>
<a name="line-1118"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-1119"></a>                    <span class="n">ifdentry</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">valueformat</span><span class="p">,</span>
<a name="line-1120"></a>                                         <span class="n">pack</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">count</span><span class="p">)</span><span class="o">+</span><span class="n">dtype</span><span class="p">,</span> <span class="o">*</span><span class="n">value</span><span class="p">)))</span>
<a name="line-1121"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1122"></a>                <span class="c1"># use offset to value(s)</span>
<a name="line-1123"></a>                <span class="n">ifdentry</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<a name="line-1124"></a>                <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">):</span>
<a name="line-1125"></a>                    <span class="n">ifdvalue</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-1126"></a>                <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">numpy</span><span class="o">.</span><span class="n">ndarray</span><span class="p">):</span>
<a name="line-1127"></a>                    <span class="k">assert</span> <span class="n">value</span><span class="o">.</span><span class="n">size</span> <span class="o">==</span> <span class="n">count</span>
<a name="line-1128"></a>                    <span class="k">assert</span> <span class="n">value</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">char</span> <span class="o">==</span> <span class="n">dtype</span>
<a name="line-1129"></a>                    <span class="n">ifdvalue</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">tostring</span><span class="p">()</span>
<a name="line-1130"></a>                <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="p">(</span><span class="nb">tuple</span><span class="p">,</span> <span class="nb">list</span><span class="p">)):</span>
<a name="line-1131"></a>                    <span class="n">ifdvalue</span> <span class="o">=</span> <span class="n">pack</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">count</span><span class="p">)</span><span class="o">+</span><span class="n">dtype</span><span class="p">,</span> <span class="o">*</span><span class="n">value</span><span class="p">)</span>
<a name="line-1132"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-1133"></a>                    <span class="n">ifdvalue</span> <span class="o">=</span> <span class="n">pack</span><span class="p">(</span><span class="n">dtype</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
<a name="line-1134"></a>            <span class="n">tags</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">code</span><span class="p">,</span> <span class="sa">b</span><span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">ifdentry</span><span class="p">),</span> <span class="n">ifdvalue</span><span class="p">,</span> <span class="n">writeonce</span><span class="p">))</span>
<a name="line-1135"></a>
<a name="line-1136"></a>        <span class="k">def</span> <span class="nf">rational</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="n">max_denominator</span><span class="o">=</span><span class="mi">1000000</span><span class="p">):</span>
<a name="line-1137"></a>            <span class="c1"># return nominator and denominator from float or two integers</span>
<a name="line-1138"></a>            <span class="kn">from</span> <span class="nn">fractions</span> <span class="kn">import</span> <span class="n">Fraction</span>  <span class="c1"># delayed import</span>
<a name="line-1139"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-1140"></a>                <span class="n">f</span> <span class="o">=</span> <span class="n">Fraction</span><span class="o">.</span><span class="n">from_float</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
<a name="line-1141"></a>            <span class="k">except</span> <span class="ne">TypeError</span><span class="p">:</span>
<a name="line-1142"></a>                <span class="n">f</span> <span class="o">=</span> <span class="n">Fraction</span><span class="p">(</span><span class="n">arg</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">arg</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-1143"></a>            <span class="n">f</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">limit_denominator</span><span class="p">(</span><span class="n">max_denominator</span><span class="p">)</span>
<a name="line-1144"></a>            <span class="k">return</span> <span class="n">f</span><span class="o">.</span><span class="n">numerator</span><span class="p">,</span> <span class="n">f</span><span class="o">.</span><span class="n">denominator</span>
<a name="line-1145"></a>
<a name="line-1146"></a>        <span class="k">if</span> <span class="n">description</span><span class="p">:</span>
<a name="line-1147"></a>            <span class="c1"># user provided description</span>
<a name="line-1148"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'ImageDescription'</span><span class="p">,</span> <span class="s1">'s'</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">description</span><span class="p">,</span> <span class="n">writeonce</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-1149"></a>
<a name="line-1150"></a>        <span class="c1"># write shape and metadata to ImageDescription</span>
<a name="line-1151"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_metadata</span> <span class="o">=</span> <span class="p">{}</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">metadata</span> <span class="k">else</span> <span class="n">metadata</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
<a name="line-1152"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">:</span>
<a name="line-1153"></a>            <span class="n">description</span> <span class="o">=</span> <span class="n">imagej_description</span><span class="p">(</span>
<a name="line-1154"></a>                <span class="n">input_shape</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="bp">self</span><span class="o">.</span><span class="n">_colormap</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-1155"></a>                <span class="o">**</span><span class="bp">self</span><span class="o">.</span><span class="n">_metadata</span><span class="p">)</span>
<a name="line-1156"></a>        <span class="k">elif</span> <span class="n">metadata</span> <span class="ow">or</span> <span class="n">metadata</span> <span class="o">==</span> <span class="p">{}:</span>
<a name="line-1157"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_truncate</span><span class="p">:</span>
<a name="line-1158"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_metadata</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">truncated</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-1159"></a>            <span class="n">description</span> <span class="o">=</span> <span class="n">json_description</span><span class="p">(</span><span class="n">input_shape</span><span class="p">,</span> <span class="o">**</span><span class="bp">self</span><span class="o">.</span><span class="n">_metadata</span><span class="p">)</span>
<a name="line-1160"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1161"></a>            <span class="n">description</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1162"></a>        <span class="k">if</span> <span class="n">description</span><span class="p">:</span>
<a name="line-1163"></a>            <span class="c1"># add 64 bytes buffer</span>
<a name="line-1164"></a>            <span class="c1"># the image description might be updated later with the final shape</span>
<a name="line-1165"></a>            <span class="n">description</span> <span class="o">=</span> <span class="n">str2bytes</span><span class="p">(</span><span class="n">description</span><span class="p">,</span> <span class="s1">'ascii'</span><span class="p">)</span>
<a name="line-1166"></a>            <span class="n">description</span> <span class="o">+=</span> <span class="sa">b</span><span class="s1">'</span><span class="se">\0</span><span class="s1">'</span><span class="o">*</span><span class="mi">64</span>
<a name="line-1167"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlen</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
<a name="line-1168"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'ImageDescription'</span><span class="p">,</span> <span class="s1">'s'</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">description</span><span class="p">,</span> <span class="n">writeonce</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-1169"></a>
<a name="line-1170"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_software</span><span class="p">:</span>
<a name="line-1171"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'Software'</span><span class="p">,</span> <span class="s1">'s'</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_software</span><span class="p">,</span> <span class="n">writeonce</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-1172"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_software</span> <span class="o">=</span> <span class="bp">None</span>  <span class="c1"># only save to first page in file</span>
<a name="line-1173"></a>        <span class="k">if</span> <span class="n">datetime</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1174"></a>            <span class="n">datetime</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_now</span><span class="p">()</span>
<a name="line-1175"></a>        <span class="n">addtag</span><span class="p">(</span><span class="s1">'DateTime'</span><span class="p">,</span> <span class="s1">'s'</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">datetime</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">"%Y:%m:</span><span class="si">%d</span><span class="s2"> %H:%M:%S"</span><span class="p">),</span>
<a name="line-1176"></a>               <span class="n">writeonce</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-1177"></a>        <span class="n">addtag</span><span class="p">(</span><span class="s1">'Compression'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">compresstag</span><span class="p">)</span>
<a name="line-1178"></a>        <span class="n">addtag</span><span class="p">(</span><span class="s1">'ImageWidth'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
<a name="line-1179"></a>        <span class="n">addtag</span><span class="p">(</span><span class="s1">'ImageLength'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">])</span>
<a name="line-1180"></a>        <span class="k">if</span> <span class="n">tile</span><span class="p">:</span>
<a name="line-1181"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'TileWidth'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">tile</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<a name="line-1182"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'TileLength'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">tile</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
<a name="line-1183"></a>            <span class="k">if</span> <span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1184"></a>                <span class="n">addtag</span><span class="p">(</span><span class="s1">'ImageDepth'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">])</span>
<a name="line-1185"></a>                <span class="n">addtag</span><span class="p">(</span><span class="s1">'TileDepth'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="line-1186"></a>        <span class="n">addtag</span><span class="p">(</span><span class="s1">'NewSubfileType'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<a name="line-1187"></a>        <span class="n">sampleformat</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'u'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">'i'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">'f'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">'c'</span><span class="p">:</span> <span class="mi">6</span><span class="p">}[</span><span class="n">datadtype</span><span class="o">.</span><span class="n">kind</span><span class="p">]</span>
<a name="line-1188"></a>        <span class="n">addtag</span><span class="p">(</span><span class="s1">'SampleFormat'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">,</span>
<a name="line-1189"></a>               <span class="p">(</span><span class="n">sampleformat</span><span class="p">,)</span> <span class="o">*</span> <span class="n">samplesperpixel</span><span class="p">)</span>
<a name="line-1190"></a>        <span class="n">addtag</span><span class="p">(</span><span class="s1">'PhotometricInterpretation'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">photometric</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-1191"></a>        <span class="k">if</span> <span class="n">colormap</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1192"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'ColorMap'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="n">colormap</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="n">colormap</span><span class="p">)</span>
<a name="line-1193"></a>        <span class="n">addtag</span><span class="p">(</span><span class="s1">'SamplesPerPixel'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">)</span>
<a name="line-1194"></a>        <span class="k">if</span> <span class="n">planarconfig</span> <span class="ow">and</span> <span class="n">samplesperpixel</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1195"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'PlanarConfiguration'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">planarconfig</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-1196"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'BitsPerSample'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">,</span>
<a name="line-1197"></a>                   <span class="p">(</span><span class="n">datadtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">*</span> <span class="mi">8</span><span class="p">,)</span> <span class="o">*</span> <span class="n">samplesperpixel</span><span class="p">)</span>
<a name="line-1198"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1199"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'BitsPerSample'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">datadtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">*</span> <span class="mi">8</span><span class="p">)</span>
<a name="line-1200"></a>        <span class="k">if</span> <span class="n">extrasamples</span><span class="p">:</span>
<a name="line-1201"></a>            <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">RGB</span> <span class="ow">and</span> <span class="n">extrasamples</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1202"></a>                <span class="n">addtag</span><span class="p">(</span><span class="s1">'ExtraSamples'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>  <span class="c1"># associated alpha channel</span>
<a name="line-1203"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1204"></a>                <span class="n">addtag</span><span class="p">(</span><span class="s1">'ExtraSamples'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="n">extrasamples</span><span class="p">,</span> <span class="p">(</span><span class="mi">0</span><span class="p">,)</span> <span class="o">*</span> <span class="n">extrasamples</span><span class="p">)</span>
<a name="line-1205"></a>        <span class="k">if</span> <span class="n">resolution</span><span class="p">:</span>
<a name="line-1206"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'XResolution'</span><span class="p">,</span> <span class="s1">'2I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">rational</span><span class="p">(</span><span class="n">resolution</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
<a name="line-1207"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'YResolution'</span><span class="p">,</span> <span class="s1">'2I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">rational</span><span class="p">(</span><span class="n">resolution</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>
<a name="line-1208"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">resolution</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-1209"></a>                <span class="n">unit</span> <span class="o">=</span> <span class="n">resolution</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
<a name="line-1210"></a>                <span class="k">if</span> <span class="n">unit</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1211"></a>                    <span class="n">unit</span> <span class="o">=</span> <span class="n">unit</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
<a name="line-1212"></a>                <span class="n">unit</span> <span class="o">=</span> <span class="p">{</span><span class="bp">None</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">'INCH'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">'CM'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">'CENTIMETER'</span><span class="p">:</span> <span class="mi">3</span><span class="p">}[</span><span class="n">unit</span><span class="p">]</span>
<a name="line-1213"></a>            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">:</span>
<a name="line-1214"></a>                <span class="n">unit</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-1215"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1216"></a>                <span class="n">unit</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-1217"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'ResolutionUnit'</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">unit</span><span class="p">)</span>
<a name="line-1218"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">tile</span><span class="p">:</span>
<a name="line-1219"></a>            <span class="n">addtag</span><span class="p">(</span><span class="s1">'RowsPerStrip'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">])</span>  <span class="c1"># * shape[-4]</span>
<a name="line-1220"></a>
<a name="line-1221"></a>        <span class="n">contiguous</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">compress</span>
<a name="line-1222"></a>        <span class="k">if</span> <span class="n">tile</span><span class="p">:</span>
<a name="line-1223"></a>            <span class="c1"># use one chunk per tile per plane</span>
<a name="line-1224"></a>            <span class="n">tiles</span> <span class="o">=</span> <span class="p">((</span><span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
<a name="line-1225"></a>                     <span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">+</span> <span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
<a name="line-1226"></a>                     <span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">+</span> <span class="n">tile</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="n">tile</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<a name="line-1227"></a>            <span class="n">numtiles</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">tiles</span><span class="p">)</span> <span class="o">*</span> <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1228"></a>            <span class="n">stripbytecounts</span> <span class="o">=</span> <span class="p">[</span>
<a name="line-1229"></a>                <span class="n">product</span><span class="p">(</span><span class="n">tile</span><span class="p">)</span> <span class="o">*</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="n">datadtype</span><span class="o">.</span><span class="n">itemsize</span><span class="p">]</span> <span class="o">*</span> <span class="n">numtiles</span>
<a name="line-1230"></a>            <span class="n">addtag</span><span class="p">(</span><span class="n">tagbytecounts</span><span class="p">,</span> <span class="n">offsetformat</span><span class="p">,</span> <span class="n">numtiles</span><span class="p">,</span> <span class="n">stripbytecounts</span><span class="p">)</span>
<a name="line-1231"></a>            <span class="n">addtag</span><span class="p">(</span><span class="n">tag_offsets</span><span class="p">,</span> <span class="n">offsetformat</span><span class="p">,</span> <span class="n">numtiles</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">numtiles</span><span class="p">)</span>
<a name="line-1232"></a>            <span class="n">contiguous</span> <span class="o">=</span> <span class="n">contiguous</span> <span class="ow">and</span> <span class="n">product</span><span class="p">(</span><span class="n">tiles</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span>
<a name="line-1233"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">contiguous</span><span class="p">:</span>
<a name="line-1234"></a>                <span class="c1"># allocate tile buffer</span>
<a name="line-1235"></a>                <span class="n">chunk</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">empty</span><span class="p">(</span><span class="n">tile</span> <span class="o">+</span> <span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">],),</span> <span class="n">dtype</span><span class="o">=</span><span class="n">datadtype</span><span class="p">)</span>
<a name="line-1236"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1237"></a>            <span class="c1"># use one strip per plane</span>
<a name="line-1238"></a>            <span class="n">stripbytecounts</span> <span class="o">=</span> <span class="p">[</span>
<a name="line-1239"></a>                <span class="n">product</span><span class="p">(</span><span class="n">datashape</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span> <span class="o">*</span> <span class="n">datadtype</span><span class="o">.</span><span class="n">itemsize</span><span class="p">]</span> <span class="o">*</span> <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1240"></a>            <span class="n">addtag</span><span class="p">(</span><span class="n">tagbytecounts</span><span class="p">,</span> <span class="n">offsetformat</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">stripbytecounts</span><span class="p">)</span>
<a name="line-1241"></a>            <span class="n">addtag</span><span class="p">(</span><span class="n">tag_offsets</span><span class="p">,</span> <span class="n">offsetformat</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-1242"></a>
<a name="line-1243"></a>        <span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="bp">None</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">contiguous</span><span class="p">:</span>
<a name="line-1244"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"can not write non-contiguous empty file"</span><span class="p">)</span>
<a name="line-1245"></a>
<a name="line-1246"></a>        <span class="c1"># add extra tags from user</span>
<a name="line-1247"></a>        <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">extratags</span><span class="p">:</span>
<a name="line-1248"></a>            <span class="n">addtag</span><span class="p">(</span><span class="o">*</span><span class="n">t</span><span class="p">)</span>
<a name="line-1249"></a>
<a name="line-1250"></a>        <span class="c1"># TODO: check TIFFReadDirectoryCheckOrder warning in files containing</span>
<a name="line-1251"></a>        <span class="c1">#   multiple tags of same code</span>
<a name="line-1252"></a>        <span class="c1"># the entries in an IFD must be sorted in ascending order by tag code</span>
<a name="line-1253"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">tags</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="line-1254"></a>
<a name="line-1255"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_bigtiff</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">)</span> <span class="ow">and</span> <span class="p">(</span>
<a name="line-1256"></a>                <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span> <span class="o">+</span> <span class="n">datasize</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">**</span><span class="mi">31</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
<a name="line-1257"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"data too large for standard TIFF file"</span><span class="p">)</span>
<a name="line-1258"></a>
<a name="line-1259"></a>        <span class="c1"># if not compressed or multi-tiled, write the first ifd and then</span>
<a name="line-1260"></a>        <span class="c1"># all data contiguously; else, write all ifds and data interleaved</span>
<a name="line-1261"></a>        <span class="k">for</span> <span class="n">pageindex</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span> <span class="k">if</span> <span class="n">contiguous</span> <span class="k">else</span> <span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
<a name="line-1262"></a>            <span class="c1"># update pointer at ifd_offset</span>
<a name="line-1263"></a>            <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1264"></a>            <span class="k">if</span> <span class="n">pos</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-1265"></a>                <span class="c1"># location of IFD must begin on a word boundary</span>
<a name="line-1266"></a>                <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="sa">b</span><span class="s1">'</span><span class="se">\0</span><span class="s1">'</span><span class="p">)</span>
<a name="line-1267"></a>                <span class="n">pos</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-1268"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_ifdoffset</span><span class="p">)</span>
<a name="line-1269"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">pos</span><span class="p">))</span>
<a name="line-1270"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-1271"></a>
<a name="line-1272"></a>            <span class="c1"># write ifdentries</span>
<a name="line-1273"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">tagnoformat</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">tags</span><span class="p">)))</span>
<a name="line-1274"></a>            <span class="n">tag_offset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1275"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="sa">b</span><span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">t</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">))</span>
<a name="line-1276"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_ifdoffset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1277"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>  <span class="c1"># offset to next IFD</span>
<a name="line-1278"></a>
<a name="line-1279"></a>            <span class="c1"># write tag values and patch offsets in ifdentries, if necessary</span>
<a name="line-1280"></a>            <span class="k">for</span> <span class="n">tagindex</span><span class="p">,</span> <span class="n">tag</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">tags</span><span class="p">):</span>
<a name="line-1281"></a>                <span class="k">if</span> <span class="n">tag</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
<a name="line-1282"></a>                    <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1283"></a>                    <span class="k">if</span> <span class="n">pos</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-1284"></a>                        <span class="c1"># tag value is expected to begin on word boundary</span>
<a name="line-1285"></a>                        <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="sa">b</span><span class="s1">'</span><span class="se">\0</span><span class="s1">'</span><span class="p">)</span>
<a name="line-1286"></a>                        <span class="n">pos</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-1287"></a>                    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">tag_offset</span> <span class="o">+</span> <span class="n">tagindex</span><span class="o">*</span><span class="n">tagsize</span> <span class="o">+</span> <span class="n">offsetsize</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span>
<a name="line-1288"></a>                    <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">pos</span><span class="p">))</span>
<a name="line-1289"></a>                    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-1290"></a>                    <span class="k">if</span> <span class="n">tag</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">tag_offsets</span><span class="p">:</span>
<a name="line-1291"></a>                        <span class="n">stripoffsetsoffset</span> <span class="o">=</span> <span class="n">pos</span>
<a name="line-1292"></a>                    <span class="k">elif</span> <span class="n">tag</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">tagbytecounts</span><span class="p">:</span>
<a name="line-1293"></a>                        <span class="n">strip_bytecounts_offset</span> <span class="o">=</span> <span class="n">pos</span>
<a name="line-1294"></a>                    <span class="k">elif</span> <span class="n">tag</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">270</span> <span class="ow">and</span> <span class="n">tag</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="sa">b</span><span class="s1">'</span><span class="se">\0\0\0\0</span><span class="s1">'</span><span class="p">):</span>
<a name="line-1295"></a>                        <span class="c1"># image description buffer</span>
<a name="line-1296"></a>                        <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionoffset</span> <span class="o">=</span> <span class="n">pos</span>
<a name="line-1297"></a>                        <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlenoffset</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-1298"></a>                            <span class="n">tag_offset</span> <span class="o">+</span> <span class="n">tagindex</span> <span class="o">*</span> <span class="n">tagsize</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span>
<a name="line-1299"></a>                    <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">tag</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<a name="line-1300"></a>
<a name="line-1301"></a>            <span class="c1"># write image data</span>
<a name="line-1302"></a>            <span class="n">data_offset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1303"></a>            <span class="n">skip</span> <span class="o">=</span> <span class="n">align</span> <span class="o">-</span> <span class="n">data_offset</span> <span class="o">%</span> <span class="n">align</span>
<a name="line-1304"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">skip</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-1305"></a>            <span class="n">data_offset</span> <span class="o">+=</span> <span class="n">skip</span>
<a name="line-1306"></a>            <span class="k">if</span> <span class="n">compress</span><span class="p">:</span>
<a name="line-1307"></a>                <span class="n">stripbytecounts</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-1308"></a>            <span class="k">if</span> <span class="n">contiguous</span><span class="p">:</span>
<a name="line-1309"></a>                <span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1310"></a>                    <span class="n">fh</span><span class="o">.</span><span class="n">write_empty</span><span class="p">(</span><span class="n">datasize</span><span class="p">)</span>
<a name="line-1311"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-1312"></a>                    <span class="n">fh</span><span class="o">.</span><span class="n">write_array</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<a name="line-1313"></a>            <span class="k">elif</span> <span class="n">tile</span><span class="p">:</span>
<a name="line-1314"></a>                <span class="k">for</span> <span class="n">plane</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="n">pageindex</span><span class="p">]:</span>
<a name="line-1315"></a>                    <span class="k">for</span> <span class="n">tz</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tiles</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
<a name="line-1316"></a>                        <span class="k">for</span> <span class="n">ty</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tiles</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span>
<a name="line-1317"></a>                            <span class="k">for</span> <span class="n">tx</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tiles</span><span class="p">[</span><span class="mi">2</span><span class="p">]):</span>
<a name="line-1318"></a>                                <span class="n">c0</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">tz</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="line-1319"></a>                                <span class="n">c1</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">shape</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">-</span> <span class="n">ty</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-1320"></a>                                <span class="n">c2</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">tile</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">shape</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">-</span> <span class="n">tx</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<a name="line-1321"></a>                                <span class="n">chunk</span><span class="p">[</span><span class="n">c0</span><span class="p">:,</span> <span class="n">c1</span><span class="p">:,</span> <span class="n">c2</span><span class="p">:]</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-1322"></a>                                <span class="n">chunk</span><span class="p">[:</span><span class="n">c0</span><span class="p">,</span> <span class="p">:</span><span class="n">c1</span><span class="p">,</span> <span class="p">:</span><span class="n">c2</span><span class="p">]</span> <span class="o">=</span> <span class="n">plane</span><span class="p">[</span>
<a name="line-1323"></a>                                    <span class="n">tz</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span><span class="n">tz</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">c0</span><span class="p">,</span>
<a name="line-1324"></a>                                    <span class="n">ty</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span><span class="n">ty</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">c1</span><span class="p">,</span>
<a name="line-1325"></a>                                    <span class="n">tx</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span><span class="n">tx</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="n">c2</span><span class="p">]</span>
<a name="line-1326"></a>                                <span class="k">if</span> <span class="n">compress</span><span class="p">:</span>
<a name="line-1327"></a>                                    <span class="n">t</span> <span class="o">=</span> <span class="n">compress</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
<a name="line-1328"></a>                                    <span class="n">stripbytecounts</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">t</span><span class="p">))</span>
<a name="line-1329"></a>                                    <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
<a name="line-1330"></a>                                <span class="k">else</span><span class="p">:</span>
<a name="line-1331"></a>                                    <span class="n">fh</span><span class="o">.</span><span class="n">write_array</span><span class="p">(</span><span class="n">chunk</span><span class="p">)</span>
<a name="line-1332"></a>                                    <span class="n">fh</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
<a name="line-1333"></a>            <span class="k">elif</span> <span class="n">compress</span><span class="p">:</span>
<a name="line-1334"></a>                <span class="k">for</span> <span class="n">plane</span> <span class="ow">in</span> <span class="n">data</span><span class="p">[</span><span class="n">pageindex</span><span class="p">]:</span>
<a name="line-1335"></a>                    <span class="n">plane</span> <span class="o">=</span> <span class="n">compress</span><span class="p">(</span><span class="n">plane</span><span class="p">)</span>
<a name="line-1336"></a>                    <span class="n">stripbytecounts</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">plane</span><span class="p">))</span>
<a name="line-1337"></a>                    <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">plane</span><span class="p">)</span>
<a name="line-1338"></a>
<a name="line-1339"></a>            <span class="c1"># update strip/tile offsets and bytecounts if necessary</span>
<a name="line-1340"></a>            <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1341"></a>            <span class="k">for</span> <span class="n">tagindex</span><span class="p">,</span> <span class="n">tag</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">tags</span><span class="p">):</span>
<a name="line-1342"></a>                <span class="k">if</span> <span class="n">tag</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">tag_offsets</span><span class="p">:</span>  <span class="c1"># strip/tile offsets</span>
<a name="line-1343"></a>                    <span class="k">if</span> <span class="n">tag</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
<a name="line-1344"></a>                        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">stripoffsetsoffset</span><span class="p">)</span>
<a name="line-1345"></a>                        <span class="n">strip_offset</span> <span class="o">=</span> <span class="n">data_offset</span>
<a name="line-1346"></a>                        <span class="k">for</span> <span class="n">size</span> <span class="ow">in</span> <span class="n">stripbytecounts</span><span class="p">:</span>
<a name="line-1347"></a>                            <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">strip_offset</span><span class="p">))</span>
<a name="line-1348"></a>                            <span class="n">strip_offset</span> <span class="o">+=</span> <span class="n">size</span>
<a name="line-1349"></a>                    <span class="k">else</span><span class="p">:</span>
<a name="line-1350"></a>                        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">tag_offset</span> <span class="o">+</span> <span class="n">tagindex</span><span class="o">*</span><span class="n">tagsize</span> <span class="o">+</span> <span class="n">offsetsize</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span>
<a name="line-1351"></a>                        <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">data_offset</span><span class="p">))</span>
<a name="line-1352"></a>                <span class="k">elif</span> <span class="n">tag</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">tagbytecounts</span><span class="p">:</span>  <span class="c1"># strip/tile bytecounts</span>
<a name="line-1353"></a>                    <span class="k">if</span> <span class="n">compress</span><span class="p">:</span>
<a name="line-1354"></a>                        <span class="k">if</span> <span class="n">tag</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
<a name="line-1355"></a>                            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">strip_bytecounts_offset</span><span class="p">)</span>
<a name="line-1356"></a>                            <span class="k">for</span> <span class="n">size</span> <span class="ow">in</span> <span class="n">stripbytecounts</span><span class="p">:</span>
<a name="line-1357"></a>                                <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">size</span><span class="p">))</span>
<a name="line-1358"></a>                        <span class="k">else</span><span class="p">:</span>
<a name="line-1359"></a>                            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">tag_offset</span> <span class="o">+</span> <span class="n">tagindex</span><span class="o">*</span><span class="n">tagsize</span> <span class="o">+</span>
<a name="line-1360"></a>                                    <span class="n">offsetsize</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span>
<a name="line-1361"></a>                            <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">stripbytecounts</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
<a name="line-1362"></a>                    <span class="k">break</span>
<a name="line-1363"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-1364"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
<a name="line-1365"></a>
<a name="line-1366"></a>            <span class="c1"># remove tags that should be written only once</span>
<a name="line-1367"></a>            <span class="k">if</span> <span class="n">pageindex</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-1368"></a>                <span class="n">tags</span> <span class="o">=</span> <span class="p">[</span><span class="n">tag</span> <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span> <span class="n">tags</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">tag</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]]</span>
<a name="line-1369"></a>
<a name="line-1370"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="o">=</span> <span class="n">shape</span>
<a name="line-1371"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">input_shape</span>
<a name="line-1372"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_datadtype</span> <span class="o">=</span> <span class="n">datadtype</span>
<a name="line-1373"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_dataoffset</span> <span class="o">=</span> <span class="n">data_offset</span>
<a name="line-1374"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_databytecounts</span> <span class="o">=</span> <span class="n">stripbytecounts</span>
<a name="line-1375"></a>
<a name="line-1376"></a>        <span class="k">if</span> <span class="n">contiguous</span><span class="p">:</span>
<a name="line-1377"></a>            <span class="c1"># write remaining ifds/tags later</span>
<a name="line-1378"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_tags</span> <span class="o">=</span> <span class="n">tags</span>
<a name="line-1379"></a>            <span class="c1"># return offset and size of image data</span>
<a name="line-1380"></a>            <span class="k">if</span> <span class="n">returnoffset</span><span class="p">:</span>
<a name="line-1381"></a>                <span class="k">return</span> <span class="n">data_offset</span><span class="p">,</span> <span class="nb">sum</span><span class="p">(</span><span class="n">stripbytecounts</span><span class="p">)</span>
<a name="line-1382"></a>
<a name="line-1383"></a>    <span class="k">def</span> <span class="nf">_write_remaining_pages</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1384"></a>        <span class="sd">"""Write outstanding IFDs and tags to file."""</span>
<a name="line-1385"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tags</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">_truncate</span><span class="p">:</span>
<a name="line-1386"></a>            <span class="k">return</span>
<a name="line-1387"></a>
<a name="line-1388"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span>
<a name="line-1389"></a>        <span class="n">byteorder</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_byteorder</span>
<a name="line-1390"></a>        <span class="n">offsetformat</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offsetformat</span>
<a name="line-1391"></a>        <span class="n">offsetsize</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offsetsize</span>
<a name="line-1392"></a>        <span class="n">tagnoformat</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tagnoformat</span>
<a name="line-1393"></a>        <span class="n">tagsize</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tagsize</span>
<a name="line-1394"></a>        <span class="n">dataoffset</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_dataoffset</span>
<a name="line-1395"></a>        <span class="n">pagedatasize</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_databytecounts</span><span class="p">)</span>
<a name="line-1396"></a>        <span class="n">pageno</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span>
<a name="line-1397"></a>
<a name="line-1398"></a>        <span class="k">def</span> <span class="nf">pack</span><span class="p">(</span><span class="n">fmt</span><span class="p">,</span> <span class="o">*</span><span class="n">val</span><span class="p">):</span>
<a name="line-1399"></a>            <span class="k">return</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="n">fmt</span><span class="p">,</span> <span class="o">*</span><span class="n">val</span><span class="p">)</span>
<a name="line-1400"></a>
<a name="line-1401"></a>        <span class="c1"># construct template IFD in memory</span>
<a name="line-1402"></a>        <span class="c1"># need to patch offsets to next IFD and data before writing to disk</span>
<a name="line-1403"></a>        <span class="n">ifd</span> <span class="o">=</span> <span class="n">io</span><span class="o">.</span><span class="n">BytesIO</span><span class="p">()</span>
<a name="line-1404"></a>        <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">tagnoformat</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tags</span><span class="p">)))</span>
<a name="line-1405"></a>        <span class="n">tagoffset</span> <span class="o">=</span> <span class="n">ifd</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1406"></a>        <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="sa">b</span><span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">t</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tags</span><span class="p">))</span>
<a name="line-1407"></a>        <span class="n">ifdoffset</span> <span class="o">=</span> <span class="n">ifd</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1408"></a>        <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>  <span class="c1"># offset to next IFD</span>
<a name="line-1409"></a>        <span class="c1"># tag values</span>
<a name="line-1410"></a>        <span class="k">for</span> <span class="n">tagindex</span><span class="p">,</span> <span class="n">tag</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_tags</span><span class="p">):</span>
<a name="line-1411"></a>            <span class="n">offset2value</span> <span class="o">=</span> <span class="n">tagoffset</span> <span class="o">+</span> <span class="n">tagindex</span><span class="o">*</span><span class="n">tagsize</span> <span class="o">+</span> <span class="n">offsetsize</span> <span class="o">+</span> <span class="mi">4</span>
<a name="line-1412"></a>            <span class="k">if</span> <span class="n">tag</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
<a name="line-1413"></a>                <span class="n">pos</span> <span class="o">=</span> <span class="n">ifd</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1414"></a>                <span class="k">if</span> <span class="n">pos</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>  <span class="c1"># tag value is expected to begin on word boundary</span>
<a name="line-1415"></a>                    <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="sa">b</span><span class="s1">'</span><span class="se">\0</span><span class="s1">'</span><span class="p">)</span>
<a name="line-1416"></a>                    <span class="n">pos</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-1417"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset2value</span><span class="p">)</span>
<a name="line-1418"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">pos</span> <span class="o">+</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()))</span>
<a name="line-1419"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-1420"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">tag</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<a name="line-1421"></a>                <span class="k">if</span> <span class="n">tag</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tagoffsets</span><span class="p">:</span>
<a name="line-1422"></a>                    <span class="c1"># save strip/tile offsets for later updates</span>
<a name="line-1423"></a>                    <span class="n">stripoffset2offset</span> <span class="o">=</span> <span class="n">offset2value</span>
<a name="line-1424"></a>                    <span class="n">stripoffset2value</span> <span class="o">=</span> <span class="n">pos</span>
<a name="line-1425"></a>            <span class="k">elif</span> <span class="n">tag</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tagoffsets</span><span class="p">:</span>
<a name="line-1426"></a>                <span class="c1"># save strip/tile offsets for later updates</span>
<a name="line-1427"></a>                <span class="n">stripoffset2offset</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1428"></a>                <span class="n">stripoffset2value</span> <span class="o">=</span> <span class="n">offset2value</span>
<a name="line-1429"></a>        <span class="c1"># size to word boundary</span>
<a name="line-1430"></a>        <span class="k">if</span> <span class="n">ifd</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-1431"></a>            <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="sa">b</span><span class="s1">'</span><span class="se">\0</span><span class="s1">'</span><span class="p">)</span>
<a name="line-1432"></a>
<a name="line-1433"></a>        <span class="c1"># check if all IFDs fit in file</span>
<a name="line-1434"></a>        <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1435"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_bigtiff</span> <span class="ow">and</span> <span class="n">pos</span> <span class="o">+</span> <span class="n">ifd</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span> <span class="o">*</span> <span class="n">pageno</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span> <span class="o">-</span> <span class="mi">256</span><span class="p">:</span>
<a name="line-1436"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">:</span>
<a name="line-1437"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"truncating ImageJ file"</span><span class="p">)</span>
<a name="line-1438"></a>                <span class="k">return</span>
<a name="line-1439"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"data too large for non-BigTIFF file"</span><span class="p">)</span>
<a name="line-1440"></a>
<a name="line-1441"></a>        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">pageno</span><span class="p">):</span>
<a name="line-1442"></a>            <span class="c1"># update pointer at IFD offset</span>
<a name="line-1443"></a>            <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1444"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_ifdoffset</span><span class="p">)</span>
<a name="line-1445"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">pos</span><span class="p">))</span>
<a name="line-1446"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-1447"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_ifdoffset</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">+</span> <span class="n">ifdoffset</span>
<a name="line-1448"></a>            <span class="c1"># update strip/tile offsets in IFD</span>
<a name="line-1449"></a>            <span class="n">dataoffset</span> <span class="o">+=</span> <span class="n">pagedatasize</span>  <span class="c1"># offset to image data</span>
<a name="line-1450"></a>            <span class="k">if</span> <span class="n">stripoffset2offset</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1451"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">stripoffset2value</span><span class="p">)</span>
<a name="line-1452"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">dataoffset</span><span class="p">))</span>
<a name="line-1453"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1454"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">stripoffset2offset</span><span class="p">)</span>
<a name="line-1455"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">pos</span> <span class="o">+</span> <span class="n">stripoffset2value</span><span class="p">))</span>
<a name="line-1456"></a>                <span class="n">ifd</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">stripoffset2value</span><span class="p">)</span>
<a name="line-1457"></a>                <span class="n">stripoffset</span> <span class="o">=</span> <span class="n">dataoffset</span>
<a name="line-1458"></a>                <span class="k">for</span> <span class="n">size</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">_databytecounts</span><span class="p">:</span>
<a name="line-1459"></a>                    <span class="n">ifd</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">pack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">stripoffset</span><span class="p">))</span>
<a name="line-1460"></a>                    <span class="n">stripoffset</span> <span class="o">+=</span> <span class="n">size</span>
<a name="line-1461"></a>            <span class="c1"># write ifd entry</span>
<a name="line-1462"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">ifd</span><span class="o">.</span><span class="n">getvalue</span><span class="p">())</span>
<a name="line-1463"></a>
<a name="line-1464"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_tags</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1465"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_datadtype</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1466"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_dataoffset</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1467"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_databytecounts</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1468"></a>        <span class="c1"># do not reset _shape or _data_shape</span>
<a name="line-1469"></a>
<a name="line-1470"></a>    <span class="k">def</span> <span class="nf">_write_image_description</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1471"></a>        <span class="sd">"""Write meta data to ImageDescription tag."""</span>
<a name="line-1472"></a>        <span class="k">if</span> <span class="p">(</span><span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">or</span>
<a name="line-1473"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionoffset</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">):</span>
<a name="line-1474"></a>            <span class="k">return</span>
<a name="line-1475"></a>
<a name="line-1476"></a>        <span class="n">colormapped</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_colormap</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span>
<a name="line-1477"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_imagej</span><span class="p">:</span>
<a name="line-1478"></a>            <span class="n">isrgb</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<a name="line-1479"></a>            <span class="n">description</span> <span class="o">=</span> <span class="n">imagej_description</span><span class="p">(</span>
<a name="line-1480"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span><span class="p">,</span> <span class="n">isrgb</span><span class="p">,</span> <span class="n">colormapped</span><span class="p">,</span> <span class="o">**</span><span class="bp">self</span><span class="o">.</span><span class="n">_metadata</span><span class="p">)</span>
<a name="line-1481"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1482"></a>            <span class="n">description</span> <span class="o">=</span> <span class="n">json_description</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_datashape</span><span class="p">,</span> <span class="o">**</span><span class="bp">self</span><span class="o">.</span><span class="n">_metadata</span><span class="p">)</span>
<a name="line-1483"></a>
<a name="line-1484"></a>        <span class="c1"># rewrite description and its length to file</span>
<a name="line-1485"></a>        <span class="n">description</span> <span class="o">=</span> <span class="n">description</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">'utf-8'</span><span class="p">)</span>
<a name="line-1486"></a>        <span class="n">description</span> <span class="o">=</span> <span class="n">description</span><span class="p">[:</span><span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlen</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-1487"></a>        <span class="n">pos</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-1488"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_descriptionoffset</span><span class="p">)</span>
<a name="line-1489"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
<a name="line-1490"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlenoffset</span><span class="p">)</span>
<a name="line-1491"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_byteorder</span><span class="o">+</span><span class="bp">self</span><span class="o">.</span><span class="n">_offsetformat</span><span class="p">,</span>
<a name="line-1492"></a>                                   <span class="nb">len</span><span class="p">(</span><span class="n">description</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
<a name="line-1493"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-1494"></a>
<a name="line-1495"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionoffset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-1496"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlenoffset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-1497"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_descriptionlen</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-1498"></a>
<a name="line-1499"></a>    <span class="k">def</span> <span class="nf">_now</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1500"></a>        <span class="sd">"""Return current date and time."""</span>
<a name="line-1501"></a>        <span class="k">return</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span>
<a name="line-1502"></a>
<a name="line-1503"></a>    <span class="k">def</span> <span class="nf">close</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1504"></a>        <span class="sd">"""Write remaining pages and close file handle."""</span>
<a name="line-1505"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_truncate</span><span class="p">:</span>
<a name="line-1506"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_write_remaining_pages</span><span class="p">()</span>
<a name="line-1507"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_write_image_description</span><span class="p">()</span>
<a name="line-1508"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-1509"></a>
<a name="line-1510"></a>    <span class="k">def</span> <span class="fm">__enter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1511"></a>        <span class="k">return</span> <span class="bp">self</span>
<a name="line-1512"></a>
<a name="line-1513"></a>    <span class="k">def</span> <span class="fm">__exit__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">exc_type</span><span class="p">,</span> <span class="n">exc_value</span><span class="p">,</span> <span class="n">traceback</span><span class="p">):</span>
<a name="line-1514"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-1515"></a>
<a name="line-1516"></a>
<a name="line-1517"></a><span class="k">class</span> <span class="nc">TiffFile</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-1518"></a>    <span class="sd">"""Read image and metadata from TIFF file.</span>
<a name="line-1519"></a>
<a name="line-1520"></a><span class="sd">    TiffFile instances must be closed using the 'close' method, which is</span>
<a name="line-1521"></a><span class="sd">    automatically called when using the 'with' context manager.</span>
<a name="line-1522"></a>
<a name="line-1523"></a><span class="sd">    Attributes</span>
<a name="line-1524"></a><span class="sd">    ----------</span>
<a name="line-1525"></a><span class="sd">    pages : TiffPages</span>
<a name="line-1526"></a><span class="sd">        Sequence of TIFF pages in file.</span>
<a name="line-1527"></a><span class="sd">    series : list of TiffPageSeries</span>
<a name="line-1528"></a><span class="sd">        Sequences of closely related TIFF pages. These are computed</span>
<a name="line-1529"></a><span class="sd">        from OME, LSM, ImageJ, etc. metadata or based on similarity</span>
<a name="line-1530"></a><span class="sd">        of page properties such as shape, dtype, compression, etc.</span>
<a name="line-1531"></a><span class="sd">    byteorder : '&gt;', '&lt;'</span>
<a name="line-1532"></a><span class="sd">        The endianness of data in the file.</span>
<a name="line-1533"></a><span class="sd">        '&gt;': big-endian (Motorola).</span>
<a name="line-1534"></a><span class="sd">        '&gt;': little-endian (Intel).</span>
<a name="line-1535"></a><span class="sd">    is_flag : bool</span>
<a name="line-1536"></a><span class="sd">        If True, file is of a certain format.</span>
<a name="line-1537"></a><span class="sd">        Flags are: bigtiff, movie, shaped, ome, imagej, stk, lsm, fluoview,</span>
<a name="line-1538"></a><span class="sd">        nih, vista, 'micromanager, metaseries, mdgel, mediacy, tvips, fei,</span>
<a name="line-1539"></a><span class="sd">        sem, scn, svs, scanimage, andor, epics, pilatus.</span>
<a name="line-1540"></a>
<a name="line-1541"></a><span class="sd">    All attributes are read-only.</span>
<a name="line-1542"></a>
<a name="line-1543"></a><span class="sd">    Examples</span>
<a name="line-1544"></a><span class="sd">    --------</span>
<a name="line-1545"></a><span class="sd">    &gt;&gt;&gt; # read image array from TIFF file</span>
<a name="line-1546"></a><span class="sd">    &gt;&gt;&gt; imsave('temp.tif', numpy.random.rand(5, 301, 219))</span>
<a name="line-1547"></a><span class="sd">    &gt;&gt;&gt; with TiffFile('temp.tif') as tif:</span>
<a name="line-1548"></a><span class="sd">    ...     data = tif.asarray()</span>
<a name="line-1549"></a><span class="sd">    &gt;&gt;&gt; data.shape</span>
<a name="line-1550"></a><span class="sd">    (5, 301, 219)</span>
<a name="line-1551"></a>
<a name="line-1552"></a><span class="sd">    """</span>
<a name="line-1553"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">arg</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-1554"></a>                 <span class="n">multifile</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">movie</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-1555"></a>        <span class="sd">"""Initialize instance from file.</span>
<a name="line-1556"></a>
<a name="line-1557"></a><span class="sd">        Parameters</span>
<a name="line-1558"></a><span class="sd">        ----------</span>
<a name="line-1559"></a><span class="sd">        arg : str or open file</span>
<a name="line-1560"></a><span class="sd">            Name of file or open file object.</span>
<a name="line-1561"></a><span class="sd">            The file objects are closed in TiffFile.close().</span>
<a name="line-1562"></a><span class="sd">        name : str</span>
<a name="line-1563"></a><span class="sd">            Optional name of file in case 'arg' is a file handle.</span>
<a name="line-1564"></a><span class="sd">        offset : int</span>
<a name="line-1565"></a><span class="sd">            Optional start position of embedded file. By default, this is</span>
<a name="line-1566"></a><span class="sd">            the current file position.</span>
<a name="line-1567"></a><span class="sd">        size : int</span>
<a name="line-1568"></a><span class="sd">            Optional size of embedded file. By default, this is the number</span>
<a name="line-1569"></a><span class="sd">            of bytes from the 'offset' to the end of the file.</span>
<a name="line-1570"></a><span class="sd">        multifile : bool</span>
<a name="line-1571"></a><span class="sd">            If True (default), series may include pages from multiple files.</span>
<a name="line-1572"></a><span class="sd">            Currently applies to OME-TIFF only.</span>
<a name="line-1573"></a><span class="sd">        movie : bool</span>
<a name="line-1574"></a><span class="sd">            If True, assume that later pages differ from first page only by</span>
<a name="line-1575"></a><span class="sd">            data offsets and bytecounts. Significantly increases speed and</span>
<a name="line-1576"></a><span class="sd">            reduces memory usage when reading movies with thousands of pages.</span>
<a name="line-1577"></a><span class="sd">            Enabling this for non-movie files will result in data corruption</span>
<a name="line-1578"></a><span class="sd">            or crashes. Python 3 only.</span>
<a name="line-1579"></a><span class="sd">        kwargs : bool</span>
<a name="line-1580"></a><span class="sd">            'is_ome': If False, disable processing of OME-XML metadata.</span>
<a name="line-1581"></a>
<a name="line-1582"></a><span class="sd">        """</span>
<a name="line-1583"></a>        <span class="k">if</span> <span class="s1">'fastij'</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="p">:</span>
<a name="line-1584"></a>            <span class="k">del</span> <span class="n">kwargs</span><span class="p">[</span><span class="s1">'fastij'</span><span class="p">]</span>
<a name="line-1585"></a>            <span class="k">raise</span> <span class="ne">DeprecationWarning</span><span class="p">(</span><span class="s2">"The fastij option will be removed."</span><span class="p">)</span>
<a name="line-1586"></a>        <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
<a name="line-1587"></a>            <span class="k">if</span> <span class="n">key</span><span class="p">[:</span><span class="mi">3</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'is_'</span> <span class="ow">and</span> <span class="n">key</span><span class="p">[</span><span class="mi">3</span><span class="p">:]</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">FILE_FLAGS</span><span class="p">:</span>
<a name="line-1588"></a>                <span class="k">if</span> <span class="n">value</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">value</span><span class="p">:</span>
<a name="line-1589"></a>                    <span class="nb">setattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">,</span> <span class="nb">bool</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
<a name="line-1590"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1591"></a>                <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span>
<a name="line-1592"></a>                    <span class="s2">"got an unexpected keyword argument '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="n">key</span><span class="p">)</span>
<a name="line-1593"></a>
<a name="line-1594"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="n">FileHandle</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">'rb'</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offset</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">size</span><span class="p">)</span>
<a name="line-1595"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="o">=</span> <span class="n">fh</span>
<a name="line-1596"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_multifile</span> <span class="o">=</span> <span class="nb">bool</span><span class="p">(</span><span class="n">multifile</span><span class="p">)</span>
<a name="line-1597"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_files</span> <span class="o">=</span> <span class="p">{</span><span class="n">fh</span><span class="o">.</span><span class="n">name</span><span class="p">:</span> <span class="bp">self</span><span class="p">}</span>  <span class="c1"># cache of TiffFiles</span>
<a name="line-1598"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-1599"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<a name="line-1600"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-1601"></a>                <span class="n">byteorder</span> <span class="o">=</span> <span class="p">{</span><span class="sa">b</span><span class="s1">'II'</span><span class="p">:</span> <span class="s1">'&lt;'</span><span class="p">,</span> <span class="sa">b</span><span class="s1">'MM'</span><span class="p">:</span> <span class="s1">'&gt;'</span><span class="p">}[</span><span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">2</span><span class="p">)]</span>
<a name="line-1602"></a>            <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
<a name="line-1603"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid TIFF file"</span><span class="p">)</span>
<a name="line-1604"></a>            <span class="n">sys_byteorder</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'big'</span><span class="p">:</span> <span class="s1">'&gt;'</span><span class="p">,</span> <span class="s1">'little'</span><span class="p">:</span> <span class="s1">'&lt;'</span><span class="p">}[</span><span class="n">sys</span><span class="o">.</span><span class="n">byteorder</span><span class="p">]</span>
<a name="line-1605"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">is_native</span> <span class="o">=</span> <span class="n">byteorder</span> <span class="o">==</span> <span class="n">sys_byteorder</span>
<a name="line-1606"></a>
<a name="line-1607"></a>            <span class="n">version</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="s1">'H'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">2</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-1608"></a>            <span class="k">if</span> <span class="n">version</span> <span class="o">==</span> <span class="mi">43</span><span class="p">:</span>
<a name="line-1609"></a>                <span class="c1"># BigTiff</span>
<a name="line-1610"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">is_bigtiff</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-1611"></a>                <span class="n">offsetsize</span><span class="p">,</span> <span class="n">zero</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="s1">'HH'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
<a name="line-1612"></a>                <span class="k">if</span> <span class="n">zero</span> <span class="ow">or</span> <span class="n">offsetsize</span> <span class="o">!=</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-1613"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid BigTIFF file"</span><span class="p">)</span>
<a name="line-1614"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">byteorder</span> <span class="o">=</span> <span class="n">byteorder</span>
<a name="line-1615"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">offsetsize</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-1616"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">offsetformat</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'Q'</span>
<a name="line-1617"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagnosize</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-1618"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagnoformat</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'Q'</span>
<a name="line-1619"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagsize</span> <span class="o">=</span> <span class="mi">20</span>
<a name="line-1620"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagformat1</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'HH'</span>
<a name="line-1621"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagformat2</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'Q8s'</span>
<a name="line-1622"></a>            <span class="k">elif</span> <span class="n">version</span> <span class="o">==</span> <span class="mi">42</span><span class="p">:</span>
<a name="line-1623"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">is_bigtiff</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-1624"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">byteorder</span> <span class="o">=</span> <span class="n">byteorder</span>
<a name="line-1625"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">offsetsize</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-1626"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">offsetformat</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'I'</span>
<a name="line-1627"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagnosize</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-1628"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagnoformat</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'H'</span>
<a name="line-1629"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagsize</span> <span class="o">=</span> <span class="mi">12</span>
<a name="line-1630"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagformat1</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'HH'</span>
<a name="line-1631"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tagformat2</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'I4s'</span>
<a name="line-1632"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1633"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a TIFF file"</span><span class="p">)</span>
<a name="line-1634"></a>
<a name="line-1635"></a>            <span class="c1"># file handle is at offset to offset to first page</span>
<a name="line-1636"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">pages</span> <span class="o">=</span> <span class="n">TiffPages</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
<a name="line-1637"></a>
<a name="line-1638"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_lsm</span> <span class="ow">and</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">size</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span> <span class="ow">or</span>
<a name="line-1639"></a>                                <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">compression</span> <span class="o">!=</span> <span class="mi">1</span> <span class="ow">or</span>
<a name="line-1640"></a>                                <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">compression</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">):</span>
<a name="line-1641"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_lsm_load_pages</span><span class="p">()</span>
<a name="line-1642"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_lsm_fix_strip_offsets</span><span class="p">()</span>
<a name="line-1643"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_lsm_fix_strip_bytecounts</span><span class="p">()</span>
<a name="line-1644"></a>            <span class="k">elif</span> <span class="n">movie</span><span class="p">:</span>
<a name="line-1645"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-1646"></a>
<a name="line-1647"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-1648"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-1649"></a>            <span class="k">raise</span>
<a name="line-1650"></a>
<a name="line-1651"></a>    <span class="nd">@property</span>
<a name="line-1652"></a>    <span class="k">def</span> <span class="nf">filehandle</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1653"></a>        <span class="sd">"""Return file handle."""</span>
<a name="line-1654"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span>
<a name="line-1655"></a>
<a name="line-1656"></a>    <span class="nd">@property</span>
<a name="line-1657"></a>    <span class="k">def</span> <span class="nf">filename</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1658"></a>        <span class="sd">"""Return name of file handle."""</span>
<a name="line-1659"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">name</span>
<a name="line-1660"></a>
<a name="line-1661"></a>    <span class="nd">@lazyattr</span>
<a name="line-1662"></a>    <span class="k">def</span> <span class="nf">fstat</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1663"></a>        <span class="sd">"""Return status of file handle as stat_result object."""</span>
<a name="line-1664"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-1665"></a>            <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">fstat</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">fileno</span><span class="p">())</span>
<a name="line-1666"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>  <span class="c1"># io.UnsupportedOperation</span>
<a name="line-1667"></a>            <span class="k">return</span> <span class="bp">None</span>
<a name="line-1668"></a>
<a name="line-1669"></a>    <span class="k">def</span> <span class="nf">close</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1670"></a>        <span class="sd">"""Close open file handle(s)."""</span>
<a name="line-1671"></a>        <span class="k">for</span> <span class="n">tif</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">_files</span><span class="o">.</span><span class="n">values</span><span class="p">():</span>
<a name="line-1672"></a>            <span class="n">tif</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-1673"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_files</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-1674"></a>
<a name="line-1675"></a>    <span class="k">def</span> <span class="nf">asarray</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">series</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">maxworkers</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
<a name="line-1676"></a>        <span class="sd">"""Return image data from multiple TIFF pages as numpy array.</span>
<a name="line-1677"></a>
<a name="line-1678"></a><span class="sd">        By default, the data from the first series is returned.</span>
<a name="line-1679"></a>
<a name="line-1680"></a><span class="sd">        Parameters</span>
<a name="line-1681"></a><span class="sd">        ----------</span>
<a name="line-1682"></a><span class="sd">        key : int, slice, or sequence of page indices</span>
<a name="line-1683"></a><span class="sd">            Defines which pages to return as array.</span>
<a name="line-1684"></a><span class="sd">        series : int or TiffPageSeries</span>
<a name="line-1685"></a><span class="sd">            Defines which series of pages to return as array.</span>
<a name="line-1686"></a><span class="sd">        out : numpy.ndarray, str, or file-like object; optional</span>
<a name="line-1687"></a><span class="sd">            Buffer where image data will be saved.</span>
<a name="line-1688"></a><span class="sd">            If numpy.ndarray, a writable array of compatible dtype and shape.</span>
<a name="line-1689"></a><span class="sd">            If str or open file, the file name or file object used to</span>
<a name="line-1690"></a><span class="sd">            create a memory-map to an array stored in a binary file on disk.</span>
<a name="line-1691"></a><span class="sd">        maxworkers : int</span>
<a name="line-1692"></a><span class="sd">            Maximum number of threads to concurrently get data from pages.</span>
<a name="line-1693"></a><span class="sd">            Default is 1. If None, up to half the CPU cores are used.</span>
<a name="line-1694"></a><span class="sd">            Reading data from file is limited to a single thread.</span>
<a name="line-1695"></a><span class="sd">            Using multiple threads can significantly speed up this function</span>
<a name="line-1696"></a><span class="sd">            if the bottleneck is decoding compressed data.</span>
<a name="line-1697"></a><span class="sd">            If the bottleneck is I/O or pure Python code, using multiple</span>
<a name="line-1698"></a><span class="sd">            threads might be detrimental.</span>
<a name="line-1699"></a>
<a name="line-1700"></a><span class="sd">        """</span>
<a name="line-1701"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">:</span>
<a name="line-1702"></a>            <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">array</span><span class="p">([])</span>
<a name="line-1703"></a>        <span class="k">if</span> <span class="n">key</span> <span class="ow">is</span> <span class="bp">None</span> <span class="ow">and</span> <span class="n">series</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1704"></a>            <span class="n">series</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-1705"></a>        <span class="k">if</span> <span class="n">series</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1706"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-1707"></a>                <span class="n">series</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">series</span><span class="p">[</span><span class="n">series</span><span class="p">]</span>
<a name="line-1708"></a>            <span class="k">except</span> <span class="p">(</span><span class="ne">KeyError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">):</span>
<a name="line-1709"></a>                <span class="k">pass</span>
<a name="line-1710"></a>            <span class="n">pages</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">pages</span>
<a name="line-1711"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1712"></a>            <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-1713"></a>
<a name="line-1714"></a>        <span class="k">if</span> <span class="n">key</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1715"></a>            <span class="k">pass</span>
<a name="line-1716"></a>        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">inttypes</span><span class="p">):</span>
<a name="line-1717"></a>            <span class="n">pages</span> <span class="o">=</span> <span class="p">[</span><span class="n">pages</span><span class="p">[</span><span class="n">key</span><span class="p">]]</span>
<a name="line-1718"></a>        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="nb">slice</span><span class="p">):</span>
<a name="line-1719"></a>            <span class="n">pages</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-1720"></a>        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">collections</span><span class="o">.</span><span class="n">Iterable</span><span class="p">):</span>
<a name="line-1721"></a>            <span class="n">pages</span> <span class="o">=</span> <span class="p">[</span><span class="n">pages</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">key</span><span class="p">]</span>
<a name="line-1722"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1723"></a>            <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">(</span><span class="s2">"key must be an int, slice, or sequence"</span><span class="p">)</span>
<a name="line-1724"></a>
<a name="line-1725"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">pages</span><span class="p">:</span>
<a name="line-1726"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"no pages selected"</span><span class="p">)</span>
<a name="line-1727"></a>
<a name="line-1728"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_nih</span><span class="p">:</span>
<a name="line-1729"></a>            <span class="n">result</span> <span class="o">=</span> <span class="n">stack_pages</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">out</span><span class="p">,</span> <span class="n">maxworkers</span><span class="o">=</span><span class="n">maxworkers</span><span class="p">,</span>
<a name="line-1730"></a>                                 <span class="n">squeeze</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<a name="line-1731"></a>        <span class="k">elif</span> <span class="n">key</span> <span class="ow">is</span> <span class="bp">None</span> <span class="ow">and</span> <span class="n">series</span> <span class="ow">and</span> <span class="n">series</span><span class="o">.</span><span class="n">offset</span><span class="p">:</span>
<a name="line-1732"></a>            <span class="k">if</span> <span class="n">out</span> <span class="o">==</span> <span class="s1">'memmap'</span> <span class="ow">and</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">is_memmappable</span><span class="p">:</span>
<a name="line-1733"></a>                <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">memmap_array</span><span class="p">(</span>
<a name="line-1734"></a>                    <span class="n">series</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">series</span><span class="o">.</span><span class="n">offset</span><span class="p">)</span>
<a name="line-1735"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1736"></a>                <span class="k">if</span> <span class="n">out</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1737"></a>                    <span class="n">out</span> <span class="o">=</span> <span class="n">create_output</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">series</span><span class="o">.</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-1738"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">series</span><span class="o">.</span><span class="n">offset</span><span class="p">)</span>
<a name="line-1739"></a>                <span class="n">i</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">series</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<a name="line-1740"></a>                <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="n">series</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">out</span><span class="p">)</span>
<a name="line-1741"></a>                <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_native</span><span class="p">:</span>
<a name="line-1742"></a>                    <span class="n">result</span><span class="o">.</span><span class="n">byteswap</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
<a name="line-1743"></a>        <span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1744"></a>            <span class="n">result</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">out</span><span class="o">=</span><span class="n">out</span><span class="p">)</span>
<a name="line-1745"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1746"></a>            <span class="n">result</span> <span class="o">=</span> <span class="n">stack_pages</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">out</span><span class="p">,</span> <span class="n">maxworkers</span><span class="o">=</span><span class="n">maxworkers</span><span class="p">)</span>
<a name="line-1747"></a>
<a name="line-1748"></a>        <span class="k">if</span> <span class="n">result</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1749"></a>            <span class="k">return</span>
<a name="line-1750"></a>
<a name="line-1751"></a>        <span class="k">if</span> <span class="n">key</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-1752"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-1753"></a>                <span class="n">result</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span>
<a name="line-1754"></a>            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-1755"></a>                <span class="k">try</span><span class="p">:</span>
<a name="line-1756"></a>                    <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"failed to reshape </span><span class="si">%s</span><span class="s2"> to </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span>
<a name="line-1757"></a>                        <span class="n">result</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span>
<a name="line-1758"></a>                    <span class="c1"># try series of expected shapes</span>
<a name="line-1759"></a>                    <span class="n">result</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span>
<a name="line-1760"></a>                <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-1761"></a>                    <span class="c1"># revert to generic shape</span>
<a name="line-1762"></a>                    <span class="n">result</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">shape</span>
<a name="line-1763"></a>        <span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1764"></a>            <span class="n">result</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">shape</span>
<a name="line-1765"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1766"></a>            <span class="n">result</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">shape</span>
<a name="line-1767"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-1768"></a>
<a name="line-1769"></a>    <span class="nd">@lazyattr</span>
<a name="line-1770"></a>    <span class="k">def</span> <span class="nf">series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1771"></a>        <span class="sd">"""Return related pages as TiffPageSeries.</span>
<a name="line-1772"></a>
<a name="line-1773"></a><span class="sd">        Side effect: after calling this function, TiffFile.pages might contain</span>
<a name="line-1774"></a><span class="sd">        TiffPage and TiffFrame instances.</span>
<a name="line-1775"></a>
<a name="line-1776"></a><span class="sd">        """</span>
<a name="line-1777"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">:</span>
<a name="line-1778"></a>            <span class="k">return</span> <span class="p">[]</span>
<a name="line-1779"></a>
<a name="line-1780"></a>        <span class="n">useframes</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span>
<a name="line-1781"></a>        <span class="n">keyframe</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span>
<a name="line-1782"></a>        <span class="n">series</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-1783"></a>        <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="s1">'ome imagej lsm fluoview nih mdgel shaped'</span><span class="o">.</span><span class="n">split</span><span class="p">():</span>
<a name="line-1784"></a>            <span class="k">if</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">'is_'</span> <span class="o">+</span> <span class="n">name</span><span class="p">,</span> <span class="bp">False</span><span class="p">):</span>
<a name="line-1785"></a>                <span class="n">series</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">'_</span><span class="si">%s</span><span class="s1">_series'</span> <span class="o">%</span> <span class="n">name</span><span class="p">)()</span>
<a name="line-1786"></a>                <span class="k">break</span>
<a name="line-1787"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">series</span><span class="p">:</span>
<a name="line-1788"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="n">useframes</span>
<a name="line-1789"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="n">keyframe</span>
<a name="line-1790"></a>            <span class="n">series</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_generic_series</span><span class="p">()</span>
<a name="line-1791"></a>
<a name="line-1792"></a>        <span class="c1"># remove empty series, e.g. in MD Gel files</span>
<a name="line-1793"></a>        <span class="n">series</span> <span class="o">=</span> <span class="p">[</span><span class="n">s</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">series</span> <span class="k">if</span> <span class="nb">sum</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">]</span>
<a name="line-1794"></a>
<a name="line-1795"></a>        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">s</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">series</span><span class="p">):</span>
<a name="line-1796"></a>            <span class="n">s</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">i</span>
<a name="line-1797"></a>        <span class="k">return</span> <span class="n">series</span>
<a name="line-1798"></a>
<a name="line-1799"></a>    <span class="k">def</span> <span class="nf">_generic_series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1800"></a>        <span class="sd">"""Return image series in file."""</span>
<a name="line-1801"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span><span class="p">:</span>
<a name="line-1802"></a>            <span class="c1"># movie mode</span>
<a name="line-1803"></a>            <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-1804"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span>
<a name="line-1805"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">axes</span>
<a name="line-1806"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1807"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">),)</span> <span class="o">+</span> <span class="n">shape</span>
<a name="line-1808"></a>                <span class="n">axes</span> <span class="o">=</span> <span class="s1">'I'</span> <span class="o">+</span> <span class="n">axes</span>
<a name="line-1809"></a>            <span class="k">return</span> <span class="p">[</span><span class="n">TiffPageSeries</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[:],</span> <span class="n">shape</span><span class="p">,</span> <span class="n">page</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span>
<a name="line-1810"></a>                                   <span class="n">stype</span><span class="o">=</span><span class="s1">'movie'</span><span class="p">)]</span>
<a name="line-1811"></a>
<a name="line-1812"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">clear</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
<a name="line-1813"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
<a name="line-1814"></a>        <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-1815"></a>        <span class="n">keys</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-1816"></a>        <span class="n">series</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-1817"></a>        <span class="n">compressions</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">DECOMPESSORS</span>
<a name="line-1818"></a>        <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">:</span>
<a name="line-1819"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span><span class="p">:</span>
<a name="line-1820"></a>                <span class="k">continue</span>
<a name="line-1821"></a>            <span class="n">key</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span> <span class="o">+</span> <span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">axes</span><span class="p">,</span> <span class="n">page</span><span class="o">.</span><span class="n">compression</span> <span class="ow">in</span> <span class="n">compressions</span><span class="p">)</span>
<a name="line-1822"></a>            <span class="k">if</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">series</span><span class="p">:</span>
<a name="line-1823"></a>                <span class="n">series</span><span class="p">[</span><span class="n">key</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
<a name="line-1824"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-1825"></a>                <span class="n">keys</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
<a name="line-1826"></a>                <span class="n">series</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">page</span><span class="p">]</span>
<a name="line-1827"></a>        <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
<a name="line-1828"></a>            <span class="n">pages</span> <span class="o">=</span> <span class="n">series</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-1829"></a>            <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-1830"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span>
<a name="line-1831"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">axes</span>
<a name="line-1832"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1833"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">),)</span> <span class="o">+</span> <span class="n">shape</span>
<a name="line-1834"></a>                <span class="n">axes</span> <span class="o">=</span> <span class="s1">'I'</span> <span class="o">+</span> <span class="n">axes</span>
<a name="line-1835"></a>            <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">TiffPageSeries</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">page</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span>
<a name="line-1836"></a>                                         <span class="n">stype</span><span class="o">=</span><span class="s1">'Generic'</span><span class="p">))</span>
<a name="line-1837"></a>
<a name="line-1838"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-1839"></a>
<a name="line-1840"></a>    <span class="k">def</span> <span class="nf">_shaped_series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1841"></a>        <span class="sd">"""Return image series in "shaped" file."""</span>
<a name="line-1842"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-1843"></a>        <span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-1844"></a>        <span class="n">lenpages</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span>
<a name="line-1845"></a>
<a name="line-1846"></a>        <span class="k">def</span> <span class="nf">append_series</span><span class="p">(</span><span class="n">series</span><span class="p">,</span> <span class="n">pages</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">reshape</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
<a name="line-1847"></a>            <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-1848"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">axes</span><span class="p">:</span>
<a name="line-1849"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span>
<a name="line-1850"></a>                <span class="n">axes</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">axes</span>
<a name="line-1851"></a>                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1852"></a>                    <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">),)</span> <span class="o">+</span> <span class="n">shape</span>
<a name="line-1853"></a>                    <span class="n">axes</span> <span class="o">=</span> <span class="s1">'Q'</span> <span class="o">+</span> <span class="n">axes</span>
<a name="line-1854"></a>            <span class="n">size</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-1855"></a>            <span class="n">resize</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">reshape</span><span class="p">)</span>
<a name="line-1856"></a>            <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">is_contiguous</span> <span class="ow">and</span> <span class="n">resize</span> <span class="o">&gt;</span> <span class="n">size</span> <span class="ow">and</span> <span class="n">resize</span> <span class="o">%</span> <span class="n">size</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-1857"></a>                <span class="c1"># truncated file</span>
<a name="line-1858"></a>                <span class="n">axes</span> <span class="o">=</span> <span class="s1">'Q'</span> <span class="o">+</span> <span class="n">axes</span>
<a name="line-1859"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">resize</span> <span class="o">//</span> <span class="n">size</span><span class="p">,)</span> <span class="o">+</span> <span class="n">shape</span>
<a name="line-1860"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-1861"></a>                <span class="n">axes</span> <span class="o">=</span> <span class="n">reshape_axes</span><span class="p">(</span><span class="n">axes</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">reshape</span><span class="p">)</span>
<a name="line-1862"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="n">reshape</span>
<a name="line-1863"></a>            <span class="k">except</span> <span class="ne">ValueError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-1864"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
<a name="line-1865"></a>            <span class="n">series</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">TiffPageSeries</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">page</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span>
<a name="line-1866"></a>                                         <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">stype</span><span class="o">=</span><span class="s1">'Shaped'</span><span class="p">))</span>
<a name="line-1867"></a>
<a name="line-1868"></a>        <span class="n">keyframe</span> <span class="o">=</span> <span class="n">axes</span> <span class="o">=</span> <span class="n">shape</span> <span class="o">=</span> <span class="n">reshape</span> <span class="o">=</span> <span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1869"></a>        <span class="n">series</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-1870"></a>        <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-1871"></a>        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-1872"></a>            <span class="k">if</span> <span class="n">index</span> <span class="o">&gt;=</span> <span class="n">lenpages</span><span class="p">:</span>
<a name="line-1873"></a>                <span class="k">break</span>
<a name="line-1874"></a>            <span class="c1"># new keyframe; start of new series</span>
<a name="line-1875"></a>            <span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="n">index</span>
<a name="line-1876"></a>            <span class="n">keyframe</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
<a name="line-1877"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">keyframe</span><span class="o">.</span><span class="n">is_shaped</span><span class="p">:</span>
<a name="line-1878"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid shape metadata or corrupted file"</span><span class="p">)</span>
<a name="line-1879"></a>                <span class="k">return</span>
<a name="line-1880"></a>            <span class="c1"># read metadata</span>
<a name="line-1881"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1882"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-1883"></a>            <span class="n">metadata</span> <span class="o">=</span> <span class="n">json_description_metadata</span><span class="p">(</span><span class="n">keyframe</span><span class="o">.</span><span class="n">is_shaped</span><span class="p">)</span>
<a name="line-1884"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">metadata</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'name'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span>
<a name="line-1885"></a>            <span class="n">reshape</span> <span class="o">=</span> <span class="n">metadata</span><span class="p">[</span><span class="s1">'shape'</span><span class="p">]</span>
<a name="line-1886"></a>            <span class="n">truncated</span> <span class="o">=</span> <span class="n">metadata</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'truncated'</span><span class="p">,</span> <span class="bp">False</span><span class="p">)</span>
<a name="line-1887"></a>            <span class="k">if</span> <span class="s1">'axes'</span> <span class="ow">in</span> <span class="n">metadata</span><span class="p">:</span>
<a name="line-1888"></a>                <span class="n">axes</span> <span class="o">=</span> <span class="n">metadata</span><span class="p">[</span><span class="s1">'axes'</span><span class="p">]</span>
<a name="line-1889"></a>                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">axes</span><span class="p">)</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">reshape</span><span class="p">):</span>
<a name="line-1890"></a>                    <span class="n">shape</span> <span class="o">=</span> <span class="n">reshape</span>
<a name="line-1891"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-1892"></a>                    <span class="n">axes</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-1893"></a>                    <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"axes do not match shape"</span><span class="p">)</span>
<a name="line-1894"></a>            <span class="c1"># skip pages if possible</span>
<a name="line-1895"></a>            <span class="n">spages</span> <span class="o">=</span> <span class="p">[</span><span class="n">keyframe</span><span class="p">]</span>
<a name="line-1896"></a>            <span class="n">size</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">reshape</span><span class="p">)</span>
<a name="line-1897"></a>            <span class="n">npages</span><span class="p">,</span> <span class="n">mod</span> <span class="o">=</span> <span class="nb">divmod</span><span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="n">product</span><span class="p">(</span><span class="n">keyframe</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span>
<a name="line-1898"></a>            <span class="k">if</span> <span class="n">mod</span><span class="p">:</span>
<a name="line-1899"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"series shape not matching page shape"</span><span class="p">)</span>
<a name="line-1900"></a>                <span class="k">return</span>
<a name="line-1901"></a>            <span class="k">if</span> <span class="mi">1</span> <span class="o">&lt;</span> <span class="n">npages</span> <span class="o">&lt;=</span> <span class="n">lenpages</span> <span class="o">-</span> <span class="n">index</span><span class="p">:</span>
<a name="line-1902"></a>                <span class="n">size</span> <span class="o">*=</span> <span class="n">keyframe</span><span class="o">.</span><span class="n">_dtype</span><span class="o">.</span><span class="n">itemsize</span>
<a name="line-1903"></a>                <span class="k">if</span> <span class="n">truncated</span><span class="p">:</span>
<a name="line-1904"></a>                    <span class="n">npages</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-1905"></a>                <span class="k">elif</span> <span class="ow">not</span> <span class="p">(</span><span class="n">keyframe</span><span class="o">.</span><span class="n">is_final</span> <span class="ow">and</span>
<a name="line-1906"></a>                          <span class="n">keyframe</span><span class="o">.</span><span class="n">offset</span> <span class="o">+</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="n">pages</span><span class="p">[</span><span class="n">index</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">offset</span><span class="p">):</span>
<a name="line-1907"></a>                    <span class="c1"># need to read all pages for series</span>
<a name="line-1908"></a>                    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">index</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">index</span><span class="o">+</span><span class="n">npages</span><span class="p">):</span>
<a name="line-1909"></a>                        <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
<a name="line-1910"></a>                        <span class="n">page</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="n">keyframe</span>
<a name="line-1911"></a>                        <span class="n">spages</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
<a name="line-1912"></a>            <span class="n">append_series</span><span class="p">(</span><span class="n">series</span><span class="p">,</span> <span class="n">spages</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">reshape</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
<a name="line-1913"></a>            <span class="n">index</span> <span class="o">+=</span> <span class="n">npages</span>
<a name="line-1914"></a>
<a name="line-1915"></a>        <span class="k">return</span> <span class="n">series</span>
<a name="line-1916"></a>
<a name="line-1917"></a>    <span class="k">def</span> <span class="nf">_imagej_series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1918"></a>        <span class="sd">"""Return image series in ImageJ file."""</span>
<a name="line-1919"></a>        <span class="c1"># ImageJ's dimension order is always TZCYXS</span>
<a name="line-1920"></a>        <span class="c1"># TODO: fix loading of color, composite or palette images</span>
<a name="line-1921"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-1922"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-1923"></a>
<a name="line-1924"></a>        <span class="n">ij</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagej_metadata</span>
<a name="line-1925"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-1926"></a>        <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-1927"></a>
<a name="line-1928"></a>        <span class="k">def</span> <span class="nf">is_hyperstack</span><span class="p">():</span>
<a name="line-1929"></a>            <span class="c1"># ImageJ hyperstack store all image metadata in the first page and</span>
<a name="line-1930"></a>            <span class="c1"># image data is stored contiguously before the second page, if any.</span>
<a name="line-1931"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">page</span><span class="o">.</span><span class="n">is_final</span><span class="p">:</span>
<a name="line-1932"></a>                <span class="k">return</span> <span class="bp">False</span>
<a name="line-1933"></a>            <span class="n">images</span> <span class="o">=</span> <span class="n">ij</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'images'</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<a name="line-1934"></a>            <span class="k">if</span> <span class="n">images</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1935"></a>                <span class="k">return</span> <span class="bp">False</span>
<a name="line-1936"></a>            <span class="n">offset</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">is_contiguous</span>
<a name="line-1937"></a>            <span class="k">if</span> <span class="p">(</span><span class="n">count</span> <span class="o">!=</span> <span class="n">product</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span> <span class="o">*</span> <span class="n">page</span><span class="o">.</span><span class="n">bitspersample</span> <span class="o">//</span> <span class="mi">8</span>
<a name="line-1938"></a>                    <span class="ow">or</span> <span class="n">offset</span> <span class="o">+</span> <span class="n">count</span><span class="o">*</span><span class="n">images</span> <span class="o">&gt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">size</span><span class="p">):</span>
<a name="line-1939"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">()</span>
<a name="line-1940"></a>            <span class="c1"># check that next page is stored after data</span>
<a name="line-1941"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">offset</span> <span class="o">+</span> <span class="n">count</span><span class="o">*</span><span class="n">images</span> <span class="o">&gt;</span> <span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">offset</span><span class="p">:</span>
<a name="line-1942"></a>                <span class="k">return</span> <span class="bp">False</span>
<a name="line-1943"></a>            <span class="k">return</span> <span class="bp">True</span>
<a name="line-1944"></a>
<a name="line-1945"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-1946"></a>            <span class="n">hyperstack</span> <span class="o">=</span> <span class="n">is_hyperstack</span><span class="p">()</span>
<a name="line-1947"></a>        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-1948"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid ImageJ metadata or corrupted file"</span><span class="p">)</span>
<a name="line-1949"></a>            <span class="k">return</span>
<a name="line-1950"></a>        <span class="k">if</span> <span class="n">hyperstack</span><span class="p">:</span>
<a name="line-1951"></a>            <span class="c1"># no need to read other pages</span>
<a name="line-1952"></a>            <span class="n">pages</span> <span class="o">=</span> <span class="p">[</span><span class="n">page</span><span class="p">]</span>
<a name="line-1953"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1954"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
<a name="line-1955"></a>
<a name="line-1956"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-1957"></a>        <span class="n">axes</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-1958"></a>        <span class="k">if</span> <span class="s1">'frames'</span> <span class="ow">in</span> <span class="n">ij</span><span class="p">:</span>
<a name="line-1959"></a>            <span class="n">shape</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ij</span><span class="p">[</span><span class="s1">'frames'</span><span class="p">])</span>
<a name="line-1960"></a>            <span class="n">axes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'T'</span><span class="p">)</span>
<a name="line-1961"></a>        <span class="k">if</span> <span class="s1">'slices'</span> <span class="ow">in</span> <span class="n">ij</span><span class="p">:</span>
<a name="line-1962"></a>            <span class="n">shape</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ij</span><span class="p">[</span><span class="s1">'slices'</span><span class="p">])</span>
<a name="line-1963"></a>            <span class="n">axes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'Z'</span><span class="p">)</span>
<a name="line-1964"></a>        <span class="k">if</span> <span class="s1">'channels'</span> <span class="ow">in</span> <span class="n">ij</span> <span class="ow">and</span> <span class="ow">not</span> <span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">photometric</span> <span class="o">==</span> <span class="mi">2</span> <span class="ow">and</span> <span class="ow">not</span>
<a name="line-1965"></a>                                     <span class="n">ij</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'hyperstack'</span><span class="p">,</span> <span class="bp">False</span><span class="p">)):</span>
<a name="line-1966"></a>            <span class="n">shape</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">ij</span><span class="p">[</span><span class="s1">'channels'</span><span class="p">])</span>
<a name="line-1967"></a>            <span class="n">axes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'C'</span><span class="p">)</span>
<a name="line-1968"></a>        <span class="n">remain</span> <span class="o">=</span> <span class="n">ij</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'images'</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">))</span><span class="o">//</span><span class="p">(</span><span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="k">if</span> <span class="n">shape</span> <span class="k">else</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-1969"></a>        <span class="k">if</span> <span class="n">remain</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-1970"></a>            <span class="n">shape</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">remain</span><span class="p">)</span>
<a name="line-1971"></a>            <span class="n">axes</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'I'</span><span class="p">)</span>
<a name="line-1972"></a>        <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">axes</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'I'</span><span class="p">:</span>
<a name="line-1973"></a>            <span class="c1"># contiguous multiple images</span>
<a name="line-1974"></a>            <span class="n">shape</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
<a name="line-1975"></a>            <span class="n">axes</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">axes</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
<a name="line-1976"></a>        <span class="k">elif</span> <span class="n">page</span><span class="o">.</span><span class="n">axes</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'SI'</span><span class="p">:</span>
<a name="line-1977"></a>            <span class="c1"># color-mapped contiguous multiple images</span>
<a name="line-1978"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">+</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">:]</span>
<a name="line-1979"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">axes</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">+</span> <span class="n">axes</span> <span class="o">+</span> <span class="nb">list</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">axes</span><span class="p">[</span><span class="mi">2</span><span class="p">:])</span>
<a name="line-1980"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-1981"></a>            <span class="n">shape</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<a name="line-1982"></a>            <span class="n">axes</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">axes</span><span class="p">)</span>
<a name="line-1983"></a>        <span class="k">return</span> <span class="p">[</span><span class="n">TiffPageSeries</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">page</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">stype</span><span class="o">=</span><span class="s1">'ImageJ'</span><span class="p">)]</span>
<a name="line-1984"></a>
<a name="line-1985"></a>    <span class="k">def</span> <span class="nf">_fluoview_series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1986"></a>        <span class="sd">"""Return image series in FluoView file."""</span>
<a name="line-1987"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-1988"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-1989"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
<a name="line-1990"></a>        <span class="n">mm</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fluoview_metadata</span>
<a name="line-1991"></a>        <span class="n">mmhd</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">reversed</span><span class="p">(</span><span class="n">mm</span><span class="p">[</span><span class="s1">'Dimensions'</span><span class="p">]))</span>
<a name="line-1992"></a>        <span class="n">axes</span> <span class="o">=</span> <span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">MM_DIMENSIONS</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">upper</span><span class="p">(),</span> <span class="s1">'Q'</span><span class="p">)</span>
<a name="line-1993"></a>                       <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">mmhd</span> <span class="k">if</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-1994"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">mmhd</span> <span class="k">if</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-1995"></a>        <span class="k">return</span> <span class="p">[</span><span class="n">TiffPageSeries</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span>
<a name="line-1996"></a>                               <span class="n">name</span><span class="o">=</span><span class="n">mm</span><span class="p">[</span><span class="s1">'ImageName'</span><span class="p">],</span> <span class="n">stype</span><span class="o">=</span><span class="s1">'FluoView'</span><span class="p">)]</span>
<a name="line-1997"></a>
<a name="line-1998"></a>    <span class="k">def</span> <span class="nf">_mdgel_series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-1999"></a>        <span class="sd">"""Return image series in MD Gel file."""</span>
<a name="line-2000"></a>        <span class="c1"># only a single page, scaled according to metadata in second page</span>
<a name="line-2001"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-2002"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2003"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
<a name="line-2004"></a>        <span class="n">md</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">mdgel_metadata</span>
<a name="line-2005"></a>        <span class="k">if</span> <span class="n">md</span><span class="p">[</span><span class="s1">'FileTag'</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">128</span><span class="p">):</span>
<a name="line-2006"></a>            <span class="n">dtype</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="s1">'float32'</span><span class="p">)</span>
<a name="line-2007"></a>            <span class="n">scale</span> <span class="o">=</span> <span class="n">md</span><span class="p">[</span><span class="s1">'ScalePixel'</span><span class="p">]</span>
<a name="line-2008"></a>            <span class="n">scale</span> <span class="o">=</span> <span class="n">scale</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">scale</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>  <span class="c1"># rational</span>
<a name="line-2009"></a>            <span class="k">if</span> <span class="n">md</span><span class="p">[</span><span class="s1">'FileTag'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-2010"></a>                <span class="c1"># squary root data format</span>
<a name="line-2011"></a>                <span class="k">def</span> <span class="nf">transform</span><span class="p">(</span><span class="n">a</span><span class="p">):</span>
<a name="line-2012"></a>                    <span class="k">return</span> <span class="n">a</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">'float32'</span><span class="p">)</span><span class="o">**</span><span class="mi">2</span> <span class="o">*</span> <span class="n">scale</span>
<a name="line-2013"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-2014"></a>                <span class="k">def</span> <span class="nf">transform</span><span class="p">(</span><span class="n">a</span><span class="p">):</span>
<a name="line-2015"></a>                    <span class="k">return</span> <span class="n">a</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">'float32'</span><span class="p">)</span> <span class="o">*</span> <span class="n">scale</span>
<a name="line-2016"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-2017"></a>            <span class="n">transform</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-2018"></a>        <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2019"></a>        <span class="k">return</span> <span class="p">[</span><span class="n">TiffPageSeries</span><span class="p">([</span><span class="n">page</span><span class="p">],</span> <span class="n">page</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">page</span><span class="o">.</span><span class="n">axes</span><span class="p">,</span>
<a name="line-2020"></a>                               <span class="n">transform</span><span class="o">=</span><span class="n">transform</span><span class="p">,</span> <span class="n">stype</span><span class="o">=</span><span class="s1">'MDGel'</span><span class="p">)]</span>
<a name="line-2021"></a>
<a name="line-2022"></a>    <span class="k">def</span> <span class="nf">_nih_series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2023"></a>        <span class="sd">"""Return image series in NIH file."""</span>
<a name="line-2024"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2025"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2026"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
<a name="line-2027"></a>        <span class="n">page0</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2028"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2029"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="n">page0</span><span class="o">.</span><span class="n">shape</span>
<a name="line-2030"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="n">page0</span><span class="o">.</span><span class="n">axes</span>
<a name="line-2031"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-2032"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">),)</span> <span class="o">+</span> <span class="n">page0</span><span class="o">.</span><span class="n">shape</span>
<a name="line-2033"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="s1">'I'</span> <span class="o">+</span> <span class="n">page0</span><span class="o">.</span><span class="n">axes</span>
<a name="line-2034"></a>        <span class="k">return</span> <span class="p">[</span>
<a name="line-2035"></a>            <span class="n">TiffPageSeries</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">page0</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">stype</span><span class="o">=</span><span class="s1">'NIH'</span><span class="p">)]</span>
<a name="line-2036"></a>
<a name="line-2037"></a>    <span class="k">def</span> <span class="nf">_ome_series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2038"></a>        <span class="sd">"""Return image series in OME-TIFF file(s)."""</span>
<a name="line-2039"></a>        <span class="kn">from</span> <span class="nn">xml.etree</span> <span class="kn">import</span> <span class="n">cElementTree</span> <span class="k">as</span> <span class="n">etree</span>  <span class="c1"># delayed import</span>
<a name="line-2040"></a>        <span class="n">omexml</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">description</span>
<a name="line-2041"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-2042"></a>            <span class="n">root</span> <span class="o">=</span> <span class="n">etree</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">omexml</span><span class="p">)</span>
<a name="line-2043"></a>        <span class="k">except</span> <span class="n">etree</span><span class="o">.</span><span class="n">ParseError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-2044"></a>            <span class="c1"># TODO: test badly encoded ome-xml</span>
<a name="line-2045"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"ome-xml: </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">e</span><span class="p">)</span>
<a name="line-2046"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-2047"></a>                <span class="c1"># might work on Python 2</span>
<a name="line-2048"></a>                <span class="n">omexml</span> <span class="o">=</span> <span class="n">omexml</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">'utf-8'</span><span class="p">,</span> <span class="s1">'ignore'</span><span class="p">)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">'utf-8'</span><span class="p">)</span>
<a name="line-2049"></a>                <span class="n">root</span> <span class="o">=</span> <span class="n">etree</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">omexml</span><span class="p">)</span>
<a name="line-2050"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-2051"></a>                <span class="k">return</span>
<a name="line-2052"></a>
<a name="line-2053"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2054"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2055"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
<a name="line-2056"></a>
<a name="line-2057"></a>        <span class="n">uuid</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">attrib</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'UUID'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-2058"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_files</span> <span class="o">=</span> <span class="p">{</span><span class="n">uuid</span><span class="p">:</span> <span class="bp">self</span><span class="p">}</span>
<a name="line-2059"></a>        <span class="n">dirname</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">dirname</span>
<a name="line-2060"></a>        <span class="n">modulo</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-2061"></a>        <span class="n">series</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-2062"></a>        <span class="k">for</span> <span class="n">element</span> <span class="ow">in</span> <span class="n">root</span><span class="p">:</span>
<a name="line-2063"></a>            <span class="k">if</span> <span class="n">element</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'BinaryOnly'</span><span class="p">):</span>
<a name="line-2064"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"ome-xml: not an ome-tiff master file"</span><span class="p">)</span>
<a name="line-2065"></a>                <span class="k">break</span>
<a name="line-2066"></a>            <span class="k">if</span> <span class="n">element</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'StructuredAnnotations'</span><span class="p">):</span>
<a name="line-2067"></a>                <span class="k">for</span> <span class="n">annot</span> <span class="ow">in</span> <span class="n">element</span><span class="p">:</span>
<a name="line-2068"></a>                    <span class="k">if</span> <span class="ow">not</span> <span class="n">annot</span><span class="o">.</span><span class="n">attrib</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'Namespace'</span><span class="p">,</span>
<a name="line-2069"></a>                                            <span class="s1">''</span><span class="p">)</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'modulo'</span><span class="p">):</span>
<a name="line-2070"></a>                        <span class="k">continue</span>
<a name="line-2071"></a>                    <span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">annot</span><span class="p">:</span>
<a name="line-2072"></a>                        <span class="k">for</span> <span class="n">modul</span> <span class="ow">in</span> <span class="n">value</span><span class="p">:</span>
<a name="line-2073"></a>                            <span class="k">for</span> <span class="n">along</span> <span class="ow">in</span> <span class="n">modul</span><span class="p">:</span>
<a name="line-2074"></a>                                <span class="k">if</span> <span class="ow">not</span> <span class="n">along</span><span class="o">.</span><span class="n">tag</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'Along'</span><span class="p">):</span>
<a name="line-2075"></a>                                    <span class="k">continue</span>
<a name="line-2076"></a>                                <span class="n">axis</span> <span class="o">=</span> <span class="n">along</span><span class="o">.</span><span class="n">tag</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-2077"></a>                                <span class="n">newaxis</span> <span class="o">=</span> <span class="n">along</span><span class="o">.</span><span class="n">attrib</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'Type'</span><span class="p">,</span> <span class="s1">'other'</span><span class="p">)</span>
<a name="line-2078"></a>                                <span class="n">newaxis</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">AXES_LABELS</span><span class="p">[</span><span class="n">newaxis</span><span class="p">]</span>
<a name="line-2079"></a>                                <span class="k">if</span> <span class="s1">'Start'</span> <span class="ow">in</span> <span class="n">along</span><span class="o">.</span><span class="n">attrib</span><span class="p">:</span>
<a name="line-2080"></a>                                    <span class="n">step</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">along</span><span class="o">.</span><span class="n">attrib</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'Step'</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
<a name="line-2081"></a>                                    <span class="n">start</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">along</span><span class="o">.</span><span class="n">attrib</span><span class="p">[</span><span class="s1">'Start'</span><span class="p">])</span>
<a name="line-2082"></a>                                    <span class="n">stop</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">along</span><span class="o">.</span><span class="n">attrib</span><span class="p">[</span><span class="s1">'End'</span><span class="p">])</span> <span class="o">+</span> <span class="n">step</span>
<a name="line-2083"></a>                                    <span class="n">labels</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">stop</span><span class="p">,</span> <span class="n">step</span><span class="p">)</span>
<a name="line-2084"></a>                                <span class="k">else</span><span class="p">:</span>
<a name="line-2085"></a>                                    <span class="n">labels</span> <span class="o">=</span> <span class="p">[</span><span class="n">label</span><span class="o">.</span><span class="n">text</span> <span class="k">for</span> <span class="n">label</span> <span class="ow">in</span> <span class="n">along</span>
<a name="line-2086"></a>                                              <span class="k">if</span> <span class="n">label</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'Label'</span><span class="p">)]</span>
<a name="line-2087"></a>                                <span class="n">modulo</span><span class="p">[</span><span class="n">axis</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">newaxis</span><span class="p">,</span> <span class="n">labels</span><span class="p">)</span>
<a name="line-2088"></a>
<a name="line-2089"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">element</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'Image'</span><span class="p">):</span>
<a name="line-2090"></a>                <span class="k">continue</span>
<a name="line-2091"></a>
<a name="line-2092"></a>            <span class="n">attr</span> <span class="o">=</span> <span class="n">element</span><span class="o">.</span><span class="n">attrib</span>
<a name="line-2093"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">attr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'Name'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-2094"></a>
<a name="line-2095"></a>            <span class="k">for</span> <span class="n">pixels</span> <span class="ow">in</span> <span class="n">element</span><span class="p">:</span>
<a name="line-2096"></a>                <span class="k">if</span> <span class="ow">not</span> <span class="n">pixels</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'Pixels'</span><span class="p">):</span>
<a name="line-2097"></a>                    <span class="k">continue</span>
<a name="line-2098"></a>                <span class="n">attr</span> <span class="o">=</span> <span class="n">pixels</span><span class="o">.</span><span class="n">attrib</span>
<a name="line-2099"></a>                <span class="n">dtype</span> <span class="o">=</span> <span class="n">attr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'PixelType'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-2100"></a>                <span class="n">axes</span> <span class="o">=</span> <span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">reversed</span><span class="p">(</span><span class="n">attr</span><span class="p">[</span><span class="s1">'DimensionOrder'</span><span class="p">]))</span>
<a name="line-2101"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">attr</span><span class="p">[</span><span class="s1">'Size'</span><span class="o">+</span><span class="n">ax</span><span class="p">])</span> <span class="k">for</span> <span class="n">ax</span> <span class="ow">in</span> <span class="n">axes</span><span class="p">)</span>
<a name="line-2102"></a>                <span class="n">size</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">[:</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
<a name="line-2103"></a>                <span class="n">ifds</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-2104"></a>                <span class="n">spp</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1"># samples per pixel</span>
<a name="line-2105"></a>                <span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">pixels</span><span class="p">:</span>
<a name="line-2106"></a>                    <span class="k">if</span> <span class="n">data</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'Channel'</span><span class="p">):</span>
<a name="line-2107"></a>                        <span class="n">attr</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">attrib</span>
<a name="line-2108"></a>                        <span class="k">if</span> <span class="n">ifds</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-2109"></a>                            <span class="n">spp</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">attr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'SamplesPerPixel'</span><span class="p">,</span> <span class="n">spp</span><span class="p">))</span>
<a name="line-2110"></a>                            <span class="n">ifds</span> <span class="o">=</span> <span class="p">[</span><span class="bp">None</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">size</span> <span class="o">//</span> <span class="n">spp</span><span class="p">)</span>
<a name="line-2111"></a>                        <span class="k">elif</span> <span class="nb">int</span><span class="p">(</span><span class="n">attr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'SamplesPerPixel'</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span> <span class="o">!=</span> <span class="n">spp</span><span class="p">:</span>
<a name="line-2112"></a>                            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span>
<a name="line-2113"></a>                                <span class="s2">"Can't handle differing SamplesPerPixel"</span><span class="p">)</span>
<a name="line-2114"></a>                        <span class="k">continue</span>
<a name="line-2115"></a>                    <span class="k">if</span> <span class="n">ifds</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-2116"></a>                        <span class="n">ifds</span> <span class="o">=</span> <span class="p">[</span><span class="bp">None</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">size</span> <span class="o">//</span> <span class="n">spp</span><span class="p">)</span>
<a name="line-2117"></a>                    <span class="k">if</span> <span class="ow">not</span> <span class="n">data</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'TiffData'</span><span class="p">):</span>
<a name="line-2118"></a>                        <span class="k">continue</span>
<a name="line-2119"></a>                    <span class="n">attr</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">attrib</span>
<a name="line-2120"></a>                    <span class="n">ifd</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">attr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'IFD'</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<a name="line-2121"></a>                    <span class="n">num</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">attr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'NumPlanes'</span><span class="p">,</span> <span class="mi">1</span> <span class="k">if</span> <span class="s1">'IFD'</span> <span class="ow">in</span> <span class="n">attr</span> <span class="k">else</span> <span class="mi">0</span><span class="p">))</span>
<a name="line-2122"></a>                    <span class="n">num</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">attr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'PlaneCount'</span><span class="p">,</span> <span class="n">num</span><span class="p">))</span>
<a name="line-2123"></a>                    <span class="n">idx</span> <span class="o">=</span> <span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">attr</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'First'</span><span class="o">+</span><span class="n">ax</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="k">for</span> <span class="n">ax</span> <span class="ow">in</span> <span class="n">axes</span><span class="p">[:</span><span class="o">-</span><span class="mi">2</span><span class="p">]]</span>
<a name="line-2124"></a>                    <span class="k">try</span><span class="p">:</span>
<a name="line-2125"></a>                        <span class="n">idx</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">ravel_multi_index</span><span class="p">(</span><span class="n">idx</span><span class="p">,</span> <span class="n">shape</span><span class="p">[:</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
<a name="line-2126"></a>                    <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-2127"></a>                        <span class="c1"># ImageJ produces invalid ome-xml when cropping</span>
<a name="line-2128"></a>                        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"ome-xml: invalid TiffData index"</span><span class="p">)</span>
<a name="line-2129"></a>                        <span class="k">continue</span>
<a name="line-2130"></a>                    <span class="k">for</span> <span class="n">uuid</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
<a name="line-2131"></a>                        <span class="k">if</span> <span class="ow">not</span> <span class="n">uuid</span><span class="o">.</span><span class="n">tag</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'UUID'</span><span class="p">):</span>
<a name="line-2132"></a>                            <span class="k">continue</span>
<a name="line-2133"></a>                        <span class="k">if</span> <span class="n">uuid</span><span class="o">.</span><span class="n">text</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">_files</span><span class="p">:</span>
<a name="line-2134"></a>                            <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_multifile</span><span class="p">:</span>
<a name="line-2135"></a>                                <span class="c1"># abort reading multifile OME series</span>
<a name="line-2136"></a>                                <span class="c1"># and fall back to generic series</span>
<a name="line-2137"></a>                                <span class="k">return</span> <span class="p">[]</span>
<a name="line-2138"></a>                            <span class="n">fname</span> <span class="o">=</span> <span class="n">uuid</span><span class="o">.</span><span class="n">attrib</span><span class="p">[</span><span class="s1">'FileName'</span><span class="p">]</span>
<a name="line-2139"></a>                            <span class="k">try</span><span class="p">:</span>
<a name="line-2140"></a>                                <span class="n">tif</span> <span class="o">=</span> <span class="n">TiffFile</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">dirname</span><span class="p">,</span> <span class="n">fname</span><span class="p">))</span>
<a name="line-2141"></a>                                <span class="n">tif</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2142"></a>                                <span class="n">tif</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2143"></a>                                <span class="n">tif</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
<a name="line-2144"></a>                            <span class="k">except</span> <span class="p">(</span><span class="ne">IOError</span><span class="p">,</span> <span class="n">FileNotFoundError</span><span class="p">,</span> <span class="ne">ValueError</span><span class="p">):</span>
<a name="line-2145"></a>                                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span>
<a name="line-2146"></a>                                    <span class="s2">"ome-xml: failed to read '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="n">fname</span><span class="p">)</span>
<a name="line-2147"></a>                                <span class="k">break</span>
<a name="line-2148"></a>                            <span class="bp">self</span><span class="o">.</span><span class="n">_files</span><span class="p">[</span><span class="n">uuid</span><span class="o">.</span><span class="n">text</span><span class="p">]</span> <span class="o">=</span> <span class="n">tif</span>
<a name="line-2149"></a>                            <span class="n">tif</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-2150"></a>                        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_files</span><span class="p">[</span><span class="n">uuid</span><span class="o">.</span><span class="n">text</span><span class="p">]</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2151"></a>                        <span class="k">try</span><span class="p">:</span>
<a name="line-2152"></a>                            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num</span> <span class="k">if</span> <span class="n">num</span> <span class="k">else</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)):</span>
<a name="line-2153"></a>                                <span class="n">ifds</span><span class="p">[</span><span class="n">idx</span> <span class="o">+</span> <span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">ifd</span> <span class="o">+</span> <span class="n">i</span><span class="p">]</span>
<a name="line-2154"></a>                        <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-2155"></a>                            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"ome-xml: index out of range"</span><span class="p">)</span>
<a name="line-2156"></a>                        <span class="c1"># only process first uuid</span>
<a name="line-2157"></a>                        <span class="k">break</span>
<a name="line-2158"></a>                    <span class="k">else</span><span class="p">:</span>
<a name="line-2159"></a>                        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2160"></a>                        <span class="k">try</span><span class="p">:</span>
<a name="line-2161"></a>                            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">num</span> <span class="k">if</span> <span class="n">num</span> <span class="k">else</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)):</span>
<a name="line-2162"></a>                                <span class="n">ifds</span><span class="p">[</span><span class="n">idx</span> <span class="o">+</span> <span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">ifd</span> <span class="o">+</span> <span class="n">i</span><span class="p">]</span>
<a name="line-2163"></a>                        <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-2164"></a>                            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"ome-xml: index out of range"</span><span class="p">)</span>
<a name="line-2165"></a>
<a name="line-2166"></a>                <span class="k">if</span> <span class="nb">all</span><span class="p">(</span><span class="n">i</span> <span class="ow">is</span> <span class="bp">None</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">ifds</span><span class="p">):</span>
<a name="line-2167"></a>                    <span class="c1"># skip images without data</span>
<a name="line-2168"></a>                    <span class="k">continue</span>
<a name="line-2169"></a>
<a name="line-2170"></a>                <span class="c1"># set a keyframe on all ifds</span>
<a name="line-2171"></a>                <span class="n">keyframe</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-2172"></a>                <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">ifds</span><span class="p">:</span>
<a name="line-2173"></a>                    <span class="c1"># try find a TiffPage</span>
<a name="line-2174"></a>                    <span class="k">if</span> <span class="n">i</span> <span class="ow">and</span> <span class="n">i</span> <span class="o">==</span> <span class="n">i</span><span class="o">.</span><span class="n">keyframe</span><span class="p">:</span>
<a name="line-2175"></a>                        <span class="n">keyframe</span> <span class="o">=</span> <span class="n">i</span>
<a name="line-2176"></a>                        <span class="k">break</span>
<a name="line-2177"></a>                <span class="k">if</span> <span class="ow">not</span> <span class="n">keyframe</span><span class="p">:</span>
<a name="line-2178"></a>                    <span class="c1"># reload a TiffPage from file</span>
<a name="line-2179"></a>                    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">keyframe</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">ifds</span><span class="p">):</span>
<a name="line-2180"></a>                        <span class="k">if</span> <span class="n">keyframe</span><span class="p">:</span>
<a name="line-2181"></a>                            <span class="n">keyframe</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="n">keyframe</span><span class="o">.</span><span class="n">index</span>
<a name="line-2182"></a>                            <span class="n">keyframe</span> <span class="o">=</span> <span class="n">keyframe</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="n">keyframe</span><span class="o">.</span><span class="n">index</span><span class="p">]</span>
<a name="line-2183"></a>                            <span class="n">ifds</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">keyframe</span>
<a name="line-2184"></a>                            <span class="k">break</span>
<a name="line-2185"></a>                <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">ifds</span><span class="p">:</span>
<a name="line-2186"></a>                    <span class="k">if</span> <span class="n">i</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-2187"></a>                        <span class="n">i</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="n">keyframe</span>
<a name="line-2188"></a>
<a name="line-2189"></a>                <span class="n">dtype</span> <span class="o">=</span> <span class="n">keyframe</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-2190"></a>                <span class="n">series</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
<a name="line-2191"></a>                    <span class="n">TiffPageSeries</span><span class="p">(</span><span class="n">ifds</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">parent</span><span class="o">=</span><span class="bp">self</span><span class="p">,</span>
<a name="line-2192"></a>                                   <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">stype</span><span class="o">=</span><span class="s1">'OME'</span><span class="p">))</span>
<a name="line-2193"></a>        <span class="k">for</span> <span class="n">serie</span> <span class="ow">in</span> <span class="n">series</span><span class="p">:</span>
<a name="line-2194"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">serie</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<a name="line-2195"></a>            <span class="k">for</span> <span class="n">axis</span><span class="p">,</span> <span class="p">(</span><span class="n">newaxis</span><span class="p">,</span> <span class="n">labels</span><span class="p">)</span> <span class="ow">in</span> <span class="n">modulo</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
<a name="line-2196"></a>                <span class="n">i</span> <span class="o">=</span> <span class="n">serie</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">axis</span><span class="p">)</span>
<a name="line-2197"></a>                <span class="n">size</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">labels</span><span class="p">)</span>
<a name="line-2198"></a>                <span class="k">if</span> <span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">size</span><span class="p">:</span>
<a name="line-2199"></a>                    <span class="n">serie</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="n">serie</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">axis</span><span class="p">,</span> <span class="n">newaxis</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-2200"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-2201"></a>                    <span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">//=</span> <span class="n">size</span>
<a name="line-2202"></a>                    <span class="n">shape</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">size</span><span class="p">)</span>
<a name="line-2203"></a>                    <span class="n">serie</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="n">serie</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">axis</span><span class="p">,</span> <span class="n">axis</span><span class="o">+</span><span class="n">newaxis</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-2204"></a>            <span class="n">serie</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-2205"></a>        <span class="c1"># squeeze dimensions</span>
<a name="line-2206"></a>        <span class="k">for</span> <span class="n">serie</span> <span class="ow">in</span> <span class="n">series</span><span class="p">:</span>
<a name="line-2207"></a>            <span class="n">serie</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">serie</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="n">squeeze_axes</span><span class="p">(</span><span class="n">serie</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">serie</span><span class="o">.</span><span class="n">axes</span><span class="p">)</span>
<a name="line-2208"></a>        <span class="k">return</span> <span class="n">series</span>
<a name="line-2209"></a>
<a name="line-2210"></a>    <span class="k">def</span> <span class="nf">_lsm_series</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2211"></a>        <span class="sd">"""Return main image series in LSM file. Skip thumbnails."""</span>
<a name="line-2212"></a>        <span class="n">lsmi</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">lsm_metadata</span>
<a name="line-2213"></a>        <span class="n">axes</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO_SCANTYPE</span><span class="p">[</span><span class="n">lsmi</span><span class="p">[</span><span class="s1">'ScanType'</span><span class="p">]]</span>
<a name="line-2214"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">photometric</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>  <span class="c1"># RGB; more than one channel</span>
<a name="line-2215"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="n">axes</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'C'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'XY'</span><span class="p">,</span> <span class="s1">'XYC'</span><span class="p">)</span>
<a name="line-2216"></a>        <span class="k">if</span> <span class="n">lsmi</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'DimensionP'</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2217"></a>            <span class="n">axes</span> <span class="o">+=</span> <span class="s1">'P'</span>
<a name="line-2218"></a>        <span class="k">if</span> <span class="n">lsmi</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'DimensionM'</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2219"></a>            <span class="n">axes</span> <span class="o">+=</span> <span class="s1">'M'</span>
<a name="line-2220"></a>        <span class="n">axes</span> <span class="o">=</span> <span class="n">axes</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-2221"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">lsmi</span><span class="p">[</span><span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO_DIMENSIONS</span><span class="p">[</span><span class="n">i</span><span class="p">]])</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">axes</span><span class="p">)</span>
<a name="line-2222"></a>        <span class="n">name</span> <span class="o">=</span> <span class="n">lsmi</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'Name'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span>
<a name="line-2223"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2224"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[::</span><span class="mi">2</span><span class="p">]</span>
<a name="line-2225"></a>        <span class="n">dtype</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-2226"></a>        <span class="n">series</span> <span class="o">=</span> <span class="p">[</span><span class="n">TiffPageSeries</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span>
<a name="line-2227"></a>                                 <span class="n">stype</span><span class="o">=</span><span class="s1">'LSM'</span><span class="p">)]</span>
<a name="line-2228"></a>
<a name="line-2229"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">is_reduced</span><span class="p">:</span>
<a name="line-2230"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2231"></a>            <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">::</span><span class="mi">2</span><span class="p">]</span>
<a name="line-2232"></a>            <span class="n">dtype</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-2233"></a>            <span class="n">cp</span><span class="p">,</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span>
<a name="line-2234"></a>            <span class="k">while</span> <span class="n">cp</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span> <span class="ow">and</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="p">:</span>
<a name="line-2235"></a>                <span class="n">cp</span> <span class="o">*=</span> <span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<a name="line-2236"></a>                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-2237"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="n">shape</span><span class="p">[:</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">shape</span>
<a name="line-2238"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="n">axes</span><span class="p">[:</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="s1">'CYX'</span>
<a name="line-2239"></a>            <span class="n">series</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">TiffPageSeries</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span>
<a name="line-2240"></a>                                         <span class="n">stype</span><span class="o">=</span><span class="s1">'LSMreduced'</span><span class="p">))</span>
<a name="line-2241"></a>
<a name="line-2242"></a>        <span class="k">return</span> <span class="n">series</span>
<a name="line-2243"></a>
<a name="line-2244"></a>    <span class="k">def</span> <span class="nf">_lsm_load_pages</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2245"></a>        <span class="sd">"""Load all pages from LSM file."""</span>
<a name="line-2246"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">cache</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2247"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2248"></a>        <span class="c1"># second series: thumbnails</span>
<a name="line-2249"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2250"></a>        <span class="n">keyframe</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-2251"></a>        <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">::</span><span class="mi">2</span><span class="p">]:</span>
<a name="line-2252"></a>            <span class="n">page</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="n">keyframe</span>
<a name="line-2253"></a>        <span class="c1"># first series: data</span>
<a name="line-2254"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2255"></a>        <span class="n">keyframe</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2256"></a>        <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[::</span><span class="mi">2</span><span class="p">]:</span>
<a name="line-2257"></a>            <span class="n">page</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="n">keyframe</span>
<a name="line-2258"></a>
<a name="line-2259"></a>    <span class="k">def</span> <span class="nf">_lsm_fix_strip_offsets</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2260"></a>        <span class="sd">"""Unwrap strip offsets for LSM files greater than 4 GB.</span>
<a name="line-2261"></a>
<a name="line-2262"></a><span class="sd">        Each series and position require separate unwrapping (undocumented).</span>
<a name="line-2263"></a>
<a name="line-2264"></a><span class="sd">        """</span>
<a name="line-2265"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">size</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span><span class="p">:</span>
<a name="line-2266"></a>            <span class="k">return</span>
<a name="line-2267"></a>
<a name="line-2268"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2269"></a>        <span class="n">npages</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span>
<a name="line-2270"></a>        <span class="n">series</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">series</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2271"></a>        <span class="n">axes</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">axes</span>
<a name="line-2272"></a>
<a name="line-2273"></a>        <span class="c1"># find positions</span>
<a name="line-2274"></a>        <span class="n">positions</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2275"></a>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2276"></a>            <span class="k">if</span> <span class="n">series</span><span class="o">.</span><span class="n">axes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">in</span> <span class="s1">'PM'</span><span class="p">:</span>
<a name="line-2277"></a>                <span class="n">positions</span> <span class="o">*=</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<a name="line-2278"></a>
<a name="line-2279"></a>        <span class="c1"># make time axis first</span>
<a name="line-2280"></a>        <span class="k">if</span> <span class="n">positions</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2281"></a>            <span class="n">ntimes</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2282"></a>            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-2283"></a>                <span class="k">if</span> <span class="n">axes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'T'</span><span class="p">:</span>
<a name="line-2284"></a>                    <span class="n">ntimes</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<a name="line-2285"></a>                    <span class="k">break</span>
<a name="line-2286"></a>            <span class="k">if</span> <span class="n">ntimes</span><span class="p">:</span>
<a name="line-2287"></a>                <span class="n">div</span><span class="p">,</span> <span class="n">mod</span> <span class="o">=</span> <span class="nb">divmod</span><span class="p">(</span><span class="n">npages</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">positions</span><span class="o">*</span><span class="n">ntimes</span><span class="p">)</span>
<a name="line-2288"></a>                <span class="k">assert</span> <span class="n">mod</span> <span class="o">==</span> <span class="mi">0</span>
<a name="line-2289"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">positions</span><span class="p">,</span> <span class="n">ntimes</span><span class="p">,</span> <span class="n">div</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-2290"></a>                <span class="n">indices</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">))</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-2291"></a>                <span class="n">indices</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">moveaxis</span><span class="p">(</span><span class="n">indices</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<a name="line-2292"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-2293"></a>            <span class="n">indices</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">arange</span><span class="p">(</span><span class="n">npages</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-2294"></a>
<a name="line-2295"></a>        <span class="c1"># images of reduced page might be stored first</span>
<a name="line-2296"></a>        <span class="k">if</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
<a name="line-2297"></a>            <span class="n">indices</span> <span class="o">=</span> <span class="n">indices</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-2298"></a>
<a name="line-2299"></a>        <span class="c1"># unwrap offsets</span>
<a name="line-2300"></a>        <span class="n">wrap</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2301"></a>        <span class="n">previousoffset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2302"></a>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">indices</span><span class="o">.</span><span class="n">flat</span><span class="p">:</span>
<a name="line-2303"></a>            <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<a name="line-2304"></a>            <span class="n">dataoffsets</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-2305"></a>            <span class="k">for</span> <span class="n">currentoffset</span> <span class="ow">in</span> <span class="n">page</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">:</span>
<a name="line-2306"></a>                <span class="k">if</span> <span class="n">currentoffset</span> <span class="o">&lt;</span> <span class="n">previousoffset</span><span class="p">:</span>
<a name="line-2307"></a>                    <span class="n">wrap</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span>
<a name="line-2308"></a>                <span class="n">dataoffsets</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">currentoffset</span> <span class="o">+</span> <span class="n">wrap</span><span class="p">)</span>
<a name="line-2309"></a>                <span class="n">previousoffset</span> <span class="o">=</span> <span class="n">currentoffset</span>
<a name="line-2310"></a>            <span class="n">page</span><span class="o">.</span><span class="n">dataoffsets</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">dataoffsets</span><span class="p">)</span>
<a name="line-2311"></a>
<a name="line-2312"></a>    <span class="k">def</span> <span class="nf">_lsm_fix_strip_bytecounts</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2313"></a>        <span class="sd">"""Set databytecounts to size of compressed data.</span>
<a name="line-2314"></a>
<a name="line-2315"></a><span class="sd">        The StripByteCounts tag in LSM files contains the number of bytes</span>
<a name="line-2316"></a><span class="sd">        for the uncompressed data.</span>
<a name="line-2317"></a>
<a name="line-2318"></a><span class="sd">        """</span>
<a name="line-2319"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2320"></a>        <span class="k">if</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">compression</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2321"></a>            <span class="k">return</span>
<a name="line-2322"></a>        <span class="c1"># sort pages by first strip offset</span>
<a name="line-2323"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">p</span><span class="p">:</span> <span class="n">p</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="line-2324"></a>        <span class="n">npages</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span>
<a name="line-2325"></a>        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">page</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2326"></a>            <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">index</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-2327"></a>                <span class="k">continue</span>
<a name="line-2328"></a>            <span class="n">offsets</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">dataoffsets</span>
<a name="line-2329"></a>            <span class="n">bytecounts</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">databytecounts</span>
<a name="line-2330"></a>            <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">npages</span><span class="p">:</span>
<a name="line-2331"></a>                <span class="n">lastoffset</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2332"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-2333"></a>                <span class="c1"># LZW compressed strips might be longer than uncompressed</span>
<a name="line-2334"></a>                <span class="n">lastoffset</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">offsets</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="mi">2</span><span class="o">*</span><span class="n">bytecounts</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">size</span><span class="p">)</span>
<a name="line-2335"></a>            <span class="n">offsets</span> <span class="o">=</span> <span class="n">offsets</span> <span class="o">+</span> <span class="p">(</span><span class="n">lastoffset</span><span class="p">,)</span>
<a name="line-2336"></a>            <span class="n">page</span><span class="o">.</span><span class="n">databytecounts</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">offsets</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">offsets</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
<a name="line-2337"></a>                                        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bytecounts</span><span class="p">)))</span>
<a name="line-2338"></a>
<a name="line-2339"></a>    <span class="k">def</span> <span class="fm">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
<a name="line-2340"></a>        <span class="sd">"""Return 'is_flag' attributes from first page."""</span>
<a name="line-2341"></a>        <span class="k">if</span> <span class="n">name</span><span class="p">[</span><span class="mi">3</span><span class="p">:]</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">FILE_FLAGS</span><span class="p">:</span>
<a name="line-2342"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">:</span>
<a name="line-2343"></a>                <span class="k">return</span> <span class="bp">False</span>
<a name="line-2344"></a>            <span class="n">value</span> <span class="o">=</span> <span class="nb">bool</span><span class="p">(</span><span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">name</span><span class="p">))</span>
<a name="line-2345"></a>            <span class="nb">setattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
<a name="line-2346"></a>            <span class="k">return</span> <span class="n">value</span>
<a name="line-2347"></a>        <span class="k">raise</span> <span class="ne">AttributeError</span><span class="p">(</span><span class="s2">"'</span><span class="si">%s</span><span class="s2">' object has no attribute '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span>
<a name="line-2348"></a>                             <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__name__</span><span class="p">,</span> <span class="n">name</span><span class="p">))</span>
<a name="line-2349"></a>
<a name="line-2350"></a>    <span class="k">def</span> <span class="fm">__enter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2351"></a>        <span class="k">return</span> <span class="bp">self</span>
<a name="line-2352"></a>
<a name="line-2353"></a>    <span class="k">def</span> <span class="fm">__exit__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">exc_type</span><span class="p">,</span> <span class="n">exc_value</span><span class="p">,</span> <span class="n">traceback</span><span class="p">):</span>
<a name="line-2354"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-2355"></a>
<a name="line-2356"></a>    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
<a name="line-2357"></a>        <span class="sd">"""Return string containing information about file.</span>
<a name="line-2358"></a>
<a name="line-2359"></a><span class="sd">        The detail parameter specifies the level of detail returned:</span>
<a name="line-2360"></a>
<a name="line-2361"></a><span class="sd">        0: file only.</span>
<a name="line-2362"></a><span class="sd">        1: all series, first page of series and its tags.</span>
<a name="line-2363"></a><span class="sd">        2: large tag values and file metadata.</span>
<a name="line-2364"></a><span class="sd">        3: all pages.</span>
<a name="line-2365"></a>
<a name="line-2366"></a><span class="sd">        """</span>
<a name="line-2367"></a>        <span class="n">info</span> <span class="o">=</span> <span class="p">[</span>
<a name="line-2368"></a>            <span class="s2">"TiffFile '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="n">snipstr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="mi">32</span><span class="p">),</span>
<a name="line-2369"></a>            <span class="n">format_size</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">size</span><span class="p">),</span>
<a name="line-2370"></a>            <span class="p">{</span><span class="s1">'&lt;'</span><span class="p">:</span> <span class="s1">'LittleEndian'</span><span class="p">,</span> <span class="s1">'&gt;'</span><span class="p">:</span> <span class="s1">'BigEndian'</span><span class="p">}[</span><span class="bp">self</span><span class="o">.</span><span class="n">byteorder</span><span class="p">]]</span>
<a name="line-2371"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_bigtiff</span><span class="p">:</span>
<a name="line-2372"></a>            <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'BigTiff'</span><span class="p">)</span>
<a name="line-2373"></a>        <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'|'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">flags</span><span class="p">))</span>
<a name="line-2374"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2375"></a>            <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'</span><span class="si">%i</span><span class="s1"> Pages'</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">))</span>
<a name="line-2376"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">series</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2377"></a>            <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'</span><span class="si">%i</span><span class="s1"> Series'</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">series</span><span class="p">))</span>
<a name="line-2378"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_files</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2379"></a>            <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'</span><span class="si">%i</span><span class="s1"> Files'</span> <span class="o">%</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_files</span><span class="p">)))</span>
<a name="line-2380"></a>        <span class="n">info</span> <span class="o">=</span> <span class="s1">'  '</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">info</span><span class="p">)</span>
<a name="line-2381"></a>        <span class="k">if</span> <span class="n">detail</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-2382"></a>            <span class="k">return</span> <span class="n">info</span>
<a name="line-2383"></a>        <span class="n">info</span> <span class="o">=</span> <span class="p">[</span><span class="n">info</span><span class="p">]</span>
<a name="line-2384"></a>        <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">series</span><span class="p">))</span>
<a name="line-2385"></a>        <span class="k">if</span> <span class="n">detail</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">:</span>
<a name="line-2386"></a>            <span class="n">info</span><span class="o">.</span><span class="n">extend</span><span class="p">((</span><span class="n">TiffPage</span><span class="o">.</span><span class="fm">__str__</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="n">detail</span><span class="p">)</span>
<a name="line-2387"></a>                         <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2388"></a>                         <span class="k">if</span> <span class="n">p</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">))</span>
<a name="line-2389"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-2390"></a>            <span class="n">info</span><span class="o">.</span><span class="n">extend</span><span class="p">((</span><span class="n">TiffPage</span><span class="o">.</span><span class="fm">__str__</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">detail</span><span class="o">=</span><span class="n">detail</span><span class="p">)</span>
<a name="line-2391"></a>                         <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">series</span>
<a name="line-2392"></a>                         <span class="k">if</span> <span class="n">s</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">))</span>
<a name="line-2393"></a>        <span class="k">if</span> <span class="n">detail</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-2394"></a>            <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">flags</span><span class="p">):</span>
<a name="line-2395"></a>                <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span> <span class="o">+</span> <span class="s1">'_metadata'</span><span class="p">):</span>
<a name="line-2396"></a>                    <span class="n">m</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span> <span class="o">+</span> <span class="s1">'_metadata'</span><span class="p">)</span>
<a name="line-2397"></a>                    <span class="k">if</span> <span class="n">m</span><span class="p">:</span>
<a name="line-2398"></a>                        <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span>
<a name="line-2399"></a>                            <span class="s2">"</span><span class="si">%s</span><span class="s2">_METADATA</span><span class="se">\n</span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">name</span><span class="o">.</span><span class="n">upper</span><span class="p">(),</span> <span class="n">pformat</span><span class="p">(</span><span class="n">m</span><span class="p">)))</span>
<a name="line-2400"></a>        <span class="k">return</span> <span class="s1">'</span><span class="se">\n\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">info</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'</span><span class="se">\n\n\n</span><span class="s1">'</span><span class="p">,</span> <span class="s1">'</span><span class="se">\n\n</span><span class="s1">'</span><span class="p">)</span>
<a name="line-2401"></a>
<a name="line-2402"></a>    <span class="nd">@lazyattr</span>
<a name="line-2403"></a>    <span class="k">def</span> <span class="nf">flags</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2404"></a>        <span class="sd">"""Return set of file flags."""</span>
<a name="line-2405"></a>        <span class="k">return</span> <span class="nb">set</span><span class="p">(</span><span class="n">name</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">FILE_FLAGS</span><span class="p">)</span>
<a name="line-2406"></a>                   <span class="k">if</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">'is_'</span> <span class="o">+</span> <span class="n">name</span><span class="p">))</span>
<a name="line-2407"></a>
<a name="line-2408"></a>    <span class="nd">@lazyattr</span>
<a name="line-2409"></a>    <span class="k">def</span> <span class="nf">is_mdgel</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2410"></a>        <span class="sd">"""File has MD Gel format."""</span>
<a name="line-2411"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-2412"></a>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">is_mdgel</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">is_mdgel</span>
<a name="line-2413"></a>        <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-2414"></a>            <span class="k">return</span> <span class="bp">False</span>
<a name="line-2415"></a>
<a name="line-2416"></a>    <span class="nd">@property</span>
<a name="line-2417"></a>    <span class="k">def</span> <span class="nf">is_movie</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2418"></a>        <span class="sd">"""Return if file is a movie."""</span>
<a name="line-2419"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">useframes</span>
<a name="line-2420"></a>
<a name="line-2421"></a>    <span class="nd">@lazyattr</span>
<a name="line-2422"></a>    <span class="k">def</span> <span class="nf">shaped_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2423"></a>        <span class="sd">"""Return Tifffile metadata from JSON descriptions as dicts."""</span>
<a name="line-2424"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_shaped</span><span class="p">:</span>
<a name="line-2425"></a>            <span class="k">return</span>
<a name="line-2426"></a>        <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">json_description_metadata</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">is_shaped</span><span class="p">)</span>
<a name="line-2427"></a>                     <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">series</span> <span class="k">if</span> <span class="n">s</span><span class="o">.</span><span class="n">stype</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="o">==</span> <span class="s1">'shaped'</span><span class="p">)</span>
<a name="line-2428"></a>
<a name="line-2429"></a>    <span class="nd">@lazyattr</span>
<a name="line-2430"></a>    <span class="k">def</span> <span class="nf">ome_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2431"></a>        <span class="sd">"""Return OME XML as dict."""</span>
<a name="line-2432"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_ome</span><span class="p">:</span>
<a name="line-2433"></a>            <span class="k">return</span>
<a name="line-2434"></a>        <span class="k">return</span> <span class="n">xml2dict</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">description</span><span class="p">)</span>
<a name="line-2435"></a>
<a name="line-2436"></a>    <span class="nd">@lazyattr</span>
<a name="line-2437"></a>    <span class="k">def</span> <span class="nf">lsm_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2438"></a>        <span class="sd">"""Return LSM metadata from CZ_LSMINFO tag as dict."""</span>
<a name="line-2439"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_lsm</span><span class="p">:</span>
<a name="line-2440"></a>            <span class="k">return</span>
<a name="line-2441"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'CZ_LSMINFO'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2442"></a>
<a name="line-2443"></a>    <span class="nd">@lazyattr</span>
<a name="line-2444"></a>    <span class="k">def</span> <span class="nf">stk_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2445"></a>        <span class="sd">"""Return STK metadata from UIC tags as dict."""</span>
<a name="line-2446"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_stk</span><span class="p">:</span>
<a name="line-2447"></a>            <span class="k">return</span>
<a name="line-2448"></a>        <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2449"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">tags</span>
<a name="line-2450"></a>        <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-2451"></a>        <span class="n">result</span><span class="p">[</span><span class="s1">'NumberPlanes'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'UIC2tag'</span><span class="p">]</span><span class="o">.</span><span class="n">count</span>
<a name="line-2452"></a>        <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">description</span><span class="p">:</span>
<a name="line-2453"></a>            <span class="n">result</span><span class="p">[</span><span class="s1">'PlaneDescriptions'</span><span class="p">]</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">description</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'</span><span class="se">\0</span><span class="s1">'</span><span class="p">)</span>
<a name="line-2454"></a>            <span class="c1"># result['plane_descriptions'] = stk_description_metadata(</span>
<a name="line-2455"></a>            <span class="c1">#    page.image_description)</span>
<a name="line-2456"></a>        <span class="k">if</span> <span class="s1">'UIC1tag'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2457"></a>            <span class="n">result</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">tags</span><span class="p">[</span><span class="s1">'UIC1tag'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-2458"></a>        <span class="k">if</span> <span class="s1">'UIC3tag'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2459"></a>            <span class="n">result</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">tags</span><span class="p">[</span><span class="s1">'UIC3tag'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>  <span class="c1"># wavelengths</span>
<a name="line-2460"></a>        <span class="k">if</span> <span class="s1">'UIC4tag'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2461"></a>            <span class="n">result</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">tags</span><span class="p">[</span><span class="s1">'UIC4tag'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>  <span class="c1"># override uic1 tags</span>
<a name="line-2462"></a>        <span class="n">uic2tag</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'UIC2tag'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2463"></a>        <span class="n">result</span><span class="p">[</span><span class="s1">'ZDistance'</span><span class="p">]</span> <span class="o">=</span> <span class="n">uic2tag</span><span class="p">[</span><span class="s1">'ZDistance'</span><span class="p">]</span>
<a name="line-2464"></a>        <span class="n">result</span><span class="p">[</span><span class="s1">'TimeCreated'</span><span class="p">]</span> <span class="o">=</span> <span class="n">uic2tag</span><span class="p">[</span><span class="s1">'TimeCreated'</span><span class="p">]</span>
<a name="line-2465"></a>        <span class="n">result</span><span class="p">[</span><span class="s1">'TimeModified'</span><span class="p">]</span> <span class="o">=</span> <span class="n">uic2tag</span><span class="p">[</span><span class="s1">'TimeModified'</span><span class="p">]</span>
<a name="line-2466"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-2467"></a>            <span class="n">result</span><span class="p">[</span><span class="s1">'DatetimeCreated'</span><span class="p">]</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">array</span><span class="p">(</span>
<a name="line-2468"></a>                <span class="p">[</span><span class="n">julian_datetime</span><span class="p">(</span><span class="o">*</span><span class="n">dt</span><span class="p">)</span> <span class="k">for</span> <span class="n">dt</span> <span class="ow">in</span>
<a name="line-2469"></a>                 <span class="nb">zip</span><span class="p">(</span><span class="n">uic2tag</span><span class="p">[</span><span class="s1">'DateCreated'</span><span class="p">],</span> <span class="n">uic2tag</span><span class="p">[</span><span class="s1">'TimeCreated'</span><span class="p">])],</span>
<a name="line-2470"></a>                <span class="n">dtype</span><span class="o">=</span><span class="s1">'datetime64[ns]'</span><span class="p">)</span>
<a name="line-2471"></a>            <span class="n">result</span><span class="p">[</span><span class="s1">'DatetimeModified'</span><span class="p">]</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">array</span><span class="p">(</span>
<a name="line-2472"></a>                <span class="p">[</span><span class="n">julian_datetime</span><span class="p">(</span><span class="o">*</span><span class="n">dt</span><span class="p">)</span> <span class="k">for</span> <span class="n">dt</span> <span class="ow">in</span>
<a name="line-2473"></a>                 <span class="nb">zip</span><span class="p">(</span><span class="n">uic2tag</span><span class="p">[</span><span class="s1">'DateModified'</span><span class="p">],</span> <span class="n">uic2tag</span><span class="p">[</span><span class="s1">'TimeModified'</span><span class="p">])],</span>
<a name="line-2474"></a>                <span class="n">dtype</span><span class="o">=</span><span class="s1">'datetime64[ns]'</span><span class="p">)</span>
<a name="line-2475"></a>        <span class="k">except</span> <span class="ne">ValueError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-2476"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"stk_metadata: </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">e</span><span class="p">)</span>
<a name="line-2477"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-2478"></a>
<a name="line-2479"></a>    <span class="nd">@lazyattr</span>
<a name="line-2480"></a>    <span class="k">def</span> <span class="nf">imagej_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2481"></a>        <span class="sd">"""Return consolidated ImageJ metadata as dict."""</span>
<a name="line-2482"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_imagej</span><span class="p">:</span>
<a name="line-2483"></a>            <span class="k">return</span>
<a name="line-2484"></a>        <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2485"></a>        <span class="n">result</span> <span class="o">=</span> <span class="n">imagej_description_metadata</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">is_imagej</span><span class="p">)</span>
<a name="line-2486"></a>        <span class="k">if</span> <span class="s1">'IJMetadata'</span> <span class="ow">in</span> <span class="n">page</span><span class="o">.</span><span class="n">tags</span><span class="p">:</span>
<a name="line-2487"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-2488"></a>                <span class="n">result</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'IJMetadata'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-2489"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-2490"></a>                <span class="k">pass</span>
<a name="line-2491"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-2492"></a>
<a name="line-2493"></a>    <span class="nd">@lazyattr</span>
<a name="line-2494"></a>    <span class="k">def</span> <span class="nf">fluoview_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2495"></a>        <span class="sd">"""Return consolidated FluoView metadata as dict."""</span>
<a name="line-2496"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_fluoview</span><span class="p">:</span>
<a name="line-2497"></a>            <span class="k">return</span>
<a name="line-2498"></a>        <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-2499"></a>        <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2500"></a>        <span class="n">result</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'MM_Header'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-2501"></a>        <span class="c1"># TODO: read stamps from all pages</span>
<a name="line-2502"></a>        <span class="n">result</span><span class="p">[</span><span class="s1">'Stamp'</span><span class="p">]</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'MM_Stamp'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2503"></a>        <span class="c1"># skip parsing image description; not reliable</span>
<a name="line-2504"></a>        <span class="c1"># try:</span>
<a name="line-2505"></a>        <span class="c1">#     t = fluoview_description_metadata(page.image_description)</span>
<a name="line-2506"></a>        <span class="c1">#     if t is not None:</span>
<a name="line-2507"></a>        <span class="c1">#         result['ImageDescription'] = t</span>
<a name="line-2508"></a>        <span class="c1"># except Exception as e:</span>
<a name="line-2509"></a>        <span class="c1">#     warnings.warn(</span>
<a name="line-2510"></a>        <span class="c1">#         "failed to read FluoView image description: %s" % e)</span>
<a name="line-2511"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-2512"></a>
<a name="line-2513"></a>    <span class="nd">@lazyattr</span>
<a name="line-2514"></a>    <span class="k">def</span> <span class="nf">nih_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2515"></a>        <span class="sd">"""Return NIH Image metadata from NIHImageHeader tag as dict."""</span>
<a name="line-2516"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_nih</span><span class="p">:</span>
<a name="line-2517"></a>            <span class="k">return</span>
<a name="line-2518"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'NIHImageHeader'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2519"></a>
<a name="line-2520"></a>    <span class="nd">@lazyattr</span>
<a name="line-2521"></a>    <span class="k">def</span> <span class="nf">fei_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2522"></a>        <span class="sd">"""Return FEI metadata from SFEG or HELIOS tags as dict."""</span>
<a name="line-2523"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_fei</span><span class="p">:</span>
<a name="line-2524"></a>            <span class="k">return</span>
<a name="line-2525"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">tags</span>
<a name="line-2526"></a>        <span class="k">if</span> <span class="s1">'FEI_SFEG'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2527"></a>            <span class="k">return</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'FEI_SFEG'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2528"></a>        <span class="k">if</span> <span class="s1">'FEI_HELIOS'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2529"></a>            <span class="k">return</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'FEI_HELIOS'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2530"></a>
<a name="line-2531"></a>    <span class="nd">@lazyattr</span>
<a name="line-2532"></a>    <span class="k">def</span> <span class="nf">sem_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2533"></a>        <span class="sd">"""Return SEM metadata from CZ_SEM tag as dict."""</span>
<a name="line-2534"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_sem</span><span class="p">:</span>
<a name="line-2535"></a>            <span class="k">return</span>
<a name="line-2536"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'CZ_SEM'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2537"></a>
<a name="line-2538"></a>    <span class="nd">@lazyattr</span>
<a name="line-2539"></a>    <span class="k">def</span> <span class="nf">mdgel_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2540"></a>        <span class="sd">"""Return consolidated metadata from MD GEL tags as dict."""</span>
<a name="line-2541"></a>        <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[:</span><span class="mi">2</span><span class="p">]:</span>
<a name="line-2542"></a>            <span class="k">if</span> <span class="s1">'MDFileTag'</span> <span class="ow">in</span> <span class="n">page</span><span class="o">.</span><span class="n">tags</span><span class="p">:</span>
<a name="line-2543"></a>                <span class="n">tags</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">tags</span>
<a name="line-2544"></a>                <span class="k">break</span>
<a name="line-2545"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-2546"></a>            <span class="k">return</span>
<a name="line-2547"></a>        <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-2548"></a>        <span class="k">for</span> <span class="n">code</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">33445</span><span class="p">,</span> <span class="mi">33453</span><span class="p">):</span>
<a name="line-2549"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAGS</span><span class="p">[</span><span class="n">code</span><span class="p">]</span>
<a name="line-2550"></a>            <span class="k">if</span> <span class="n">name</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2551"></a>                <span class="k">continue</span>
<a name="line-2552"></a>            <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">[</span><span class="mi">2</span><span class="p">:]]</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="n">name</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2553"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-2554"></a>
<a name="line-2555"></a>    <span class="nd">@lazyattr</span>
<a name="line-2556"></a>    <span class="k">def</span> <span class="nf">andor_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2557"></a>        <span class="sd">"""Return Andor tags as dict."""</span>
<a name="line-2558"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">andor_tags</span>
<a name="line-2559"></a>
<a name="line-2560"></a>    <span class="nd">@lazyattr</span>
<a name="line-2561"></a>    <span class="k">def</span> <span class="nf">epics_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2562"></a>        <span class="sd">"""Return EPICS areaDetector tags as dict."""</span>
<a name="line-2563"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">epics_tags</span>
<a name="line-2564"></a>
<a name="line-2565"></a>    <span class="nd">@lazyattr</span>
<a name="line-2566"></a>    <span class="k">def</span> <span class="nf">tvips_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2567"></a>        <span class="sd">"""Return TVIPS tag as dict."""</span>
<a name="line-2568"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_tvips</span><span class="p">:</span>
<a name="line-2569"></a>            <span class="k">return</span>
<a name="line-2570"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'TVIPS'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-2571"></a>
<a name="line-2572"></a>    <span class="nd">@lazyattr</span>
<a name="line-2573"></a>    <span class="k">def</span> <span class="nf">metaseries_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2574"></a>        <span class="sd">"""Return MetaSeries metadata from image description as dict."""</span>
<a name="line-2575"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_metaseries</span><span class="p">:</span>
<a name="line-2576"></a>            <span class="k">return</span>
<a name="line-2577"></a>        <span class="k">return</span> <span class="n">metaseries_description_metadata</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">description</span><span class="p">)</span>
<a name="line-2578"></a>
<a name="line-2579"></a>    <span class="nd">@lazyattr</span>
<a name="line-2580"></a>    <span class="k">def</span> <span class="nf">pilatus_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2581"></a>        <span class="sd">"""Return Pilatus metadata from image description as dict."""</span>
<a name="line-2582"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_pilatus</span><span class="p">:</span>
<a name="line-2583"></a>            <span class="k">return</span>
<a name="line-2584"></a>        <span class="k">return</span> <span class="n">pilatus_description_metadata</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">description</span><span class="p">)</span>
<a name="line-2585"></a>
<a name="line-2586"></a>    <span class="nd">@lazyattr</span>
<a name="line-2587"></a>    <span class="k">def</span> <span class="nf">micromanager_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2588"></a>        <span class="sd">"""Return consolidated MicroManager metadata as dict."""</span>
<a name="line-2589"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_micromanager</span><span class="p">:</span>
<a name="line-2590"></a>            <span class="k">return</span>
<a name="line-2591"></a>        <span class="c1"># from file header</span>
<a name="line-2592"></a>        <span class="n">result</span> <span class="o">=</span> <span class="n">read_micromanager_metadata</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="p">)</span>
<a name="line-2593"></a>        <span class="c1"># from tag</span>
<a name="line-2594"></a>        <span class="n">result</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'MicroManagerMetadata'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-2595"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-2596"></a>
<a name="line-2597"></a>    <span class="nd">@lazyattr</span>
<a name="line-2598"></a>    <span class="k">def</span> <span class="nf">scanimage_metadata</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2599"></a>        <span class="sd">"""Return ScanImage non-varying frame and ROI metadata as dict."""</span>
<a name="line-2600"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_scanimage</span><span class="p">:</span>
<a name="line-2601"></a>            <span class="k">return</span>
<a name="line-2602"></a>        <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-2603"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-2604"></a>            <span class="n">framedata</span><span class="p">,</span> <span class="n">roidata</span> <span class="o">=</span> <span class="n">read_scanimage_metadata</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="p">)</span>
<a name="line-2605"></a>            <span class="n">result</span><span class="p">[</span><span class="s1">'FrameData'</span><span class="p">]</span> <span class="o">=</span> <span class="n">framedata</span>
<a name="line-2606"></a>            <span class="n">result</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">roidata</span><span class="p">)</span>
<a name="line-2607"></a>        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-2608"></a>            <span class="k">pass</span>
<a name="line-2609"></a>        <span class="c1"># TODO: scanimage_artist_metadata</span>
<a name="line-2610"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-2611"></a>            <span class="n">result</span><span class="p">[</span><span class="s1">'Description'</span><span class="p">]</span> <span class="o">=</span> <span class="n">scanimage_description_metadata</span><span class="p">(</span>
<a name="line-2612"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">description</span><span class="p">)</span>
<a name="line-2613"></a>        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-2614"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"scanimage_description_metadata failed: </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">e</span><span class="p">)</span>
<a name="line-2615"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-2616"></a>
<a name="line-2617"></a>
<a name="line-2618"></a><span class="k">class</span> <span class="nc">TiffPages</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-2619"></a>    <span class="sd">"""Sequence of TIFF image file directories."""</span>
<a name="line-2620"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">):</span>
<a name="line-2621"></a>        <span class="sd">"""Initialize instance from file. Read first TiffPage from file.</span>
<a name="line-2622"></a>
<a name="line-2623"></a><span class="sd">        The file position must be at an offset to an offset to a TiffPage.</span>
<a name="line-2624"></a>
<a name="line-2625"></a><span class="sd">        """</span>
<a name="line-2626"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parent</span>
<a name="line-2627"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span> <span class="o">=</span> <span class="p">[]</span>  <span class="c1"># cache of TiffPages, TiffFrames, or their offsets</span>
<a name="line-2628"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="o">=</span> <span class="bp">False</span>  <span class="c1"># True if offsets to all pages were read</span>
<a name="line-2629"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_tiffpage</span> <span class="o">=</span> <span class="n">TiffPage</span>  <span class="c1"># class for reading tiff pages</span>
<a name="line-2630"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_keyframe</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-2631"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2632"></a>
<a name="line-2633"></a>        <span class="c1"># read offset to first page</span>
<a name="line-2634"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span>
<a name="line-2635"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_nextpageoffset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-2636"></a>        <span class="n">offset</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">offsetformat</span><span class="p">,</span>
<a name="line-2637"></a>                               <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">offsetsize</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2638"></a>
<a name="line-2639"></a>        <span class="k">if</span> <span class="n">offset</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-2640"></a>            <span class="c1"># warnings.warn("file contains no pages")</span>
<a name="line-2641"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2642"></a>            <span class="k">return</span>
<a name="line-2643"></a>        <span class="k">if</span> <span class="n">offset</span> <span class="o">&gt;=</span> <span class="n">fh</span><span class="o">.</span><span class="n">size</span><span class="p">:</span>
<a name="line-2644"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid page offset (</span><span class="si">%i</span><span class="s2">)"</span> <span class="o">%</span> <span class="n">offset</span><span class="p">)</span>
<a name="line-2645"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2646"></a>            <span class="k">return</span>
<a name="line-2647"></a>
<a name="line-2648"></a>        <span class="c1"># always read and cache first page</span>
<a name="line-2649"></a>        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset</span><span class="p">)</span>
<a name="line-2650"></a>        <span class="n">page</span> <span class="o">=</span> <span class="n">TiffPage</span><span class="p">(</span><span class="n">parent</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<a name="line-2651"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
<a name="line-2652"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_keyframe</span> <span class="o">=</span> <span class="n">page</span>
<a name="line-2653"></a>
<a name="line-2654"></a>    <span class="nd">@property</span>
<a name="line-2655"></a>    <span class="k">def</span> <span class="nf">cache</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2656"></a>        <span class="sd">"""Return if pages/frames are currenly being cached."""</span>
<a name="line-2657"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span>
<a name="line-2658"></a>
<a name="line-2659"></a>    <span class="nd">@cache.setter</span>
<a name="line-2660"></a>    <span class="k">def</span> <span class="nf">cache</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
<a name="line-2661"></a>        <span class="sd">"""Enable or disable caching of pages/frames. Clear cache if False."""</span>
<a name="line-2662"></a>        <span class="n">value</span> <span class="o">=</span> <span class="nb">bool</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-2663"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">value</span><span class="p">:</span>
<a name="line-2664"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
<a name="line-2665"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-2666"></a>
<a name="line-2667"></a>    <span class="nd">@property</span>
<a name="line-2668"></a>    <span class="k">def</span> <span class="nf">useframes</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2669"></a>        <span class="sd">"""Return if currently using TiffFrame (True) or TiffPage (False)."""</span>
<a name="line-2670"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tiffpage</span> <span class="o">==</span> <span class="n">TiffFrame</span> <span class="ow">and</span> <span class="n">TiffFrame</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">TiffPage</span>
<a name="line-2671"></a>
<a name="line-2672"></a>    <span class="nd">@useframes.setter</span>
<a name="line-2673"></a>    <span class="k">def</span> <span class="nf">useframes</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
<a name="line-2674"></a>        <span class="sd">"""Set to use TiffFrame (True) or TiffPage (False)."""</span>
<a name="line-2675"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_tiffpage</span> <span class="o">=</span> <span class="n">TiffFrame</span> <span class="k">if</span> <span class="n">value</span> <span class="k">else</span> <span class="n">TiffPage</span>
<a name="line-2676"></a>
<a name="line-2677"></a>    <span class="nd">@property</span>
<a name="line-2678"></a>    <span class="k">def</span> <span class="nf">keyframe</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2679"></a>        <span class="sd">"""Return index of current keyframe."""</span>
<a name="line-2680"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_keyframe</span><span class="o">.</span><span class="n">index</span>
<a name="line-2681"></a>
<a name="line-2682"></a>    <span class="nd">@keyframe.setter</span>
<a name="line-2683"></a>    <span class="k">def</span> <span class="nf">keyframe</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
<a name="line-2684"></a>        <span class="sd">"""Set current keyframe. Load TiffPage from file if necessary."""</span>
<a name="line-2685"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="ow">or</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2686"></a>            <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
<a name="line-2687"></a>            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">TiffPage</span><span class="p">):</span>
<a name="line-2688"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_keyframe</span> <span class="o">=</span> <span class="n">page</span>
<a name="line-2689"></a>                <span class="k">return</span>
<a name="line-2690"></a>            <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">TiffFrame</span><span class="p">):</span>
<a name="line-2691"></a>                <span class="c1"># remove existing frame</span>
<a name="line-2692"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">offset</span>
<a name="line-2693"></a>        <span class="c1"># load TiffPage from file</span>
<a name="line-2694"></a>        <span class="n">useframes</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">useframes</span>
<a name="line-2695"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_tiffpage</span> <span class="o">=</span> <span class="n">TiffPage</span>
<a name="line-2696"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_keyframe</span> <span class="o">=</span> <span class="bp">self</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
<a name="line-2697"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">useframes</span> <span class="o">=</span> <span class="n">useframes</span>
<a name="line-2698"></a>
<a name="line-2699"></a>    <span class="nd">@property</span>
<a name="line-2700"></a>    <span class="k">def</span> <span class="nf">next_page_offset</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2701"></a>        <span class="sd">"""Return offset where offset to a new page can be stored."""</span>
<a name="line-2702"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">complete</span><span class="p">:</span>
<a name="line-2703"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_seek</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-2704"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_nextpageoffset</span>
<a name="line-2705"></a>
<a name="line-2706"></a>    <span class="k">def</span> <span class="nf">load</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2707"></a>        <span class="sd">"""Read all remaining pages from file."""</span>
<a name="line-2708"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span>
<a name="line-2709"></a>        <span class="n">keyframe</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_keyframe</span>
<a name="line-2710"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2711"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">complete</span><span class="p">:</span>
<a name="line-2712"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_seek</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-2713"></a>        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">page</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2714"></a>            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">inttypes</span><span class="p">):</span>
<a name="line-2715"></a>                <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
<a name="line-2716"></a>                <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tiffpage</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="n">i</span><span class="p">,</span> <span class="n">keyframe</span><span class="o">=</span><span class="n">keyframe</span><span class="p">)</span>
<a name="line-2717"></a>                <span class="n">pages</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">page</span>
<a name="line-2718"></a>
<a name="line-2719"></a>    <span class="k">def</span> <span class="nf">clear</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">fully</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
<a name="line-2720"></a>        <span class="sd">"""Delete all but first page from cache. Set keyframe to first page."""</span>
<a name="line-2721"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2722"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span> <span class="ow">or</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-2723"></a>            <span class="k">return</span>
<a name="line-2724"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_keyframe</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2725"></a>        <span class="k">if</span> <span class="n">fully</span><span class="p">:</span>
<a name="line-2726"></a>            <span class="c1"># delete all but first TiffPage/TiffFrame</span>
<a name="line-2727"></a>            <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">page</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">pages</span><span class="p">[</span><span class="mi">1</span><span class="p">:]):</span>
<a name="line-2728"></a>                <span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">inttypes</span><span class="p">):</span>
<a name="line-2729"></a>                    <span class="n">pages</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">offset</span>
<a name="line-2730"></a>        <span class="k">elif</span> <span class="n">TiffFrame</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">TiffPage</span><span class="p">:</span>
<a name="line-2731"></a>            <span class="c1"># delete only TiffFrames</span>
<a name="line-2732"></a>            <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">page</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2733"></a>                <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">TiffFrame</span><span class="p">):</span>
<a name="line-2734"></a>                    <span class="n">pages</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">offset</span>
<a name="line-2735"></a>
<a name="line-2736"></a>    <span class="k">def</span> <span class="nf">_seek</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
<a name="line-2737"></a>        <span class="sd">"""Seek file to offset of specified page."""</span>
<a name="line-2738"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2739"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">pages</span><span class="p">:</span>
<a name="line-2740"></a>            <span class="k">return</span>
<a name="line-2741"></a>
<a name="line-2742"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span>
<a name="line-2743"></a>        <span class="k">if</span> <span class="n">fh</span><span class="o">.</span><span class="n">closed</span><span class="p">:</span>
<a name="line-2744"></a>            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">(</span><span class="s2">"FileHandle is closed"</span><span class="p">)</span>
<a name="line-2745"></a>
<a name="line-2746"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="ow">or</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2747"></a>            <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
<a name="line-2748"></a>            <span class="n">offset</span> <span class="o">=</span> <span class="n">page</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">inttypes</span><span class="p">)</span> <span class="k">else</span> <span class="n">page</span><span class="o">.</span><span class="n">offset</span>
<a name="line-2749"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset</span><span class="p">)</span>
<a name="line-2750"></a>            <span class="k">return</span>
<a name="line-2751"></a>
<a name="line-2752"></a>        <span class="n">offsetformat</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">offsetformat</span>
<a name="line-2753"></a>        <span class="n">offsetsize</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">offsetsize</span>
<a name="line-2754"></a>        <span class="n">tagnoformat</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">tagnoformat</span>
<a name="line-2755"></a>        <span class="n">tagnosize</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">tagnosize</span>
<a name="line-2756"></a>        <span class="n">tagsize</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">tagsize</span>
<a name="line-2757"></a>        <span class="n">unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span>
<a name="line-2758"></a>
<a name="line-2759"></a>        <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-2760"></a>        <span class="n">offset</span> <span class="o">=</span> <span class="n">page</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">inttypes</span><span class="p">)</span> <span class="k">else</span> <span class="n">page</span><span class="o">.</span><span class="n">offset</span>
<a name="line-2761"></a>
<a name="line-2762"></a>        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-2763"></a>            <span class="c1"># read offsets to pages from file until index is reached</span>
<a name="line-2764"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset</span><span class="p">)</span>
<a name="line-2765"></a>            <span class="c1"># skip tags</span>
<a name="line-2766"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-2767"></a>                <span class="n">tagno</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">tagnoformat</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">tagnosize</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2768"></a>                <span class="k">if</span> <span class="n">tagno</span> <span class="o">&gt;</span> <span class="mi">4096</span><span class="p">:</span>
<a name="line-2769"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"suspicious number of tags"</span><span class="p">)</span>
<a name="line-2770"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-2771"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"corrupted tag list at offset </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="n">offset</span><span class="p">)</span>
<a name="line-2772"></a>                <span class="k">del</span> <span class="n">pages</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-2773"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2774"></a>                <span class="k">break</span>
<a name="line-2775"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_nextpageoffset</span> <span class="o">=</span> <span class="n">offset</span> <span class="o">+</span> <span class="n">tagnosize</span> <span class="o">+</span> <span class="n">tagno</span> <span class="o">*</span> <span class="n">tagsize</span>
<a name="line-2776"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_nextpageoffset</span><span class="p">)</span>
<a name="line-2777"></a>
<a name="line-2778"></a>            <span class="c1"># read offset to next page</span>
<a name="line-2779"></a>            <span class="n">offset</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">offsetsize</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2780"></a>            <span class="k">if</span> <span class="n">offset</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-2781"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2782"></a>                <span class="k">break</span>
<a name="line-2783"></a>            <span class="k">if</span> <span class="n">offset</span> <span class="o">&gt;=</span> <span class="n">fh</span><span class="o">.</span><span class="n">size</span><span class="p">:</span>
<a name="line-2784"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid page offset (</span><span class="si">%i</span><span class="s2">)"</span> <span class="o">%</span> <span class="n">offset</span><span class="p">)</span>
<a name="line-2785"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-2786"></a>                <span class="k">break</span>
<a name="line-2787"></a>
<a name="line-2788"></a>            <span class="n">pages</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">offset</span><span class="p">)</span>
<a name="line-2789"></a>            <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2790"></a>                <span class="k">break</span>
<a name="line-2791"></a>
<a name="line-2792"></a>        <span class="k">if</span> <span class="n">index</span> <span class="o">&gt;=</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2793"></a>            <span class="k">raise</span> <span class="ne">IndexError</span><span class="p">(</span><span class="s1">'list index out of range'</span><span class="p">)</span>
<a name="line-2794"></a>
<a name="line-2795"></a>        <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
<a name="line-2796"></a>        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">page</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">inttypes</span><span class="p">)</span> <span class="k">else</span> <span class="n">page</span><span class="o">.</span><span class="n">offset</span><span class="p">)</span>
<a name="line-2797"></a>
<a name="line-2798"></a>    <span class="k">def</span> <span class="nf">__bool__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2799"></a>        <span class="sd">"""Return True if file contains any pages."""</span>
<a name="line-2800"></a>        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span>
<a name="line-2801"></a>
<a name="line-2802"></a>    <span class="k">def</span> <span class="fm">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2803"></a>        <span class="sd">"""Return number of pages in file."""</span>
<a name="line-2804"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">complete</span><span class="p">:</span>
<a name="line-2805"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_seek</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-2806"></a>        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span>
<a name="line-2807"></a>
<a name="line-2808"></a>    <span class="k">def</span> <span class="fm">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
<a name="line-2809"></a>        <span class="sd">"""Return specified page(s) from cache or file."""</span>
<a name="line-2810"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span>
<a name="line-2811"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">pages</span><span class="p">:</span>
<a name="line-2812"></a>            <span class="k">raise</span> <span class="ne">IndexError</span><span class="p">(</span><span class="s1">'list index out of range'</span><span class="p">)</span>
<a name="line-2813"></a>        <span class="k">if</span> <span class="n">key</span> <span class="ow">is</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-2814"></a>            <span class="k">return</span> <span class="n">pages</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-2815"></a>
<a name="line-2816"></a>        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="nb">slice</span><span class="p">):</span>
<a name="line-2817"></a>            <span class="n">start</span><span class="p">,</span> <span class="n">stop</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">key</span><span class="o">.</span><span class="n">indices</span><span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="mi">31</span><span class="p">)</span>
<a name="line-2818"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="ow">and</span> <span class="nb">max</span><span class="p">(</span><span class="n">stop</span><span class="p">,</span> <span class="n">start</span><span class="p">)</span> <span class="o">&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2819"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_seek</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-2820"></a>            <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">*</span><span class="n">key</span><span class="o">.</span><span class="n">indices</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)))]</span>
<a name="line-2821"></a>
<a name="line-2822"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">complete</span> <span class="ow">and</span> <span class="n">key</span> <span class="o">&gt;=</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-2823"></a>            <span class="k">raise</span> <span class="ne">IndexError</span><span class="p">(</span><span class="s1">'list index out of range'</span><span class="p">)</span>
<a name="line-2824"></a>
<a name="line-2825"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-2826"></a>            <span class="n">page</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-2827"></a>        <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-2828"></a>            <span class="n">page</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2829"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">inttypes</span><span class="p">):</span>
<a name="line-2830"></a>            <span class="k">return</span> <span class="n">page</span>
<a name="line-2831"></a>
<a name="line-2832"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_seek</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
<a name="line-2833"></a>        <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_tiffpage</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="n">key</span><span class="p">,</span> <span class="n">keyframe</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">_keyframe</span><span class="p">)</span>
<a name="line-2834"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_cache</span><span class="p">:</span>
<a name="line-2835"></a>            <span class="n">pages</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">page</span>
<a name="line-2836"></a>        <span class="k">return</span> <span class="n">page</span>
<a name="line-2837"></a>
<a name="line-2838"></a>    <span class="k">def</span> <span class="fm">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-2839"></a>        <span class="sd">"""Return iterator over all pages."""</span>
<a name="line-2840"></a>        <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2841"></a>        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-2842"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-2843"></a>                <span class="k">yield</span> <span class="bp">self</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<a name="line-2844"></a>                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-2845"></a>            <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-2846"></a>                <span class="k">break</span>
<a name="line-2847"></a>
<a name="line-2848"></a>
<a name="line-2849"></a><span class="k">class</span> <span class="nc">TiffPage</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-2850"></a>    <span class="sd">"""TIFF image file directory (IFD).</span>
<a name="line-2851"></a>
<a name="line-2852"></a><span class="sd">    Attributes</span>
<a name="line-2853"></a><span class="sd">    ----------</span>
<a name="line-2854"></a><span class="sd">    index : int</span>
<a name="line-2855"></a><span class="sd">        Index of page in file.</span>
<a name="line-2856"></a><span class="sd">    dtype : numpy.dtype or None</span>
<a name="line-2857"></a><span class="sd">        Data type of the image in IFD.</span>
<a name="line-2858"></a><span class="sd">    shape : tuple</span>
<a name="line-2859"></a><span class="sd">        Dimensions of the image in IFD.</span>
<a name="line-2860"></a><span class="sd">    axes : str</span>
<a name="line-2861"></a><span class="sd">        Axes label codes:</span>
<a name="line-2862"></a><span class="sd">        'X' width, 'Y' height, 'S' sample, 'I' image series|page|plane,</span>
<a name="line-2863"></a><span class="sd">        'Z' depth, 'C' color|em-wavelength|channel, 'E' ex-wavelength|lambda,</span>
<a name="line-2864"></a><span class="sd">        'T' time, 'R' region|tile, 'A' angle, 'P' phase, 'H' lifetime,</span>
<a name="line-2865"></a><span class="sd">        'L' exposure, 'V' event, 'Q' unknown, '_' missing</span>
<a name="line-2866"></a><span class="sd">    tags : dict</span>
<a name="line-2867"></a><span class="sd">        Dictionary of tags in IFD. {tag.name: TiffTag}</span>
<a name="line-2868"></a><span class="sd">    colormap : numpy.ndarray</span>
<a name="line-2869"></a><span class="sd">        Color look up table, if exists.</span>
<a name="line-2870"></a>
<a name="line-2871"></a><span class="sd">    All attributes are read-only.</span>
<a name="line-2872"></a>
<a name="line-2873"></a><span class="sd">    Notes</span>
<a name="line-2874"></a><span class="sd">    -----</span>
<a name="line-2875"></a><span class="sd">    The internal, normalized '_shape' attribute is 6 dimensional:</span>
<a name="line-2876"></a>
<a name="line-2877"></a><span class="sd">    0 : number planes/images  (stk, ij).</span>
<a name="line-2878"></a><span class="sd">    1 : planar samplesperpixel.</span>
<a name="line-2879"></a><span class="sd">    2 : imagedepth Z  (sgi).</span>
<a name="line-2880"></a><span class="sd">    3 : imagelength Y.</span>
<a name="line-2881"></a><span class="sd">    4 : imagewidth X.</span>
<a name="line-2882"></a><span class="sd">    5 : contig samplesperpixel.</span>
<a name="line-2883"></a>
<a name="line-2884"></a><span class="sd">    """</span>
<a name="line-2885"></a>    <span class="c1"># default properties; will be updated from tags</span>
<a name="line-2886"></a>    <span class="n">imagewidth</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2887"></a>    <span class="n">imagelength</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2888"></a>    <span class="n">imagedepth</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2889"></a>    <span class="n">tilewidth</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2890"></a>    <span class="n">tilelength</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2891"></a>    <span class="n">tiledepth</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2892"></a>    <span class="n">bitspersample</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2893"></a>    <span class="n">samplesperpixel</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2894"></a>    <span class="n">sampleformat</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2895"></a>    <span class="n">rowsperstrip</span> <span class="o">=</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span><span class="o">-</span><span class="mi">1</span>
<a name="line-2896"></a>    <span class="n">compression</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2897"></a>    <span class="n">planarconfig</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2898"></a>    <span class="n">fillorder</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2899"></a>    <span class="n">photometric</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-2900"></a>    <span class="n">predictor</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2901"></a>    <span class="n">extrasamples</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2902"></a>    <span class="n">colormap</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-2903"></a>    <span class="n">software</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-2904"></a>    <span class="n">description</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-2905"></a>    <span class="n">description1</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-2906"></a>
<a name="line-2907"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">keyframe</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-2908"></a>        <span class="sd">"""Initialize instance from file.</span>
<a name="line-2909"></a>
<a name="line-2910"></a><span class="sd">        The file handle position must be at offset to a valid IFD.</span>
<a name="line-2911"></a>
<a name="line-2912"></a><span class="sd">        """</span>
<a name="line-2913"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parent</span>
<a name="line-2914"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">index</span>
<a name="line-2915"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">()</span>
<a name="line-2916"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="o">=</span> <span class="p">()</span>
<a name="line-2917"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-2918"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_dtype</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-2919"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s2">""</span>
<a name="line-2920"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">tags</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-2921"></a>
<a name="line-2922"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span> <span class="o">=</span> <span class="p">()</span>
<a name="line-2923"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">databytecounts</span> <span class="o">=</span> <span class="p">()</span>
<a name="line-2924"></a>
<a name="line-2925"></a>        <span class="c1"># read TIFF IFD structure and its tags from file</span>
<a name="line-2926"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span>
<a name="line-2927"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">offset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>  <span class="c1"># offset to this IDF</span>
<a name="line-2928"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-2929"></a>            <span class="n">tagno</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">tagnoformat</span><span class="p">,</span>
<a name="line-2930"></a>                                  <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">tagnosize</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-2931"></a>            <span class="k">if</span> <span class="n">tagno</span> <span class="o">&gt;</span> <span class="mi">4096</span><span class="p">:</span>
<a name="line-2932"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"suspicious number of tags"</span><span class="p">)</span>
<a name="line-2933"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-2934"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"corrupted tag list at offset </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">offset</span><span class="p">)</span>
<a name="line-2935"></a>
<a name="line-2936"></a>        <span class="n">tagsize</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">tagsize</span>
<a name="line-2937"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">tagsize</span> <span class="o">*</span> <span class="n">tagno</span><span class="p">)</span>
<a name="line-2938"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-2939"></a>        <span class="n">index</span> <span class="o">=</span> <span class="o">-</span><span class="n">tagsize</span>
<a name="line-2940"></a>        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tagno</span><span class="p">):</span>
<a name="line-2941"></a>            <span class="n">index</span> <span class="o">+=</span> <span class="n">tagsize</span>
<a name="line-2942"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-2943"></a>                <span class="n">tag</span> <span class="o">=</span> <span class="n">TiffTag</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="n">index</span><span class="p">:</span><span class="n">index</span><span class="o">+</span><span class="n">tagsize</span><span class="p">])</span>
<a name="line-2944"></a>            <span class="k">except</span> <span class="n">TiffTag</span><span class="o">.</span><span class="n">Error</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-2945"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
<a name="line-2946"></a>                <span class="k">continue</span>
<a name="line-2947"></a>            <span class="n">tagname</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">name</span>
<a name="line-2948"></a>            <span class="k">if</span> <span class="n">tagname</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2949"></a>                <span class="n">name</span> <span class="o">=</span> <span class="n">tagname</span>
<a name="line-2950"></a>                <span class="n">tags</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">tag</span>
<a name="line-2951"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-2952"></a>                <span class="c1"># some files contain multiple tags with same code</span>
<a name="line-2953"></a>                <span class="c1"># e.g. MicroManager files contain two ImageDescription tags</span>
<a name="line-2954"></a>                <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2955"></a>                <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-2956"></a>                    <span class="n">name</span> <span class="o">=</span> <span class="s2">"</span><span class="si">%s%i</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">tagname</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
<a name="line-2957"></a>                    <span class="k">if</span> <span class="n">name</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2958"></a>                        <span class="n">tags</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">tag</span>
<a name="line-2959"></a>                        <span class="k">break</span>
<a name="line-2960"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_ATTRIBUTES</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span>
<a name="line-2961"></a>            <span class="k">if</span> <span class="n">name</span><span class="p">:</span>
<a name="line-2962"></a>                <span class="nb">setattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-2963"></a>
<a name="line-2964"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2965"></a>            <span class="k">return</span>  <span class="c1"># found in FIBICS</span>
<a name="line-2966"></a>
<a name="line-2967"></a>        <span class="c1"># consolidate private tags; remove them from self.tags</span>
<a name="line-2968"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_andor</span><span class="p">:</span>
<a name="line-2969"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">andor_tags</span>
<a name="line-2970"></a>        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_epics</span><span class="p">:</span>
<a name="line-2971"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">epics_tags</span>
<a name="line-2972"></a>
<a name="line-2973"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_lsm</span> <span class="ow">or</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">index</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">is_lsm</span><span class="p">):</span>
<a name="line-2974"></a>            <span class="c1"># correct non standard LSM bitspersample tags</span>
<a name="line-2975"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'BitsPerSample'</span><span class="p">]</span><span class="o">.</span><span class="n">_fix_lsm_bitspersample</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
<a name="line-2976"></a>
<a name="line-2977"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_vista</span> <span class="ow">or</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">index</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">is_vista</span><span class="p">):</span>
<a name="line-2978"></a>            <span class="c1"># ISS Vista writes wrong ImageDepth tag</span>
<a name="line-2979"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">imagedepth</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-2980"></a>
<a name="line-2981"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_stk</span> <span class="ow">and</span> <span class="s1">'UIC1tag'</span> <span class="ow">in</span> <span class="n">tags</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'UIC1tag'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">:</span>
<a name="line-2982"></a>            <span class="c1"># read UIC1tag now that plane count is known</span>
<a name="line-2983"></a>            <span class="n">uic1tag</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'UIC1tag'</span><span class="p">]</span>
<a name="line-2984"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">uic1tag</span><span class="o">.</span><span class="n">valueoffset</span><span class="p">)</span>
<a name="line-2985"></a>            <span class="n">tags</span><span class="p">[</span><span class="s1">'UIC1tag'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">read_uic1tag</span><span class="p">(</span>
<a name="line-2986"></a>                <span class="n">fh</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">byteorder</span><span class="p">,</span> <span class="n">uic1tag</span><span class="o">.</span><span class="n">dtype</span><span class="p">,</span>
<a name="line-2987"></a>                <span class="n">uic1tag</span><span class="o">.</span><span class="n">count</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'UIC2tag'</span><span class="p">]</span><span class="o">.</span><span class="n">count</span><span class="p">)</span>
<a name="line-2988"></a>
<a name="line-2989"></a>        <span class="k">if</span> <span class="s1">'IJMetadata'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-2990"></a>            <span class="c1"># decode IJMetadata tag</span>
<a name="line-2991"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-2992"></a>                <span class="n">tags</span><span class="p">[</span><span class="s1">'IJMetadata'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">imagej_metadata</span><span class="p">(</span>
<a name="line-2993"></a>                    <span class="n">tags</span><span class="p">[</span><span class="s1">'IJMetadata'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">,</span>
<a name="line-2994"></a>                    <span class="n">tags</span><span class="p">[</span><span class="s1">'IJMetadataByteCounts'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">,</span>
<a name="line-2995"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-2996"></a>            <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-2997"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
<a name="line-2998"></a>
<a name="line-2999"></a>        <span class="k">if</span> <span class="s1">'BitsPerSample'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3000"></a>            <span class="n">tag</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'BitsPerSample'</span><span class="p">]</span>
<a name="line-3001"></a>            <span class="k">if</span> <span class="n">tag</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3002"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span>
<a name="line-3003"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3004"></a>                <span class="c1"># LSM might list more items than samples_per_pixel</span>
<a name="line-3005"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">[:</span><span class="bp">self</span><span class="o">.</span><span class="n">samplesperpixel</span><span class="p">]</span>
<a name="line-3006"></a>                <span class="k">if</span> <span class="nb">any</span><span class="p">((</span><span class="n">v</span><span class="o">-</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">value</span><span class="p">)):</span>
<a name="line-3007"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-3008"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3009"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3010"></a>
<a name="line-3011"></a>        <span class="k">if</span> <span class="s1">'SampleFormat'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3012"></a>            <span class="n">tag</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'SampleFormat'</span><span class="p">]</span>
<a name="line-3013"></a>            <span class="k">if</span> <span class="n">tag</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3014"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">sampleformat</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span>
<a name="line-3015"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3016"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">[:</span><span class="bp">self</span><span class="o">.</span><span class="n">samplesperpixel</span><span class="p">]</span>
<a name="line-3017"></a>                <span class="k">if</span> <span class="nb">any</span><span class="p">((</span><span class="n">v</span><span class="o">-</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">value</span><span class="p">)):</span>
<a name="line-3018"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">sampleformat</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-3019"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3020"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">sampleformat</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3021"></a>
<a name="line-3022"></a>        <span class="k">if</span> <span class="s1">'ImageLength'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3023"></a>            <span class="k">if</span> <span class="s1">'RowsPerStrip'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">tags</span> <span class="ow">or</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'RowsPerStrip'</span><span class="p">]</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3024"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">rowsperstrip</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagelength</span>
<a name="line-3025"></a>            <span class="c1"># self.stripsperimage = int(math.floor(</span>
<a name="line-3026"></a>            <span class="c1">#    float(self.imagelength + self.rowsperstrip - 1) /</span>
<a name="line-3027"></a>            <span class="c1">#    self.rowsperstrip))</span>
<a name="line-3028"></a>
<a name="line-3029"></a>        <span class="c1"># determine dtype</span>
<a name="line-3030"></a>        <span class="n">dtype</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">sampleformat</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span>
<a name="line-3031"></a>        <span class="n">dtype</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">SAMPLE_DTYPES</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">dtype</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-3032"></a>        <span class="k">if</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-3033"></a>            <span class="n">dtype</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-3034"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_dtype</span> <span class="o">=</span> <span class="n">dtype</span>
<a name="line-3035"></a>
<a name="line-3036"></a>        <span class="c1"># determine shape of data</span>
<a name="line-3037"></a>        <span class="n">imagelength</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagelength</span>
<a name="line-3038"></a>        <span class="n">imagewidth</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagewidth</span>
<a name="line-3039"></a>        <span class="n">imagedepth</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagedepth</span>
<a name="line-3040"></a>        <span class="n">samplesperpixel</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">samplesperpixel</span>
<a name="line-3041"></a>
<a name="line-3042"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_stk</span><span class="p">:</span>
<a name="line-3043"></a>            <span class="k">assert</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagedepth</span> <span class="o">==</span> <span class="mi">1</span>
<a name="line-3044"></a>            <span class="n">uictag</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'UIC2tag'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-3045"></a>            <span class="n">planes</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'UIC2tag'</span><span class="p">]</span><span class="o">.</span><span class="n">count</span>
<a name="line-3046"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3047"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-3048"></a>                    <span class="n">planes</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">)</span>
<a name="line-3049"></a>                <span class="k">if</span> <span class="n">samplesperpixel</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3050"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">planes</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">)</span>
<a name="line-3051"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'YX'</span>
<a name="line-3052"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3053"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-3054"></a>                        <span class="n">planes</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">)</span>
<a name="line-3055"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'YXS'</span>
<a name="line-3056"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3057"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-3058"></a>                    <span class="n">planes</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-3059"></a>                <span class="k">if</span> <span class="n">samplesperpixel</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3060"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">planes</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">)</span>
<a name="line-3061"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'YX'</span>
<a name="line-3062"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3063"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-3064"></a>                        <span class="n">planes</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">)</span>
<a name="line-3065"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'SYX'</span>
<a name="line-3066"></a>            <span class="c1"># detect type of series</span>
<a name="line-3067"></a>            <span class="k">if</span> <span class="n">planes</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3068"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
<a name="line-3069"></a>            <span class="k">elif</span> <span class="n">numpy</span><span class="o">.</span><span class="n">all</span><span class="p">(</span><span class="n">uictag</span><span class="p">[</span><span class="s1">'ZDistance'</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">):</span>
<a name="line-3070"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'Z'</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">axes</span>
<a name="line-3071"></a>            <span class="k">elif</span> <span class="n">numpy</span><span class="o">.</span><span class="n">all</span><span class="p">(</span><span class="n">numpy</span><span class="o">.</span><span class="n">diff</span><span class="p">(</span><span class="n">uictag</span><span class="p">[</span><span class="s1">'TimeCreated'</span><span class="p">])</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">):</span>
<a name="line-3072"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'T'</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">axes</span>
<a name="line-3073"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3074"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'I'</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">axes</span>
<a name="line-3075"></a>        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">photometric</span> <span class="o">==</span> <span class="mi">2</span> <span class="ow">or</span> <span class="n">samplesperpixel</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>  <span class="c1"># PHOTOMETRIC.RGB</span>
<a name="line-3076"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3077"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-3078"></a>                    <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">imagedepth</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">)</span>
<a name="line-3079"></a>                <span class="k">if</span> <span class="n">imagedepth</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3080"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">)</span>
<a name="line-3081"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'YXS'</span>
<a name="line-3082"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3083"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-3084"></a>                        <span class="n">imagedepth</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">)</span>
<a name="line-3085"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'ZYXS'</span>
<a name="line-3086"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3087"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">samplesperpixel</span><span class="p">,</span> <span class="n">imagedepth</span><span class="p">,</span>
<a name="line-3088"></a>                               <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-3089"></a>                <span class="k">if</span> <span class="n">imagedepth</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3090"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">samplesperpixel</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">)</span>
<a name="line-3091"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'SYX'</span>
<a name="line-3092"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3093"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-3094"></a>                        <span class="n">samplesperpixel</span><span class="p">,</span> <span class="n">imagedepth</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">)</span>
<a name="line-3095"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'SZYX'</span>
<a name="line-3096"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3097"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">imagedepth</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-3098"></a>            <span class="k">if</span> <span class="n">imagedepth</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3099"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">)</span>
<a name="line-3100"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'YX'</span>
<a name="line-3101"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3102"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">imagedepth</span><span class="p">,</span> <span class="n">imagelength</span><span class="p">,</span> <span class="n">imagewidth</span><span class="p">)</span>
<a name="line-3103"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'ZYX'</span>
<a name="line-3104"></a>
<a name="line-3105"></a>        <span class="c1"># dataoffsets and databytecounts</span>
<a name="line-3106"></a>        <span class="k">if</span> <span class="s1">'TileOffsets'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3107"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'TileOffsets'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-3108"></a>        <span class="k">elif</span> <span class="s1">'StripOffsets'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3109"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'StripOffsets'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-3110"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3111"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,)</span>
<a name="line-3112"></a>
<a name="line-3113"></a>        <span class="k">if</span> <span class="s1">'TileByteCounts'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3114"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">databytecounts</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'TileByteCounts'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-3115"></a>        <span class="k">elif</span> <span class="s1">'StripByteCounts'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3116"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">databytecounts</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'StripByteCounts'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-3117"></a>        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">compression</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3118"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">databytecounts</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-3119"></a>                <span class="n">product</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span> <span class="o">//</span> <span class="mi">8</span><span class="p">),)</span>
<a name="line-3120"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3121"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"ByteCounts not found"</span><span class="p">)</span>
<a name="line-3122"></a>        <span class="k">assert</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">axes</span><span class="p">)</span>
<a name="line-3123"></a>
<a name="line-3124"></a>    <span class="k">def</span> <span class="nf">asarray</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">squeeze</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">lock</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">reopen</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
<a name="line-3125"></a>                <span class="n">maxsize</span><span class="o">=</span><span class="mi">64</span><span class="o">*</span><span class="mi">2</span><span class="o">**</span><span class="mi">30</span><span class="p">,</span> <span class="n">validate</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
<a name="line-3126"></a>        <span class="sd">"""Read image data from file and return as numpy array.</span>
<a name="line-3127"></a>
<a name="line-3128"></a><span class="sd">        Raise ValueError if format is unsupported.</span>
<a name="line-3129"></a>
<a name="line-3130"></a><span class="sd">        Parameters</span>
<a name="line-3131"></a><span class="sd">        ----------</span>
<a name="line-3132"></a><span class="sd">        out : numpy.ndarray, str, or file-like object; optional</span>
<a name="line-3133"></a><span class="sd">            Buffer where image data will be saved.</span>
<a name="line-3134"></a><span class="sd">            If numpy.ndarray, a writable array of compatible dtype and shape.</span>
<a name="line-3135"></a><span class="sd">            If str or open file, the file name or file object used to</span>
<a name="line-3136"></a><span class="sd">            create a memory-map to an array stored in a binary file on disk.</span>
<a name="line-3137"></a><span class="sd">        squeeze : bool</span>
<a name="line-3138"></a><span class="sd">            If True, all length-1 dimensions (except X and Y) are</span>
<a name="line-3139"></a><span class="sd">            squeezed out from the array.</span>
<a name="line-3140"></a><span class="sd">            If False, the shape of the returned array might be different from</span>
<a name="line-3141"></a><span class="sd">            the page.shape.</span>
<a name="line-3142"></a><span class="sd">        lock : {RLock, NullContext}</span>
<a name="line-3143"></a><span class="sd">            A reentrant lock used to syncronize reads from file.</span>
<a name="line-3144"></a><span class="sd">            If None (default), the lock of the parent's filehandle is used.</span>
<a name="line-3145"></a><span class="sd">        reopen : bool</span>
<a name="line-3146"></a><span class="sd">            If True (default) and the parent file handle is closed, the file</span>
<a name="line-3147"></a><span class="sd">            is temporarily re-opened and closed if no exception occurs.</span>
<a name="line-3148"></a><span class="sd">        maxsize: int or None</span>
<a name="line-3149"></a><span class="sd">            Maximum size of data before a ValueError is raised.</span>
<a name="line-3150"></a><span class="sd">            Can be used to catch DOS. Default: 64 GB.</span>
<a name="line-3151"></a><span class="sd">        validate : bool</span>
<a name="line-3152"></a><span class="sd">            If True (default), validate various parameters.</span>
<a name="line-3153"></a><span class="sd">            If None, only validate parameters and return None.</span>
<a name="line-3154"></a>
<a name="line-3155"></a><span class="sd">        """</span>
<a name="line-3156"></a>        <span class="n">self_</span> <span class="o">=</span> <span class="bp">self</span>
<a name="line-3157"></a>        <span class="bp">self</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span>  <span class="c1"># self or keyframe</span>
<a name="line-3158"></a>
<a name="line-3159"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span> <span class="ow">or</span> <span class="n">product</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_shape</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-3160"></a>            <span class="k">return</span>
<a name="line-3161"></a>
<a name="line-3162"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3163"></a>
<a name="line-3164"></a>        <span class="k">if</span> <span class="n">validate</span> <span class="ow">or</span> <span class="n">validate</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-3165"></a>            <span class="k">if</span> <span class="n">maxsize</span> <span class="ow">and</span> <span class="n">product</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_shape</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">maxsize</span><span class="p">:</span>
<a name="line-3166"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"data is too large </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_shape</span><span class="p">))</span>
<a name="line-3167"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-3168"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"data type not supported: </span><span class="si">%s%i</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span>
<a name="line-3169"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">sampleformat</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span><span class="p">))</span>
<a name="line-3170"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">compression</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">DECOMPESSORS</span><span class="p">:</span>
<a name="line-3171"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span>
<a name="line-3172"></a>                    <span class="s2">"can not decompress </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">compression</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
<a name="line-3173"></a>            <span class="k">if</span> <span class="s1">'SampleFormat'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3174"></a>                <span class="n">tag</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'SampleFormat'</span><span class="p">]</span>
<a name="line-3175"></a>                <span class="k">if</span> <span class="n">tag</span><span class="o">.</span><span class="n">count</span> <span class="o">!=</span> <span class="mi">1</span> <span class="ow">and</span> <span class="nb">any</span><span class="p">((</span><span class="n">i</span><span class="o">-</span><span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">)):</span>
<a name="line-3176"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span>
<a name="line-3177"></a>                        <span class="s2">"sample formats do not match </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-3178"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_chroma_subsampled</span><span class="p">:</span>
<a name="line-3179"></a>                <span class="c1"># TODO: implement chroma subsampling</span>
<a name="line-3180"></a>                <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">(</span><span class="s2">"chroma subsampling not supported"</span><span class="p">)</span>
<a name="line-3181"></a>            <span class="k">if</span> <span class="n">validate</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-3182"></a>                <span class="k">return</span>
<a name="line-3183"></a>
<a name="line-3184"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="n">self_</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span>
<a name="line-3185"></a>        <span class="n">lock</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">lock</span> <span class="k">if</span> <span class="n">lock</span> <span class="ow">is</span> <span class="bp">None</span> <span class="k">else</span> <span class="n">lock</span>
<a name="line-3186"></a>        <span class="k">with</span> <span class="n">lock</span><span class="p">:</span>
<a name="line-3187"></a>            <span class="n">closed</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">closed</span>
<a name="line-3188"></a>            <span class="k">if</span> <span class="n">closed</span><span class="p">:</span>
<a name="line-3189"></a>                <span class="k">if</span> <span class="n">reopen</span><span class="p">:</span>
<a name="line-3190"></a>                    <span class="n">fh</span><span class="o">.</span><span class="n">open</span><span class="p">()</span>
<a name="line-3191"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3192"></a>                    <span class="k">raise</span> <span class="ne">IOError</span><span class="p">(</span><span class="s2">"file handle is closed"</span><span class="p">)</span>
<a name="line-3193"></a>
<a name="line-3194"></a>        <span class="n">dtype</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_dtype</span>
<a name="line-3195"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span>
<a name="line-3196"></a>        <span class="n">imagewidth</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagewidth</span>
<a name="line-3197"></a>        <span class="n">imagelength</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagelength</span>
<a name="line-3198"></a>        <span class="n">imagedepth</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagedepth</span>
<a name="line-3199"></a>        <span class="n">bitspersample</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span>
<a name="line-3200"></a>        <span class="n">typecode</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">byteorder</span> <span class="o">+</span> <span class="n">dtype</span><span class="o">.</span><span class="n">char</span>
<a name="line-3201"></a>        <span class="n">lsb2msb</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">fillorder</span> <span class="o">==</span> <span class="mi">2</span>
<a name="line-3202"></a>        <span class="n">offsets</span><span class="p">,</span> <span class="n">bytecounts</span> <span class="o">=</span> <span class="n">self_</span><span class="o">.</span><span class="n">offsets_bytecounts</span>
<a name="line-3203"></a>        <span class="n">istiled</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_tiled</span>
<a name="line-3204"></a>
<a name="line-3205"></a>        <span class="k">if</span> <span class="n">istiled</span><span class="p">:</span>
<a name="line-3206"></a>            <span class="n">tilewidth</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tilewidth</span>
<a name="line-3207"></a>            <span class="n">tilelength</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tilelength</span>
<a name="line-3208"></a>            <span class="n">tiledepth</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tiledepth</span>
<a name="line-3209"></a>            <span class="n">tw</span> <span class="o">=</span> <span class="p">(</span><span class="n">imagewidth</span> <span class="o">+</span> <span class="n">tilewidth</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="n">tilewidth</span>
<a name="line-3210"></a>            <span class="n">tl</span> <span class="o">=</span> <span class="p">(</span><span class="n">imagelength</span> <span class="o">+</span> <span class="n">tilelength</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="n">tilelength</span>
<a name="line-3211"></a>            <span class="n">td</span> <span class="o">=</span> <span class="p">(</span><span class="n">imagedepth</span> <span class="o">+</span> <span class="n">tiledepth</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="n">tiledepth</span>
<a name="line-3212"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
<a name="line-3213"></a>                     <span class="n">td</span><span class="o">*</span><span class="n">tiledepth</span><span class="p">,</span> <span class="n">tl</span><span class="o">*</span><span class="n">tilelength</span><span class="p">,</span> <span class="n">tw</span><span class="o">*</span><span class="n">tilewidth</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<a name="line-3214"></a>            <span class="n">tileshape</span> <span class="o">=</span> <span class="p">(</span><span class="n">tiledepth</span><span class="p">,</span> <span class="n">tilelength</span><span class="p">,</span> <span class="n">tilewidth</span><span class="p">,</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<a name="line-3215"></a>            <span class="n">runlen</span> <span class="o">=</span> <span class="n">tilewidth</span>
<a name="line-3216"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3217"></a>            <span class="n">runlen</span> <span class="o">=</span> <span class="n">imagewidth</span>
<a name="line-3218"></a>
<a name="line-3219"></a>        <span class="k">if</span> <span class="n">out</span> <span class="o">==</span> <span class="s1">'memmap'</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_memmappable</span><span class="p">:</span>
<a name="line-3220"></a>            <span class="k">with</span> <span class="n">lock</span><span class="p">:</span>
<a name="line-3221"></a>                <span class="n">result</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">memmap_array</span><span class="p">(</span><span class="n">typecode</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="n">offsets</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="line-3222"></a>        <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">:</span>
<a name="line-3223"></a>            <span class="n">isnative</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">is_native</span>
<a name="line-3224"></a>            <span class="k">if</span> <span class="n">out</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-3225"></a>                <span class="n">isnative</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-3226"></a>                <span class="n">out</span> <span class="o">=</span> <span class="n">create_output</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-3227"></a>            <span class="k">with</span> <span class="n">lock</span><span class="p">:</span>
<a name="line-3228"></a>                <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offsets</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="line-3229"></a>                <span class="n">result</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="n">typecode</span><span class="p">,</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">),</span> <span class="n">out</span><span class="o">=</span><span class="n">out</span><span class="p">)</span>
<a name="line-3230"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">isnative</span><span class="p">:</span>
<a name="line-3231"></a>                <span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">'='</span> <span class="o">+</span> <span class="n">dtype</span><span class="o">.</span><span class="n">char</span><span class="p">)</span>
<a name="line-3232"></a>            <span class="k">if</span> <span class="n">lsb2msb</span><span class="p">:</span>
<a name="line-3233"></a>                <span class="n">reverse_bitorder</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
<a name="line-3234"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3235"></a>            <span class="n">result</span> <span class="o">=</span> <span class="n">create_output</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-3236"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3237"></a>                <span class="n">runlen</span> <span class="o">*=</span> <span class="bp">self</span><span class="o">.</span><span class="n">samplesperpixel</span>
<a name="line-3238"></a>            <span class="k">if</span> <span class="n">bitspersample</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">128</span><span class="p">):</span>
<a name="line-3239"></a>                <span class="k">if</span> <span class="p">(</span><span class="n">bitspersample</span> <span class="o">*</span> <span class="n">runlen</span><span class="p">)</span> <span class="o">%</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-3240"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"data and sample size mismatch"</span><span class="p">)</span>
<a name="line-3241"></a>
<a name="line-3242"></a>                <span class="k">def</span> <span class="nf">unpack</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">typecode</span><span class="o">=</span><span class="n">typecode</span><span class="p">):</span>
<a name="line-3243"></a>                    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>  <span class="c1"># PREDICTOR.FLOATINGPOINT</span>
<a name="line-3244"></a>                        <span class="c1"># the floating point horizontal differencing decoder</span>
<a name="line-3245"></a>                        <span class="c1"># needs the raw byte order</span>
<a name="line-3246"></a>                        <span class="n">typecode</span> <span class="o">=</span> <span class="n">dtype</span><span class="o">.</span><span class="n">char</span>
<a name="line-3247"></a>                    <span class="k">try</span><span class="p">:</span>
<a name="line-3248"></a>                        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">typecode</span><span class="p">)</span>
<a name="line-3249"></a>                    <span class="k">except</span> <span class="ne">ValueError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-3250"></a>                        <span class="c1"># strips may be missing EOI</span>
<a name="line-3251"></a>                        <span class="c1"># warnings.warn("unpack: %s" % e)</span>
<a name="line-3252"></a>                        <span class="n">xlen</span> <span class="o">=</span> <span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">//</span> <span class="p">(</span><span class="n">bitspersample</span> <span class="o">//</span> <span class="mi">8</span><span class="p">))</span> <span class="o">*</span>
<a name="line-3253"></a>                                <span class="p">(</span><span class="n">bitspersample</span> <span class="o">//</span> <span class="mi">8</span><span class="p">))</span>
<a name="line-3254"></a>                        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">x</span><span class="p">[:</span><span class="n">xlen</span><span class="p">],</span> <span class="n">typecode</span><span class="p">)</span>
<a name="line-3255"></a>
<a name="line-3256"></a>            <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">bitspersample</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">):</span>
<a name="line-3257"></a>                <span class="k">def</span> <span class="nf">unpack</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
<a name="line-3258"></a>                    <span class="k">return</span> <span class="n">unpack_rgb</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">typecode</span><span class="p">,</span> <span class="n">bitspersample</span><span class="p">)</span>
<a name="line-3259"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3260"></a>                <span class="k">def</span> <span class="nf">unpack</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
<a name="line-3261"></a>                    <span class="k">return</span> <span class="n">unpack_ints</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">typecode</span><span class="p">,</span> <span class="n">bitspersample</span><span class="p">,</span> <span class="n">runlen</span><span class="p">)</span>
<a name="line-3262"></a>
<a name="line-3263"></a>            <span class="n">decompress</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">DECOMPESSORS</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">compression</span><span class="p">]</span>
<a name="line-3264"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">compression</span> <span class="o">==</span> <span class="mi">7</span><span class="p">:</span>  <span class="c1"># COMPRESSION.JPEG</span>
<a name="line-3265"></a>                <span class="k">if</span> <span class="s1">'JPEGTables'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-3266"></a>                    <span class="n">table</span> <span class="o">=</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'JPEGTables'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span>
<a name="line-3267"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3268"></a>                    <span class="n">table</span> <span class="o">=</span> <span class="sa">b</span><span class="s1">''</span>
<a name="line-3269"></a>
<a name="line-3270"></a>                <span class="k">def</span> <span class="nf">decompress</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
<a name="line-3271"></a>                    <span class="k">return</span> <span class="n">decode_jpeg</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">table</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">photometric</span><span class="p">)</span>
<a name="line-3272"></a>
<a name="line-3273"></a>            <span class="k">if</span> <span class="n">istiled</span><span class="p">:</span>
<a name="line-3274"></a>                <span class="n">tw</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">td</span><span class="p">,</span> <span class="n">pl</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>
<a name="line-3275"></a>                <span class="k">for</span> <span class="n">tile</span> <span class="ow">in</span> <span class="n">buffered_read</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">lock</span><span class="p">,</span> <span class="n">offsets</span><span class="p">,</span> <span class="n">bytecounts</span><span class="p">):</span>
<a name="line-3276"></a>                    <span class="k">if</span> <span class="n">lsb2msb</span><span class="p">:</span>
<a name="line-3277"></a>                        <span class="n">tile</span> <span class="o">=</span> <span class="n">reverse_bitorder</span><span class="p">(</span><span class="n">tile</span><span class="p">)</span>
<a name="line-3278"></a>                    <span class="n">tile</span> <span class="o">=</span> <span class="n">decompress</span><span class="p">(</span><span class="n">tile</span><span class="p">)</span>
<a name="line-3279"></a>                    <span class="n">tile</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">tile</span><span class="p">)</span>
<a name="line-3280"></a>                    <span class="k">try</span><span class="p">:</span>
<a name="line-3281"></a>                        <span class="n">tile</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="n">tileshape</span>
<a name="line-3282"></a>                    <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-3283"></a>                        <span class="c1"># incomplete tiles; see gdal issue #1179</span>
<a name="line-3284"></a>                        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid tile data"</span><span class="p">)</span>
<a name="line-3285"></a>                        <span class="n">t</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">tileshape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-3286"></a>                        <span class="n">s</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">tile</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="n">t</span><span class="o">.</span><span class="n">size</span><span class="p">)</span>
<a name="line-3287"></a>                        <span class="n">t</span><span class="p">[:</span><span class="n">s</span><span class="p">]</span> <span class="o">=</span> <span class="n">tile</span><span class="p">[:</span><span class="n">s</span><span class="p">]</span>
<a name="line-3288"></a>                        <span class="n">tile</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">tileshape</span><span class="p">)</span>
<a name="line-3289"></a>                    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>  <span class="c1"># PREDICTOR.HORIZONTAL</span>
<a name="line-3290"></a>                        <span class="n">numpy</span><span class="o">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">tile</span><span class="p">,</span> <span class="n">axis</span><span class="o">=-</span><span class="mi">2</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">dtype</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">tile</span><span class="p">)</span>
<a name="line-3291"></a>                    <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>  <span class="c1"># PREDICTOR.FLOATINGPOINT</span>
<a name="line-3292"></a>                        <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">()</span>
<a name="line-3293"></a>                    <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="n">pl</span><span class="p">,</span> <span class="n">td</span><span class="p">:</span><span class="n">td</span><span class="o">+</span><span class="n">tiledepth</span><span class="p">,</span>
<a name="line-3294"></a>                           <span class="n">tl</span><span class="p">:</span><span class="n">tl</span><span class="o">+</span><span class="n">tilelength</span><span class="p">,</span> <span class="n">tw</span><span class="p">:</span><span class="n">tw</span><span class="o">+</span><span class="n">tilewidth</span><span class="p">,</span> <span class="p">:]</span> <span class="o">=</span> <span class="n">tile</span>
<a name="line-3295"></a>                    <span class="k">del</span> <span class="n">tile</span>
<a name="line-3296"></a>                    <span class="n">tw</span> <span class="o">+=</span> <span class="n">tilewidth</span>
<a name="line-3297"></a>                    <span class="k">if</span> <span class="n">tw</span> <span class="o">&gt;=</span> <span class="n">shape</span><span class="p">[</span><span class="mi">4</span><span class="p">]:</span>
<a name="line-3298"></a>                        <span class="n">tw</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">tl</span> <span class="o">+</span> <span class="n">tilelength</span>
<a name="line-3299"></a>                        <span class="k">if</span> <span class="n">tl</span> <span class="o">&gt;=</span> <span class="n">shape</span><span class="p">[</span><span class="mi">3</span><span class="p">]:</span>
<a name="line-3300"></a>                            <span class="n">tl</span><span class="p">,</span> <span class="n">td</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">td</span> <span class="o">+</span> <span class="n">tiledepth</span>
<a name="line-3301"></a>                            <span class="k">if</span> <span class="n">td</span> <span class="o">&gt;=</span> <span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
<a name="line-3302"></a>                                <span class="n">td</span><span class="p">,</span> <span class="n">pl</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">pl</span> <span class="o">+</span> <span class="mi">1</span>
<a name="line-3303"></a>                <span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="p">[</span><span class="o">...</span><span class="p">,</span>
<a name="line-3304"></a>                                <span class="p">:</span><span class="n">imagedepth</span><span class="p">,</span> <span class="p">:</span><span class="n">imagelength</span><span class="p">,</span> <span class="p">:</span><span class="n">imagewidth</span><span class="p">,</span> <span class="p">:]</span>
<a name="line-3305"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3306"></a>                <span class="n">strip_size</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">rowsperstrip</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">imagewidth</span>
<a name="line-3307"></a>                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3308"></a>                    <span class="n">strip_size</span> <span class="o">*=</span> <span class="bp">self</span><span class="o">.</span><span class="n">samplesperpixel</span>
<a name="line-3309"></a>                <span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-3310"></a>                <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-3311"></a>                <span class="k">for</span> <span class="n">strip</span> <span class="ow">in</span> <span class="n">buffered_read</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">lock</span><span class="p">,</span> <span class="n">offsets</span><span class="p">,</span> <span class="n">bytecounts</span><span class="p">):</span>
<a name="line-3312"></a>                    <span class="k">if</span> <span class="n">lsb2msb</span><span class="p">:</span>
<a name="line-3313"></a>                        <span class="n">strip</span> <span class="o">=</span> <span class="n">reverse_bitorder</span><span class="p">(</span><span class="n">strip</span><span class="p">)</span>
<a name="line-3314"></a>                    <span class="n">strip</span> <span class="o">=</span> <span class="n">decompress</span><span class="p">(</span><span class="n">strip</span><span class="p">)</span>
<a name="line-3315"></a>                    <span class="n">strip</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">strip</span><span class="p">)</span>
<a name="line-3316"></a>                    <span class="n">size</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="n">strip</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="n">strip_size</span><span class="p">,</span>
<a name="line-3317"></a>                               <span class="n">result</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="n">index</span><span class="p">)</span>
<a name="line-3318"></a>                    <span class="n">result</span><span class="p">[</span><span class="n">index</span><span class="p">:</span><span class="n">index</span><span class="o">+</span><span class="n">size</span><span class="p">]</span> <span class="o">=</span> <span class="n">strip</span><span class="p">[:</span><span class="n">size</span><span class="p">]</span>
<a name="line-3319"></a>                    <span class="k">del</span> <span class="n">strip</span>
<a name="line-3320"></a>                    <span class="n">index</span> <span class="o">+=</span> <span class="n">size</span>
<a name="line-3321"></a>
<a name="line-3322"></a>        <span class="n">result</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_shape</span>
<a name="line-3323"></a>
<a name="line-3324"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span> <span class="o">!=</span> <span class="mi">1</span> <span class="ow">and</span> <span class="ow">not</span> <span class="p">(</span><span class="n">istiled</span> <span class="ow">and</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">):</span>
<a name="line-3325"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">is_lsm</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">compression</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3326"></a>                <span class="k">pass</span>  <span class="c1"># work around bug in LSM510 software</span>
<a name="line-3327"></a>            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>  <span class="c1"># PREDICTOR.HORIZONTAL</span>
<a name="line-3328"></a>                <span class="n">numpy</span><span class="o">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="n">axis</span><span class="o">=-</span><span class="mi">2</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">dtype</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">result</span><span class="p">)</span>
<a name="line-3329"></a>            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>  <span class="c1"># PREDICTOR.FLOATINGPOINT</span>
<a name="line-3330"></a>                <span class="n">result</span> <span class="o">=</span> <span class="n">decode_floats</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
<a name="line-3331"></a>
<a name="line-3332"></a>        <span class="k">if</span> <span class="n">squeeze</span><span class="p">:</span>
<a name="line-3333"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-3334"></a>                <span class="n">result</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">shape</span>
<a name="line-3335"></a>            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-3336"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"failed to reshape from </span><span class="si">%s</span><span class="s2"> to </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span>
<a name="line-3337"></a>                    <span class="nb">str</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">shape</span><span class="p">),</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)))</span>
<a name="line-3338"></a>
<a name="line-3339"></a>        <span class="k">if</span> <span class="n">closed</span><span class="p">:</span>
<a name="line-3340"></a>            <span class="c1"># TODO: file should remain open if an exception occurred above</span>
<a name="line-3341"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-3342"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-3343"></a>
<a name="line-3344"></a>    <span class="k">def</span> <span class="nf">asrgb</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">uint8</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">colormap</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-3345"></a>              <span class="n">dmin</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">dmax</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-3346"></a>        <span class="sd">"""Return image data as RGB(A).</span>
<a name="line-3347"></a>
<a name="line-3348"></a><span class="sd">        Work in progress.</span>
<a name="line-3349"></a>
<a name="line-3350"></a><span class="sd">        """</span>
<a name="line-3351"></a>        <span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-3352"></a>        <span class="bp">self</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span>  <span class="c1"># self or keyframe</span>
<a name="line-3353"></a>        <span class="n">photometric</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">photometric</span>
<a name="line-3354"></a>        <span class="n">PHOTOMETRIC</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span>
<a name="line-3355"></a>
<a name="line-3356"></a>        <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">PALETTE</span><span class="p">:</span>
<a name="line-3357"></a>            <span class="n">colormap</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">colormap</span>
<a name="line-3358"></a>            <span class="k">if</span> <span class="p">(</span><span class="n">colormap</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">**</span><span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span> <span class="ow">or</span>
<a name="line-3359"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">char</span> <span class="ow">not</span> <span class="ow">in</span> <span class="s1">'BH'</span><span class="p">):</span>
<a name="line-3360"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"can not apply colormap"</span><span class="p">)</span>
<a name="line-3361"></a>            <span class="k">if</span> <span class="n">uint8</span><span class="p">:</span>
<a name="line-3362"></a>                <span class="k">if</span> <span class="n">colormap</span><span class="o">.</span><span class="n">max</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">255</span><span class="p">:</span>
<a name="line-3363"></a>                    <span class="n">colormap</span> <span class="o">&gt;&gt;=</span> <span class="mi">8</span>
<a name="line-3364"></a>                <span class="n">colormap</span> <span class="o">=</span> <span class="n">colormap</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">'uint8'</span><span class="p">)</span>
<a name="line-3365"></a>            <span class="k">if</span> <span class="s1">'S'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">axes</span><span class="p">:</span>
<a name="line-3366"></a>                <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">else</span> <span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3367"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">apply_colormap</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">colormap</span><span class="p">)</span>
<a name="line-3368"></a>
<a name="line-3369"></a>        <span class="k">elif</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">RGB</span><span class="p">:</span>
<a name="line-3370"></a>            <span class="k">if</span> <span class="s1">'ExtraSamples'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="p">:</span>
<a name="line-3371"></a>                <span class="k">if</span> <span class="n">alpha</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-3372"></a>                    <span class="n">alpha</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">EXTRASAMPLE</span>
<a name="line-3373"></a>                <span class="n">extrasamples</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">extrasamples</span>
<a name="line-3374"></a>                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'ExtraSamples'</span><span class="p">]</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3375"></a>                    <span class="n">extrasamples</span> <span class="o">=</span> <span class="p">(</span><span class="n">extrasamples</span><span class="p">,)</span>
<a name="line-3376"></a>                <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">exs</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">extrasamples</span><span class="p">):</span>
<a name="line-3377"></a>                    <span class="k">if</span> <span class="n">exs</span> <span class="ow">in</span> <span class="n">alpha</span><span class="p">:</span>
<a name="line-3378"></a>                        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3379"></a>                            <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">+</span><span class="n">i</span><span class="p">]]</span>
<a name="line-3380"></a>                        <span class="k">else</span><span class="p">:</span>
<a name="line-3381"></a>                            <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[:,</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">+</span><span class="n">i</span><span class="p">]]</span>
<a name="line-3382"></a>                        <span class="k">break</span>
<a name="line-3383"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3384"></a>                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3385"></a>                    <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">:</span><span class="mi">3</span><span class="p">]</span>
<a name="line-3386"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-3387"></a>                    <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[:,</span> <span class="p">:</span><span class="mi">3</span><span class="p">]</span>
<a name="line-3388"></a>            <span class="c1"># TODO: convert to uint8</span>
<a name="line-3389"></a>
<a name="line-3390"></a>        <span class="k">elif</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">MINISBLACK</span><span class="p">:</span>
<a name="line-3391"></a>            <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">()</span>
<a name="line-3392"></a>        <span class="k">elif</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">MINISWHITE</span><span class="p">:</span>
<a name="line-3393"></a>            <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">()</span>
<a name="line-3394"></a>        <span class="k">elif</span> <span class="n">photometric</span> <span class="o">==</span> <span class="n">PHOTOMETRIC</span><span class="o">.</span><span class="n">SEPARATED</span><span class="p">:</span>
<a name="line-3395"></a>            <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">()</span>
<a name="line-3396"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3397"></a>            <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">()</span>
<a name="line-3398"></a>        <span class="k">return</span> <span class="n">data</span>
<a name="line-3399"></a>
<a name="line-3400"></a>    <span class="k">def</span> <span class="nf">aspage</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3401"></a>        <span class="k">return</span> <span class="bp">self</span>
<a name="line-3402"></a>
<a name="line-3403"></a>    <span class="nd">@property</span>
<a name="line-3404"></a>    <span class="k">def</span> <span class="nf">keyframe</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3405"></a>        <span class="k">return</span> <span class="bp">self</span>
<a name="line-3406"></a>
<a name="line-3407"></a>    <span class="nd">@keyframe.setter</span>
<a name="line-3408"></a>    <span class="k">def</span> <span class="nf">keyframe</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">index</span><span class="p">):</span>
<a name="line-3409"></a>        <span class="k">return</span>
<a name="line-3410"></a>
<a name="line-3411"></a>    <span class="nd">@lazyattr</span>
<a name="line-3412"></a>    <span class="k">def</span> <span class="nf">offsets_bytecounts</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3413"></a>        <span class="sd">"""Return simplified offsets and bytecounts."""</span>
<a name="line-3414"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">:</span>
<a name="line-3415"></a>            <span class="n">offset</span><span class="p">,</span> <span class="n">byte_count</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_contiguous</span>
<a name="line-3416"></a>            <span class="k">return</span> <span class="p">[</span><span class="n">offset</span><span class="p">],</span> <span class="p">[</span><span class="n">byte_count</span><span class="p">]</span>
<a name="line-3417"></a>        <span class="k">return</span> <span class="n">clean_offsets_counts</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">databytecounts</span><span class="p">)</span>
<a name="line-3418"></a>
<a name="line-3419"></a>    <span class="nd">@lazyattr</span>
<a name="line-3420"></a>    <span class="k">def</span> <span class="nf">is_contiguous</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3421"></a>        <span class="sd">"""Return offset and size of contiguous data, else None.</span>
<a name="line-3422"></a>
<a name="line-3423"></a><span class="sd">        Excludes prediction and fill_order.</span>
<a name="line-3424"></a>
<a name="line-3425"></a><span class="sd">        """</span>
<a name="line-3426"></a>        <span class="k">if</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">compression</span> <span class="o">!=</span> <span class="mi">1</span>
<a name="line-3427"></a>                <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">64</span><span class="p">)):</span>
<a name="line-3428"></a>            <span class="k">return</span>
<a name="line-3429"></a>        <span class="k">if</span> <span class="s1">'TileWidth'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="p">:</span>
<a name="line-3430"></a>            <span class="k">if</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">imagewidth</span> <span class="o">!=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tilewidth</span> <span class="ow">or</span>
<a name="line-3431"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">imagelength</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">tilelength</span> <span class="ow">or</span>
<a name="line-3432"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">tilewidth</span> <span class="o">%</span> <span class="mi">16</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">tilelength</span> <span class="o">%</span> <span class="mi">16</span><span class="p">):</span>
<a name="line-3433"></a>                <span class="k">return</span>
<a name="line-3434"></a>            <span class="k">if</span> <span class="p">(</span><span class="s1">'ImageDepth'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span> <span class="ow">and</span> <span class="s1">'TileDepth'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span> <span class="ow">and</span>
<a name="line-3435"></a>                    <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">imagelength</span> <span class="o">!=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tilelength</span> <span class="ow">or</span>
<a name="line-3436"></a>                     <span class="bp">self</span><span class="o">.</span><span class="n">imagedepth</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">tiledepth</span><span class="p">)):</span>
<a name="line-3437"></a>                <span class="k">return</span>
<a name="line-3438"></a>
<a name="line-3439"></a>        <span class="n">offsets</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span>
<a name="line-3440"></a>        <span class="n">bytecounts</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">databytecounts</span>
<a name="line-3441"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">offsets</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3442"></a>            <span class="k">return</span> <span class="n">offsets</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">bytecounts</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3443"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_stk</span> <span class="ow">or</span> <span class="nb">all</span><span class="p">((</span><span class="n">offsets</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">bytecounts</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">offsets</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="ow">or</span>
<a name="line-3444"></a>                               <span class="n">bytecounts</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>  <span class="c1"># no data/ignore offset</span>
<a name="line-3445"></a>                              <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">offsets</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)):</span>
<a name="line-3446"></a>            <span class="k">return</span> <span class="n">offsets</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nb">sum</span><span class="p">(</span><span class="n">bytecounts</span><span class="p">)</span>
<a name="line-3447"></a>
<a name="line-3448"></a>    <span class="nd">@lazyattr</span>
<a name="line-3449"></a>    <span class="k">def</span> <span class="nf">is_final</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3450"></a>        <span class="sd">"""Return if page's image data is stored in final form.</span>
<a name="line-3451"></a>
<a name="line-3452"></a><span class="sd">        Excludes byte-swapping.</span>
<a name="line-3453"></a>
<a name="line-3454"></a><span class="sd">        """</span>
<a name="line-3455"></a>        <span class="k">return</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">is_contiguous</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">fillorder</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span>
<a name="line-3456"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_chroma_subsampled</span><span class="p">)</span>
<a name="line-3457"></a>
<a name="line-3458"></a>    <span class="nd">@lazyattr</span>
<a name="line-3459"></a>    <span class="k">def</span> <span class="nf">is_memmappable</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3460"></a>        <span class="sd">"""Return if page's image data in file can be memory-mapped."""</span>
<a name="line-3461"></a>        <span class="k">return</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">is_file</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_final</span> <span class="ow">and</span>
<a name="line-3462"></a>                <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span> <span class="o">==</span> <span class="mi">8</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">is_native</span><span class="p">)</span> <span class="ow">and</span>
<a name="line-3463"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
<a name="line-3464"></a>
<a name="line-3465"></a>    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
<a name="line-3466"></a>        <span class="sd">"""Return string containing information about page."""</span>
<a name="line-3467"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">!=</span> <span class="bp">self</span><span class="p">:</span>
<a name="line-3468"></a>            <span class="k">return</span> <span class="n">TiffFrame</span><span class="o">.</span><span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">detail</span><span class="p">)</span>
<a name="line-3469"></a>        <span class="n">attr</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-3470"></a>        <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'memmappable'</span><span class="p">,</span> <span class="s1">'final'</span><span class="p">,</span> <span class="s1">'contiguous'</span><span class="p">):</span>
<a name="line-3471"></a>            <span class="n">attr</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">'is_'</span><span class="o">+</span><span class="n">name</span><span class="p">)</span>
<a name="line-3472"></a>            <span class="k">if</span> <span class="n">attr</span><span class="p">:</span>
<a name="line-3473"></a>                <span class="n">attr</span> <span class="o">=</span> <span class="n">name</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
<a name="line-3474"></a>                <span class="k">break</span>
<a name="line-3475"></a>        <span class="n">info</span> <span class="o">=</span> <span class="s1">'  '</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">s</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="p">(</span>
<a name="line-3476"></a>            <span class="s1">'x'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">),</span>
<a name="line-3477"></a>            <span class="s1">'</span><span class="si">%s%s</span><span class="s1">'</span> <span class="o">%</span> <span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">SAMPLEFORMAT</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">sampleformat</span><span class="p">)</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
<a name="line-3478"></a>                      <span class="bp">self</span><span class="o">.</span><span class="n">bitspersample</span><span class="p">),</span>
<a name="line-3479"></a>            <span class="s1">'|'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">(</span>
<a name="line-3480"></a>                <span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">photometric</span><span class="p">)</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
<a name="line-3481"></a>                <span class="s1">'TILED'</span> <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_tiled</span> <span class="k">else</span> <span class="s1">''</span><span class="p">,</span>
<a name="line-3482"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">compression</span><span class="o">.</span><span class="n">name</span> <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">compression</span> <span class="o">!=</span> <span class="mi">1</span> <span class="k">else</span> <span class="s1">''</span><span class="p">,</span>
<a name="line-3483"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span><span class="o">.</span><span class="n">name</span> <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">planarconfig</span> <span class="o">!=</span> <span class="mi">1</span> <span class="k">else</span> <span class="s1">''</span><span class="p">,</span>
<a name="line-3484"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span><span class="o">.</span><span class="n">name</span> <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">predictor</span> <span class="o">!=</span> <span class="mi">1</span> <span class="k">else</span> <span class="s1">''</span><span class="p">,</span>
<a name="line-3485"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">fillorder</span><span class="o">.</span><span class="n">name</span> <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">fillorder</span> <span class="o">!=</span> <span class="mi">1</span> <span class="k">else</span> <span class="s1">''</span><span class="p">)</span>
<a name="line-3486"></a>                     <span class="k">if</span> <span class="n">i</span><span class="p">),</span>
<a name="line-3487"></a>            <span class="n">attr</span><span class="p">,</span>
<a name="line-3488"></a>            <span class="s1">'|'</span><span class="o">.</span><span class="n">join</span><span class="p">((</span><span class="n">f</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span> <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">flags</span><span class="p">))</span>
<a name="line-3489"></a>            <span class="p">)</span> <span class="k">if</span> <span class="n">s</span><span class="p">)</span>
<a name="line-3490"></a>        <span class="n">info</span> <span class="o">=</span> <span class="s2">"TiffPage </span><span class="si">%i</span><span class="s2"> @</span><span class="si">%i</span><span class="s2">  </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">offset</span><span class="p">,</span> <span class="n">info</span><span class="p">)</span>
<a name="line-3491"></a>        <span class="k">if</span> <span class="n">detail</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-3492"></a>            <span class="k">return</span> <span class="n">info</span>
<a name="line-3493"></a>        <span class="n">info</span> <span class="o">=</span> <span class="p">[</span><span class="n">info</span><span class="p">]</span>
<a name="line-3494"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3495"></a>        <span class="n">tlines</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-3496"></a>        <span class="n">vlines</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-3497"></a>        <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">tags</span><span class="o">.</span><span class="n">values</span><span class="p">(),</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">code</span><span class="p">):</span>
<a name="line-3498"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="fm">__str__</span><span class="p">()</span>
<a name="line-3499"></a>            <span class="n">tlines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">value</span><span class="p">[:</span><span class="n">TIFF</span><span class="o">.</span><span class="n">PRINT_LINE_WIDTH</span><span class="p">]</span><span class="o">.</span><span class="n">lstrip</span><span class="p">())</span>
<a name="line-3500"></a>            <span class="k">if</span> <span class="n">detail</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PRINT_LINE_WIDTH</span><span class="p">:</span>
<a name="line-3501"></a>                <span class="n">vlines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">"</span><span class="si">%s</span><span class="se">\n</span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">tag</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">upper</span><span class="p">(),</span>
<a name="line-3502"></a>                                          <span class="n">pformat</span><span class="p">(</span><span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">)))</span>
<a name="line-3503"></a>        <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">tlines</span><span class="p">))</span>
<a name="line-3504"></a>        <span class="k">if</span> <span class="n">detail</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3505"></a>            <span class="n">info</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'</span><span class="se">\n\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">vlines</span><span class="p">))</span>
<a name="line-3506"></a>        <span class="k">return</span> <span class="s1">'</span><span class="se">\n\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">info</span><span class="p">)</span>
<a name="line-3507"></a>
<a name="line-3508"></a>    <span class="nd">@lazyattr</span>
<a name="line-3509"></a>    <span class="k">def</span> <span class="nf">flags</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3510"></a>        <span class="sd">"""Return set of flags."""</span>
<a name="line-3511"></a>        <span class="k">return</span> <span class="nb">set</span><span class="p">((</span><span class="n">name</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">FILE_FLAGS</span><span class="p">)</span>
<a name="line-3512"></a>                    <span class="k">if</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">'is_'</span> <span class="o">+</span> <span class="n">name</span><span class="p">)))</span>
<a name="line-3513"></a>
<a name="line-3514"></a>    <span class="nd">@property</span>
<a name="line-3515"></a>    <span class="k">def</span> <span class="nf">ndim</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3516"></a>        <span class="sd">"""Return number of array dimensions."""</span>
<a name="line-3517"></a>        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<a name="line-3518"></a>
<a name="line-3519"></a>    <span class="nd">@property</span>
<a name="line-3520"></a>    <span class="k">def</span> <span class="nf">size</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3521"></a>        <span class="sd">"""Return number of elements in array."""</span>
<a name="line-3522"></a>        <span class="k">return</span> <span class="n">product</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<a name="line-3523"></a>
<a name="line-3524"></a>    <span class="nd">@lazyattr</span>
<a name="line-3525"></a>    <span class="k">def</span> <span class="nf">andor_tags</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3526"></a>        <span class="sd">"""Return consolidated metadata from Andor tags as dict.</span>
<a name="line-3527"></a>
<a name="line-3528"></a><span class="sd">        Remove Andor tags from self.tags.</span>
<a name="line-3529"></a>
<a name="line-3530"></a><span class="sd">        """</span>
<a name="line-3531"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_andor</span><span class="p">:</span>
<a name="line-3532"></a>            <span class="k">return</span>
<a name="line-3533"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3534"></a>        <span class="n">result</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'Id'</span><span class="p">:</span> <span class="n">tags</span><span class="p">[</span><span class="s1">'AndorId'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">}</span>
<a name="line-3535"></a>        <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="o">.</span><span class="n">values</span><span class="p">()):</span>
<a name="line-3536"></a>            <span class="n">code</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">code</span>
<a name="line-3537"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="mi">4864</span> <span class="o">&lt;</span> <span class="n">code</span> <span class="o">&lt;</span> <span class="mi">5031</span><span class="p">:</span>
<a name="line-3538"></a>                <span class="k">continue</span>
<a name="line-3539"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span>
<a name="line-3540"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">name</span><span class="p">[</span><span class="mi">5</span><span class="p">:]</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">tag</span><span class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">5</span> <span class="k">else</span> <span class="n">tag</span><span class="o">.</span><span class="n">name</span>
<a name="line-3541"></a>            <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-3542"></a>            <span class="k">del</span> <span class="n">tags</span><span class="p">[</span><span class="n">tag</span><span class="o">.</span><span class="n">name</span><span class="p">]</span>
<a name="line-3543"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-3544"></a>
<a name="line-3545"></a>    <span class="nd">@lazyattr</span>
<a name="line-3546"></a>    <span class="k">def</span> <span class="nf">epics_tags</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3547"></a>        <span class="sd">"""Return consolidated metadata from EPICS areaDetector tags as dict.</span>
<a name="line-3548"></a>
<a name="line-3549"></a><span class="sd">        Remove areaDetector tags from self.tags.</span>
<a name="line-3550"></a>
<a name="line-3551"></a><span class="sd">        """</span>
<a name="line-3552"></a>        <span class="c1"># TODO: obtain test file</span>
<a name="line-3553"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_epics</span><span class="p">:</span>
<a name="line-3554"></a>            <span class="k">return</span>
<a name="line-3555"></a>        <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-3556"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3557"></a>        <span class="k">for</span> <span class="n">tag</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="o">.</span><span class="n">values</span><span class="p">()):</span>
<a name="line-3558"></a>            <span class="n">code</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">code</span>
<a name="line-3559"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="mi">65000</span> <span class="o">&lt;</span> <span class="n">code</span> <span class="o">&lt;</span> <span class="mi">65500</span><span class="p">:</span>
<a name="line-3560"></a>                <span class="k">continue</span>
<a name="line-3561"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span>
<a name="line-3562"></a>            <span class="k">if</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">65000</span><span class="p">:</span>
<a name="line-3563"></a>                <span class="n">result</span><span class="p">[</span><span class="s1">'timeStamp'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-3564"></a>            <span class="k">elif</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">65001</span><span class="p">:</span>
<a name="line-3565"></a>                <span class="n">result</span><span class="p">[</span><span class="s1">'uniqueID'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-3566"></a>            <span class="k">elif</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">65002</span><span class="p">:</span>
<a name="line-3567"></a>                <span class="n">result</span><span class="p">[</span><span class="s1">'epicsTS'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-3568"></a>            <span class="k">elif</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">65003</span><span class="p">:</span>
<a name="line-3569"></a>                <span class="n">result</span><span class="p">[</span><span class="s1">'epicsTS'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-3570"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3571"></a>                <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">':'</span><span class="p">)</span>
<a name="line-3572"></a>                <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-3573"></a>            <span class="k">del</span> <span class="n">tags</span><span class="p">[</span><span class="n">tag</span><span class="o">.</span><span class="n">name</span><span class="p">]</span>
<a name="line-3574"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-3575"></a>
<a name="line-3576"></a>    <span class="nd">@property</span>
<a name="line-3577"></a>    <span class="k">def</span> <span class="nf">is_tiled</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3578"></a>        <span class="sd">"""Page contains tiled image."""</span>
<a name="line-3579"></a>        <span class="k">return</span> <span class="s1">'TileWidth'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3580"></a>
<a name="line-3581"></a>    <span class="nd">@property</span>
<a name="line-3582"></a>    <span class="k">def</span> <span class="nf">is_reduced</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3583"></a>        <span class="sd">"""Page is reduced image of another image."""</span>
<a name="line-3584"></a>        <span class="k">return</span> <span class="p">(</span><span class="s1">'NewSubfileType'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span> <span class="ow">and</span>
<a name="line-3585"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'NewSubfileType'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-3586"></a>
<a name="line-3587"></a>    <span class="nd">@property</span>
<a name="line-3588"></a>    <span class="k">def</span> <span class="nf">is_chroma_subsampled</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3589"></a>        <span class="sd">"""Page contains chroma subsampled image."""</span>
<a name="line-3590"></a>        <span class="k">return</span> <span class="p">(</span><span class="s1">'YCbCrSubSampling'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span> <span class="ow">and</span>
<a name="line-3591"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'YCbCrSubSampling'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span> <span class="o">!=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
<a name="line-3592"></a>
<a name="line-3593"></a>    <span class="nd">@lazyattr</span>
<a name="line-3594"></a>    <span class="k">def</span> <span class="nf">is_imagej</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3595"></a>        <span class="sd">"""Return ImageJ description if exists, else None."""</span>
<a name="line-3596"></a>        <span class="k">for</span> <span class="n">description</span> <span class="ow">in</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">description</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">description1</span><span class="p">):</span>
<a name="line-3597"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">description</span><span class="p">:</span>
<a name="line-3598"></a>                <span class="k">return</span>
<a name="line-3599"></a>            <span class="k">if</span> <span class="n">description</span><span class="p">[:</span><span class="mi">7</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'ImageJ='</span><span class="p">:</span>
<a name="line-3600"></a>                <span class="k">return</span> <span class="n">description</span>
<a name="line-3601"></a>
<a name="line-3602"></a>    <span class="nd">@lazyattr</span>
<a name="line-3603"></a>    <span class="k">def</span> <span class="nf">is_shaped</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3604"></a>        <span class="sd">"""Return description containing array shape if exists, else None."""</span>
<a name="line-3605"></a>        <span class="k">for</span> <span class="n">description</span> <span class="ow">in</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">description</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">description1</span><span class="p">):</span>
<a name="line-3606"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">description</span><span class="p">:</span>
<a name="line-3607"></a>                <span class="k">return</span>
<a name="line-3608"></a>            <span class="k">if</span> <span class="n">description</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'{'</span> <span class="ow">and</span> <span class="s1">'"shape":'</span> <span class="ow">in</span> <span class="n">description</span><span class="p">:</span>
<a name="line-3609"></a>                <span class="k">return</span> <span class="n">description</span>
<a name="line-3610"></a>            <span class="k">if</span> <span class="n">description</span><span class="p">[:</span><span class="mi">6</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'shape='</span><span class="p">:</span>
<a name="line-3611"></a>                <span class="k">return</span> <span class="n">description</span>
<a name="line-3612"></a>
<a name="line-3613"></a>    <span class="nd">@property</span>
<a name="line-3614"></a>    <span class="k">def</span> <span class="nf">is_mdgel</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3615"></a>        <span class="sd">"""Page contains MDFileTag tag."""</span>
<a name="line-3616"></a>        <span class="k">return</span> <span class="s1">'MDFileTag'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3617"></a>
<a name="line-3618"></a>    <span class="nd">@property</span>
<a name="line-3619"></a>    <span class="k">def</span> <span class="nf">is_mediacy</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3620"></a>        <span class="sd">"""Page contains Media Cybernetics Id tag."""</span>
<a name="line-3621"></a>        <span class="k">return</span> <span class="p">(</span><span class="s1">'MC_Id'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span> <span class="ow">and</span>
<a name="line-3622"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'MC_Id'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">[:</span><span class="mi">7</span><span class="p">]</span> <span class="o">==</span> <span class="sa">b</span><span class="s1">'MC TIFF'</span><span class="p">)</span>
<a name="line-3623"></a>
<a name="line-3624"></a>    <span class="nd">@property</span>
<a name="line-3625"></a>    <span class="k">def</span> <span class="nf">is_stk</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3626"></a>        <span class="sd">"""Page contains UIC2Tag tag."""</span>
<a name="line-3627"></a>        <span class="k">return</span> <span class="s1">'UIC2tag'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3628"></a>
<a name="line-3629"></a>    <span class="nd">@property</span>
<a name="line-3630"></a>    <span class="k">def</span> <span class="nf">is_lsm</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3631"></a>        <span class="sd">"""Page contains CZ_LSMINFO tag."""</span>
<a name="line-3632"></a>        <span class="k">return</span> <span class="s1">'CZ_LSMINFO'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3633"></a>
<a name="line-3634"></a>    <span class="nd">@property</span>
<a name="line-3635"></a>    <span class="k">def</span> <span class="nf">is_fluoview</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3636"></a>        <span class="sd">"""Page contains FluoView MM_STAMP tag."""</span>
<a name="line-3637"></a>        <span class="k">return</span> <span class="s1">'MM_Stamp'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3638"></a>
<a name="line-3639"></a>    <span class="nd">@property</span>
<a name="line-3640"></a>    <span class="k">def</span> <span class="nf">is_nih</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3641"></a>        <span class="sd">"""Page contains NIH image header."""</span>
<a name="line-3642"></a>        <span class="k">return</span> <span class="s1">'NIHImageHeader'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3643"></a>
<a name="line-3644"></a>    <span class="nd">@property</span>
<a name="line-3645"></a>    <span class="k">def</span> <span class="nf">is_sgi</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3646"></a>        <span class="sd">"""Page contains SGI image and tile depth tags."""</span>
<a name="line-3647"></a>        <span class="k">return</span> <span class="s1">'ImageDepth'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span> <span class="ow">and</span> <span class="s1">'TileDepth'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3648"></a>
<a name="line-3649"></a>    <span class="nd">@property</span>
<a name="line-3650"></a>    <span class="k">def</span> <span class="nf">is_vista</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3651"></a>        <span class="sd">"""Software tag is 'ISS Vista'."""</span>
<a name="line-3652"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">software</span> <span class="o">==</span> <span class="s1">'ISS Vista'</span>
<a name="line-3653"></a>
<a name="line-3654"></a>    <span class="nd">@property</span>
<a name="line-3655"></a>    <span class="k">def</span> <span class="nf">is_metaseries</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3656"></a>        <span class="sd">"""Page contains MDS MetaSeries metadata in ImageDescription tag."""</span>
<a name="line-3657"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">index</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">software</span> <span class="o">!=</span> <span class="s1">'MetaSeries'</span><span class="p">:</span>
<a name="line-3658"></a>            <span class="k">return</span> <span class="bp">False</span>
<a name="line-3659"></a>        <span class="n">d</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">description</span>
<a name="line-3660"></a>        <span class="k">return</span> <span class="n">d</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">'&lt;MetaData&gt;'</span><span class="p">)</span> <span class="ow">and</span> <span class="n">d</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'&lt;/MetaData&gt;'</span><span class="p">)</span>
<a name="line-3661"></a>
<a name="line-3662"></a>    <span class="nd">@property</span>
<a name="line-3663"></a>    <span class="k">def</span> <span class="nf">is_ome</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3664"></a>        <span class="sd">"""Page contains OME-XML in ImageDescription tag."""</span>
<a name="line-3665"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">index</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="ow">or</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">description</span><span class="p">:</span>
<a name="line-3666"></a>            <span class="k">return</span> <span class="bp">False</span>
<a name="line-3667"></a>        <span class="n">d</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">description</span>
<a name="line-3668"></a>        <span class="k">return</span> <span class="n">d</span><span class="p">[:</span><span class="mi">14</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'&lt;?xml version='</span> <span class="ow">and</span> <span class="n">d</span><span class="p">[</span><span class="o">-</span><span class="mi">6</span><span class="p">:]</span> <span class="o">==</span> <span class="s1">'&lt;/OME&gt;'</span>
<a name="line-3669"></a>
<a name="line-3670"></a>    <span class="nd">@property</span>
<a name="line-3671"></a>    <span class="k">def</span> <span class="nf">is_scn</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3672"></a>        <span class="sd">"""Page contains Leica SCN XML in ImageDescription tag."""</span>
<a name="line-3673"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">index</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="ow">or</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">description</span><span class="p">:</span>
<a name="line-3674"></a>            <span class="k">return</span> <span class="bp">False</span>
<a name="line-3675"></a>        <span class="n">d</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">description</span>
<a name="line-3676"></a>        <span class="k">return</span> <span class="n">d</span><span class="p">[:</span><span class="mi">14</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'&lt;?xml version='</span> <span class="ow">and</span> <span class="n">d</span><span class="p">[</span><span class="o">-</span><span class="mi">6</span><span class="p">:]</span> <span class="o">==</span> <span class="s1">'&lt;/scn&gt;'</span>
<a name="line-3677"></a>
<a name="line-3678"></a>    <span class="nd">@property</span>
<a name="line-3679"></a>    <span class="k">def</span> <span class="nf">is_micromanager</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3680"></a>        <span class="sd">"""Page contains Micro-Manager metadata."""</span>
<a name="line-3681"></a>        <span class="k">return</span> <span class="s1">'MicroManagerMetadata'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3682"></a>
<a name="line-3683"></a>    <span class="nd">@property</span>
<a name="line-3684"></a>    <span class="k">def</span> <span class="nf">is_andor</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3685"></a>        <span class="sd">"""Page contains Andor Technology tags."""</span>
<a name="line-3686"></a>        <span class="k">return</span> <span class="s1">'AndorId'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3687"></a>
<a name="line-3688"></a>    <span class="nd">@property</span>
<a name="line-3689"></a>    <span class="k">def</span> <span class="nf">is_pilatus</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3690"></a>        <span class="sd">"""Page contains Pilatus tags."""</span>
<a name="line-3691"></a>        <span class="k">return</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">software</span><span class="p">[:</span><span class="mi">8</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'TVX TIFF'</span> <span class="ow">and</span>
<a name="line-3692"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">description</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'# '</span><span class="p">)</span>
<a name="line-3693"></a>
<a name="line-3694"></a>    <span class="nd">@property</span>
<a name="line-3695"></a>    <span class="k">def</span> <span class="nf">is_epics</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3696"></a>        <span class="sd">"""Page contains EPICS areaDetector tags."""</span>
<a name="line-3697"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">description</span> <span class="o">==</span> <span class="s1">'EPICS areaDetector'</span>
<a name="line-3698"></a>
<a name="line-3699"></a>    <span class="nd">@property</span>
<a name="line-3700"></a>    <span class="k">def</span> <span class="nf">is_tvips</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3701"></a>        <span class="sd">"""Page contains TVIPS metadata."""</span>
<a name="line-3702"></a>        <span class="k">return</span> <span class="s1">'TVIPS'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3703"></a>
<a name="line-3704"></a>    <span class="nd">@property</span>
<a name="line-3705"></a>    <span class="k">def</span> <span class="nf">is_fei</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3706"></a>        <span class="sd">"""Page contains SFEG or HELIOS metadata."""</span>
<a name="line-3707"></a>        <span class="k">return</span> <span class="s1">'FEI_SFEG'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span> <span class="ow">or</span> <span class="s1">'FEI_HELIOS'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3708"></a>
<a name="line-3709"></a>    <span class="nd">@property</span>
<a name="line-3710"></a>    <span class="k">def</span> <span class="nf">is_sem</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3711"></a>        <span class="sd">"""Page contains Zeiss SEM metadata."""</span>
<a name="line-3712"></a>        <span class="k">return</span> <span class="s1">'CZ_SEM'</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">tags</span>
<a name="line-3713"></a>
<a name="line-3714"></a>    <span class="nd">@property</span>
<a name="line-3715"></a>    <span class="k">def</span> <span class="nf">is_svs</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3716"></a>        <span class="sd">"""Page contains Aperio metadata."""</span>
<a name="line-3717"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">description</span><span class="p">[:</span><span class="mi">20</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'Aperio Image Library'</span>
<a name="line-3718"></a>
<a name="line-3719"></a>    <span class="nd">@property</span>
<a name="line-3720"></a>    <span class="k">def</span> <span class="nf">is_scanimage</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3721"></a>        <span class="sd">"""Page contains ScanImage metadata."""</span>
<a name="line-3722"></a>        <span class="k">return</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">description</span><span class="p">[:</span><span class="mi">12</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'state.config'</span> <span class="ow">or</span>
<a name="line-3723"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">software</span><span class="p">[:</span><span class="mi">22</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'SI.LINE_FORMAT_VERSION'</span><span class="p">)</span>
<a name="line-3724"></a>
<a name="line-3725"></a>
<a name="line-3726"></a><span class="k">class</span> <span class="nc">TiffFrame</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-3727"></a>    <span class="sd">"""Lightweight TIFF image file directory (IFD).</span>
<a name="line-3728"></a>
<a name="line-3729"></a><span class="sd">    Only a limited number of tag values are read from file, e.g. StripOffsets,</span>
<a name="line-3730"></a><span class="sd">    and StripByteCounts. Other tag values are assumed to be identical with a</span>
<a name="line-3731"></a><span class="sd">    specified TiffPage instance, the keyframe.</span>
<a name="line-3732"></a>
<a name="line-3733"></a><span class="sd">    This is intended to reduce resource usage and speed up reading data from</span>
<a name="line-3734"></a><span class="sd">    file, not for introspection of metadata.</span>
<a name="line-3735"></a>
<a name="line-3736"></a><span class="sd">    Not compatible with Python 2.</span>
<a name="line-3737"></a>
<a name="line-3738"></a><span class="sd">    """</span>
<a name="line-3739"></a>    <span class="vm">__slots__</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'keyframe'</span><span class="p">,</span> <span class="s1">'parent'</span><span class="p">,</span> <span class="s1">'index'</span><span class="p">,</span> <span class="s1">'offset'</span><span class="p">,</span>
<a name="line-3740"></a>                 <span class="s1">'dataoffsets'</span><span class="p">,</span> <span class="s1">'databytecounts'</span><span class="p">)</span>
<a name="line-3741"></a>
<a name="line-3742"></a>    <span class="n">is_mdgel</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-3743"></a>    <span class="n">tags</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-3744"></a>
<a name="line-3745"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">keyframe</span><span class="p">):</span>
<a name="line-3746"></a>        <span class="sd">"""Read specified tags from file.</span>
<a name="line-3747"></a>
<a name="line-3748"></a><span class="sd">        The file handle position must be at the offset to a valid IFD.</span>
<a name="line-3749"></a>
<a name="line-3750"></a><span class="sd">        """</span>
<a name="line-3751"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span> <span class="o">=</span> <span class="n">keyframe</span>
<a name="line-3752"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parent</span>
<a name="line-3753"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="n">index</span>
<a name="line-3754"></a>
<a name="line-3755"></a>        <span class="n">unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span>
<a name="line-3756"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span>
<a name="line-3757"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">offset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-3758"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-3759"></a>            <span class="n">tagno</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">tagnoformat</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">tagnosize</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3760"></a>            <span class="k">if</span> <span class="n">tagno</span> <span class="o">&gt;</span> <span class="mi">4096</span><span class="p">:</span>
<a name="line-3761"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"suspicious number of tags"</span><span class="p">)</span>
<a name="line-3762"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-3763"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"corrupted page list at offset </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">offset</span><span class="p">)</span>
<a name="line-3764"></a>
<a name="line-3765"></a>        <span class="c1"># tags = {}</span>
<a name="line-3766"></a>        <span class="n">tagcodes</span> <span class="o">=</span> <span class="p">{</span><span class="mi">273</span><span class="p">,</span> <span class="mi">279</span><span class="p">,</span> <span class="mi">324</span><span class="p">,</span> <span class="mi">325</span><span class="p">}</span>  <span class="c1"># TIFF.FRAME_TAGS</span>
<a name="line-3767"></a>        <span class="n">tagsize</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">tagsize</span>
<a name="line-3768"></a>        <span class="n">codeformat</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">tagformat1</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span>
<a name="line-3769"></a>
<a name="line-3770"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">tagsize</span> <span class="o">*</span> <span class="n">tagno</span><span class="p">)</span>
<a name="line-3771"></a>        <span class="n">index</span> <span class="o">=</span> <span class="o">-</span><span class="n">tagsize</span>
<a name="line-3772"></a>        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tagno</span><span class="p">):</span>
<a name="line-3773"></a>            <span class="n">index</span> <span class="o">+=</span> <span class="n">tagsize</span>
<a name="line-3774"></a>            <span class="n">code</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">codeformat</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="n">index</span><span class="p">:</span><span class="n">index</span><span class="o">+</span><span class="mi">2</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3775"></a>            <span class="k">if</span> <span class="n">code</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">tagcodes</span><span class="p">:</span>
<a name="line-3776"></a>                <span class="k">continue</span>
<a name="line-3777"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-3778"></a>                <span class="n">tag</span> <span class="o">=</span> <span class="n">TiffTag</span><span class="p">(</span><span class="n">parent</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="n">index</span><span class="p">:</span><span class="n">index</span><span class="o">+</span><span class="n">tagsize</span><span class="p">])</span>
<a name="line-3779"></a>            <span class="k">except</span> <span class="n">TiffTag</span><span class="o">.</span><span class="n">Error</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-3780"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
<a name="line-3781"></a>                <span class="k">continue</span>
<a name="line-3782"></a>            <span class="k">if</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">273</span> <span class="ow">or</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">324</span><span class="p">:</span>
<a name="line-3783"></a>                <span class="nb">setattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">'dataoffsets'</span><span class="p">,</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-3784"></a>            <span class="k">elif</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">279</span> <span class="ow">or</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">325</span><span class="p">:</span>
<a name="line-3785"></a>                <span class="nb">setattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">'databytecounts'</span><span class="p">,</span> <span class="n">tag</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-3786"></a>            <span class="c1"># elif code == 270:</span>
<a name="line-3787"></a>            <span class="c1">#     tagname = tag.name</span>
<a name="line-3788"></a>            <span class="c1">#     if tagname not in tags:</span>
<a name="line-3789"></a>            <span class="c1">#         tags[tagname] = bytes2str(tag.value)</span>
<a name="line-3790"></a>            <span class="c1">#     elif 'ImageDescription1' not in tags:</span>
<a name="line-3791"></a>            <span class="c1">#         tags['ImageDescription1'] = bytes2str(tag.value)</span>
<a name="line-3792"></a>            <span class="c1"># else:</span>
<a name="line-3793"></a>            <span class="c1">#     tags[tag.name] = tag.value</span>
<a name="line-3794"></a>
<a name="line-3795"></a>    <span class="k">def</span> <span class="nf">aspage</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3796"></a>        <span class="sd">"""Return TiffPage from file."""</span>
<a name="line-3797"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">offset</span><span class="p">)</span>
<a name="line-3798"></a>        <span class="k">return</span> <span class="n">TiffPage</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">keyframe</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
<a name="line-3799"></a>
<a name="line-3800"></a>    <span class="k">def</span> <span class="nf">asarray</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-3801"></a>        <span class="sd">"""Read image data from file and return as numpy array."""</span>
<a name="line-3802"></a>        <span class="c1"># TODO: fix TypeError on Python 2</span>
<a name="line-3803"></a>        <span class="c1">#   "TypeError: unbound method asarray() must be called with TiffPage</span>
<a name="line-3804"></a>        <span class="c1">#   instance as first argument (got TiffFrame instance instead)"</span>
<a name="line-3805"></a>        <span class="n">kwargs</span><span class="p">[</span><span class="s1">'validate'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-3806"></a>        <span class="k">return</span> <span class="n">TiffPage</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-3807"></a>
<a name="line-3808"></a>    <span class="k">def</span> <span class="nf">asrgb</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-3809"></a>        <span class="sd">"""Read image data from file and return RGB image as numpy array."""</span>
<a name="line-3810"></a>        <span class="n">kwargs</span><span class="p">[</span><span class="s1">'validate'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-3811"></a>        <span class="k">return</span> <span class="n">TiffPage</span><span class="o">.</span><span class="n">asrgb</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-3812"></a>
<a name="line-3813"></a>    <span class="nd">@property</span>
<a name="line-3814"></a>    <span class="k">def</span> <span class="nf">offsets_bytecounts</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3815"></a>        <span class="sd">"""Return simplified offsets and bytecounts."""</span>
<a name="line-3816"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">:</span>
<a name="line-3817"></a>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">[:</span><span class="mi">1</span><span class="p">],</span> <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
<a name="line-3818"></a>        <span class="k">return</span> <span class="n">clean_offsets_counts</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">databytecounts</span><span class="p">)</span>
<a name="line-3819"></a>
<a name="line-3820"></a>    <span class="nd">@property</span>
<a name="line-3821"></a>    <span class="k">def</span> <span class="nf">is_contiguous</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3822"></a>        <span class="sd">"""Return offset and size of contiguous data, else None."""</span>
<a name="line-3823"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">:</span>
<a name="line-3824"></a>            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">dataoffsets</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-3825"></a>
<a name="line-3826"></a>    <span class="nd">@property</span>
<a name="line-3827"></a>    <span class="k">def</span> <span class="nf">is_memmappable</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3828"></a>        <span class="sd">"""Return if page's image data in file can be memory-mapped."""</span>
<a name="line-3829"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span><span class="o">.</span><span class="n">is_memmappable</span>
<a name="line-3830"></a>
<a name="line-3831"></a>    <span class="k">def</span> <span class="fm">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
<a name="line-3832"></a>        <span class="sd">"""Return attribute from keyframe."""</span>
<a name="line-3833"></a>        <span class="k">if</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">FRAME_ATTRS</span><span class="p">:</span>
<a name="line-3834"></a>            <span class="k">return</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">keyframe</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
<a name="line-3835"></a>        <span class="k">raise</span> <span class="ne">AttributeError</span><span class="p">(</span><span class="s2">"'</span><span class="si">%s</span><span class="s2">' object has no attribute '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span>
<a name="line-3836"></a>                             <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__name__</span><span class="p">,</span> <span class="n">name</span><span class="p">))</span>
<a name="line-3837"></a>
<a name="line-3838"></a>    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
<a name="line-3839"></a>        <span class="sd">"""Return string containing information about frame."""</span>
<a name="line-3840"></a>        <span class="n">info</span> <span class="o">=</span> <span class="s1">'  '</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">s</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="p">(</span>
<a name="line-3841"></a>            <span class="s1">'x'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">),</span>
<a name="line-3842"></a>            <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">dtype</span><span class="p">)))</span>
<a name="line-3843"></a>        <span class="k">return</span> <span class="s2">"TiffFrame </span><span class="si">%i</span><span class="s2"> @</span><span class="si">%i</span><span class="s2">  </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">offset</span><span class="p">,</span> <span class="n">info</span><span class="p">)</span>
<a name="line-3844"></a>
<a name="line-3845"></a>
<a name="line-3846"></a><span class="k">class</span> <span class="nc">TiffTag</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-3847"></a>    <span class="sd">"""TIFF tag structure.</span>
<a name="line-3848"></a>
<a name="line-3849"></a><span class="sd">    Attributes</span>
<a name="line-3850"></a><span class="sd">    ----------</span>
<a name="line-3851"></a><span class="sd">    name : string</span>
<a name="line-3852"></a><span class="sd">        Name of tag.</span>
<a name="line-3853"></a><span class="sd">    code : int</span>
<a name="line-3854"></a><span class="sd">        Decimal code of tag.</span>
<a name="line-3855"></a><span class="sd">    dtype : str</span>
<a name="line-3856"></a><span class="sd">        Datatype of tag data. One of TIFF DATA_FORMATS.</span>
<a name="line-3857"></a><span class="sd">    count : int</span>
<a name="line-3858"></a><span class="sd">        Number of values.</span>
<a name="line-3859"></a><span class="sd">    value : various types</span>
<a name="line-3860"></a><span class="sd">        Tag data as Python object.</span>
<a name="line-3861"></a><span class="sd">    valueoffset : int</span>
<a name="line-3862"></a><span class="sd">        Location of value in file.</span>
<a name="line-3863"></a>
<a name="line-3864"></a><span class="sd">    All attributes are read-only.</span>
<a name="line-3865"></a>
<a name="line-3866"></a><span class="sd">    """</span>
<a name="line-3867"></a>    <span class="vm">__slots__</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'code'</span><span class="p">,</span> <span class="s1">'count'</span><span class="p">,</span> <span class="s1">'dtype'</span><span class="p">,</span> <span class="s1">'value'</span><span class="p">,</span> <span class="s1">'valueoffset'</span><span class="p">)</span>
<a name="line-3868"></a>
<a name="line-3869"></a>    <span class="k">class</span> <span class="nc">Error</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
<a name="line-3870"></a>        <span class="k">pass</span>
<a name="line-3871"></a>
<a name="line-3872"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">,</span> <span class="n">tagheader</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-3873"></a>        <span class="sd">"""Initialize instance from tag header."""</span>
<a name="line-3874"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span>
<a name="line-3875"></a>        <span class="n">byteorder</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">byteorder</span>
<a name="line-3876"></a>        <span class="n">unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span>
<a name="line-3877"></a>        <span class="n">offsetsize</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">offsetsize</span>
<a name="line-3878"></a>
<a name="line-3879"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">valueoffset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span> <span class="o">+</span> <span class="n">offsetsize</span> <span class="o">+</span> <span class="mi">4</span>
<a name="line-3880"></a>        <span class="n">code</span><span class="p">,</span> <span class="n">dtype</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">tagformat1</span><span class="p">,</span> <span class="n">tagheader</span><span class="p">[:</span><span class="mi">4</span><span class="p">])</span>
<a name="line-3881"></a>        <span class="n">count</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">tagformat2</span><span class="p">,</span> <span class="n">tagheader</span><span class="p">[</span><span class="mi">4</span><span class="p">:])</span>
<a name="line-3882"></a>
<a name="line-3883"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-3884"></a>            <span class="n">dtype</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">DATA_FORMATS</span><span class="p">[</span><span class="n">dtype</span><span class="p">]</span>
<a name="line-3885"></a>        <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
<a name="line-3886"></a>            <span class="k">raise</span> <span class="n">TiffTag</span><span class="o">.</span><span class="n">Error</span><span class="p">(</span><span class="s2">"unknown tag data type </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-3887"></a>
<a name="line-3888"></a>        <span class="n">fmt</span> <span class="o">=</span> <span class="s1">'</span><span class="si">%s%i%s</span><span class="s1">'</span> <span class="o">%</span> <span class="p">(</span><span class="n">byteorder</span><span class="p">,</span> <span class="n">count</span> <span class="o">*</span> <span class="nb">int</span><span class="p">(</span><span class="n">dtype</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="n">dtype</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-3889"></a>        <span class="n">size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">calcsize</span><span class="p">(</span><span class="n">fmt</span><span class="p">)</span>
<a name="line-3890"></a>        <span class="k">if</span> <span class="n">size</span> <span class="o">&gt;</span> <span class="n">offsetsize</span> <span class="ow">or</span> <span class="n">code</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_READERS</span><span class="p">:</span>
<a name="line-3891"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">valueoffset</span> <span class="o">=</span> <span class="n">offset</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">parent</span><span class="o">.</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">value</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3892"></a>            <span class="k">if</span> <span class="n">offset</span> <span class="o">&lt;</span> <span class="mi">8</span> <span class="ow">or</span> <span class="n">offset</span> <span class="o">&gt;</span> <span class="n">fh</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="n">size</span><span class="p">:</span>
<a name="line-3893"></a>                <span class="k">raise</span> <span class="n">TiffTag</span><span class="o">.</span><span class="n">Error</span><span class="p">(</span><span class="s2">"invalid tag value offset"</span><span class="p">)</span>
<a name="line-3894"></a>            <span class="c1"># if offset % 2:</span>
<a name="line-3895"></a>            <span class="c1">#     warnings.warn("tag value does not begin on word boundary")</span>
<a name="line-3896"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset</span><span class="p">)</span>
<a name="line-3897"></a>            <span class="k">if</span> <span class="n">code</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_READERS</span><span class="p">:</span>
<a name="line-3898"></a>                <span class="n">readfunc</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_READERS</span><span class="p">[</span><span class="n">code</span><span class="p">]</span>
<a name="line-3899"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">readfunc</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">)</span>
<a name="line-3900"></a>            <span class="k">elif</span> <span class="n">code</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAGS</span> <span class="ow">or</span> <span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'s'</span><span class="p">:</span>
<a name="line-3901"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">fmt</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">))</span>
<a name="line-3902"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3903"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">read_numpy</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">)</span>
<a name="line-3904"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3905"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">fmt</span><span class="p">,</span> <span class="n">value</span><span class="p">[:</span><span class="n">size</span><span class="p">])</span>
<a name="line-3906"></a>
<a name="line-3907"></a>        <span class="n">process</span> <span class="o">=</span> <span class="n">code</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_READERS</span> <span class="ow">and</span> <span class="n">code</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_TUPLE</span>
<a name="line-3908"></a>        <span class="k">if</span> <span class="n">process</span> <span class="ow">and</span> <span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'s'</span> <span class="ow">and</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nb">bytes</span><span class="p">):</span>
<a name="line-3909"></a>            <span class="c1"># TIFF ASCII fields can contain multiple strings,</span>
<a name="line-3910"></a>            <span class="c1">#   each terminated with a NUL</span>
<a name="line-3911"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">stripascii</span><span class="p">(</span><span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
<a name="line-3912"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3913"></a>            <span class="k">if</span> <span class="n">code</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_ENUM</span><span class="p">:</span>
<a name="line-3914"></a>                <span class="n">t</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_ENUM</span><span class="p">[</span><span class="n">code</span><span class="p">]</span>
<a name="line-3915"></a>                <span class="k">try</span><span class="p">:</span>
<a name="line-3916"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">t</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">value</span><span class="p">)</span>
<a name="line-3917"></a>                <span class="k">except</span> <span class="ne">ValueError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-3918"></a>                    <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
<a name="line-3919"></a>            <span class="k">if</span> <span class="n">process</span><span class="p">:</span>
<a name="line-3920"></a>                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3921"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3922"></a>
<a name="line-3923"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">code</span> <span class="o">=</span> <span class="n">code</span>
<a name="line-3924"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span> <span class="o">=</span> <span class="n">dtype</span>
<a name="line-3925"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">count</span> <span class="o">=</span> <span class="n">count</span>
<a name="line-3926"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-3927"></a>
<a name="line-3928"></a>    <span class="nd">@property</span>
<a name="line-3929"></a>    <span class="k">def</span> <span class="nf">name</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3930"></a>        <span class="k">return</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAGS</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">code</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">code</span><span class="p">))</span>
<a name="line-3931"></a>
<a name="line-3932"></a>    <span class="k">def</span> <span class="nf">_fix_lsm_bitspersample</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent</span><span class="p">):</span>
<a name="line-3933"></a>        <span class="sd">"""Correct LSM bitspersample tag.</span>
<a name="line-3934"></a>
<a name="line-3935"></a><span class="sd">        Old LSM writers may use a separate region for two 16-bit values,</span>
<a name="line-3936"></a><span class="sd">        although they fit into the tag value element of the tag.</span>
<a name="line-3937"></a>
<a name="line-3938"></a><span class="sd">        """</span>
<a name="line-3939"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">code</span> <span class="o">==</span> <span class="mi">258</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-3940"></a>            <span class="c1"># TODO: test this case; need example file</span>
<a name="line-3941"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"correcting LSM bitspersample tag"</span><span class="p">)</span>
<a name="line-3942"></a>            <span class="n">tof</span> <span class="o">=</span> <span class="n">parent</span><span class="o">.</span><span class="n">offsetformat</span><span class="p">[</span><span class="n">parent</span><span class="o">.</span><span class="n">offsetsize</span><span class="p">]</span>
<a name="line-3943"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">valueoffset</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">tof</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_value</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3944"></a>            <span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">valueoffset</span><span class="p">)</span>
<a name="line-3945"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s2">"&lt;HH"</span><span class="p">,</span> <span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
<a name="line-3946"></a>
<a name="line-3947"></a>    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-3948"></a>        <span class="sd">"""Return string containing information about tag."""</span>
<a name="line-3949"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">code</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_ENUM</span><span class="p">:</span>
<a name="line-3950"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-3951"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_ENUM</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">code</span><span class="p">](</span><span class="bp">self</span><span class="o">.</span><span class="n">value</span><span class="p">)</span><span class="o">.</span><span class="n">name</span>
<a name="line-3952"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-3953"></a>                <span class="n">value</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">v</span><span class="o">.</span><span class="n">name</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-3954"></a>        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">value</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">):</span>
<a name="line-3955"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">pformat</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
<a name="line-3956"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="sa">u</span><span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="p">,</span> <span class="sa">u</span><span class="s1">'</span><span class="se">\\</span><span class="s1">n'</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="sa">u</span><span class="s1">'</span><span class="se">\r</span><span class="s1">'</span><span class="p">,</span> <span class="sa">u</span><span class="s1">''</span><span class="p">)</span>
<a name="line-3957"></a>                <span class="n">value</span> <span class="o">=</span> <span class="sa">u</span><span class="s1">'"</span><span class="si">%s</span><span class="s1">"'</span> <span class="o">%</span> <span class="n">value</span>
<a name="line-3958"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-3959"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">pformat</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">value</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">maxlines</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<a name="line-3960"></a>            <span class="n">value</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">value</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-3961"></a>
<a name="line-3962"></a>        <span class="n">tcode</span> <span class="o">=</span> <span class="s2">"</span><span class="si">%i%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">count</span> <span class="o">*</span> <span class="nb">int</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">dtype</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-3963"></a>        <span class="n">line</span> <span class="o">=</span> <span class="s2">"TiffTag </span><span class="si">%i</span><span class="s2"> </span><span class="si">%s</span><span class="s2">  </span><span class="si">%s</span><span class="s2"> @</span><span class="si">%i</span><span class="s2">  </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span>
<a name="line-3964"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">code</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">tcode</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">valueoffset</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
<a name="line-3965"></a>        <span class="k">return</span> <span class="n">line</span>
<a name="line-3966"></a>
<a name="line-3967"></a>
<a name="line-3968"></a><span class="k">class</span> <span class="nc">TiffPageSeries</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-3969"></a>    <span class="sd">"""Series of TIFF pages with compatible shape and data type.</span>
<a name="line-3970"></a>
<a name="line-3971"></a><span class="sd">    Attributes</span>
<a name="line-3972"></a><span class="sd">    ----------</span>
<a name="line-3973"></a><span class="sd">    pages : list of TiffPage</span>
<a name="line-3974"></a><span class="sd">        Sequence of TiffPages in series.</span>
<a name="line-3975"></a><span class="sd">    dtype : numpy.dtype or str</span>
<a name="line-3976"></a><span class="sd">        Data type of the image array in series.</span>
<a name="line-3977"></a><span class="sd">    shape : tuple</span>
<a name="line-3978"></a><span class="sd">        Dimensions of the image array in series.</span>
<a name="line-3979"></a><span class="sd">    axes : str</span>
<a name="line-3980"></a><span class="sd">        Labels of axes in shape. See TiffPage.axes.</span>
<a name="line-3981"></a><span class="sd">    offset : int or None</span>
<a name="line-3982"></a><span class="sd">        Position of image data in file if memory-mappable, else None.</span>
<a name="line-3983"></a>
<a name="line-3984"></a><span class="sd">    """</span>
<a name="line-3985"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">pages</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span>
<a name="line-3986"></a>                 <span class="n">parent</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">transform</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">stype</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-3987"></a>        <span class="sd">"""Initialize instance."""</span>
<a name="line-3988"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-3989"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pages</span> <span class="o">=</span> <span class="n">pages</span>
<a name="line-3990"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-3991"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">axes</span><span class="p">)</span>
<a name="line-3992"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-3993"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">stype</span> <span class="o">=</span> <span class="n">stype</span> <span class="k">if</span> <span class="n">stype</span> <span class="k">else</span> <span class="s1">''</span>
<a name="line-3994"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span> <span class="k">if</span> <span class="n">name</span> <span class="k">else</span> <span class="s1">''</span>
<a name="line-3995"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">transform</span>
<a name="line-3996"></a>        <span class="k">if</span> <span class="n">parent</span><span class="p">:</span>
<a name="line-3997"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">parent</span>
<a name="line-3998"></a>        <span class="k">elif</span> <span class="n">pages</span><span class="p">:</span>
<a name="line-3999"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">parent</span> <span class="o">=</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">parent</span>
<a name="line-4000"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-4001"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">parent</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-4002"></a>
<a name="line-4003"></a>    <span class="k">def</span> <span class="nf">asarray</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-4004"></a>        <span class="sd">"""Return image data from series of TIFF pages as numpy array."""</span>
<a name="line-4005"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="p">:</span>
<a name="line-4006"></a>            <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">series</span><span class="o">=</span><span class="bp">self</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">out</span><span class="p">)</span>
<a name="line-4007"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">transform</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-4008"></a>                <span class="n">result</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
<a name="line-4009"></a>            <span class="k">return</span> <span class="n">result</span>
<a name="line-4010"></a>
<a name="line-4011"></a>    <span class="nd">@lazyattr</span>
<a name="line-4012"></a>    <span class="k">def</span> <span class="nf">offset</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4013"></a>        <span class="sd">"""Return offset to series data in file, if any."""</span>
<a name="line-4014"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">:</span>
<a name="line-4015"></a>            <span class="k">return</span>
<a name="line-4016"></a>
<a name="line-4017"></a>        <span class="n">pos</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-4018"></a>        <span class="k">for</span> <span class="n">page</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">:</span>
<a name="line-4019"></a>            <span class="k">if</span> <span class="n">page</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-4020"></a>                <span class="k">return</span>
<a name="line-4021"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">page</span><span class="o">.</span><span class="n">is_final</span><span class="p">:</span>
<a name="line-4022"></a>                <span class="k">return</span>
<a name="line-4023"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">pos</span><span class="p">:</span>
<a name="line-4024"></a>                <span class="n">pos</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">page</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-4025"></a>                <span class="k">continue</span>
<a name="line-4026"></a>            <span class="k">if</span> <span class="n">pos</span> <span class="o">!=</span> <span class="n">page</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
<a name="line-4027"></a>                <span class="k">return</span>
<a name="line-4028"></a>            <span class="n">pos</span> <span class="o">+=</span> <span class="n">page</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-4029"></a>
<a name="line-4030"></a>        <span class="n">page</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-4031"></a>        <span class="n">offset</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">is_contiguous</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-4032"></a>        <span class="k">if</span> <span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">is_imagej</span> <span class="ow">or</span> <span class="n">page</span><span class="o">.</span><span class="n">is_shaped</span><span class="p">)</span> <span class="ow">and</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-4033"></a>            <span class="c1"># truncated files</span>
<a name="line-4034"></a>            <span class="k">return</span> <span class="n">offset</span>
<a name="line-4035"></a>        <span class="k">if</span> <span class="n">pos</span> <span class="o">==</span> <span class="n">offset</span> <span class="o">+</span> <span class="n">product</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span><span class="p">:</span>
<a name="line-4036"></a>            <span class="k">return</span> <span class="n">offset</span>
<a name="line-4037"></a>
<a name="line-4038"></a>    <span class="nd">@property</span>
<a name="line-4039"></a>    <span class="k">def</span> <span class="nf">ndim</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4040"></a>        <span class="sd">"""Return number of array dimensions."""</span>
<a name="line-4041"></a>        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<a name="line-4042"></a>
<a name="line-4043"></a>    <span class="nd">@property</span>
<a name="line-4044"></a>    <span class="k">def</span> <span class="nf">size</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4045"></a>        <span class="sd">"""Return number of elements in array."""</span>
<a name="line-4046"></a>        <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">product</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">))</span>
<a name="line-4047"></a>
<a name="line-4048"></a>    <span class="k">def</span> <span class="fm">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4049"></a>        <span class="sd">"""Return number of TiffPages in series."""</span>
<a name="line-4050"></a>        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span>
<a name="line-4051"></a>
<a name="line-4052"></a>    <span class="k">def</span> <span class="fm">__getitem__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">key</span><span class="p">):</span>
<a name="line-4053"></a>        <span class="sd">"""Return specified TiffPage."""</span>
<a name="line-4054"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-4055"></a>
<a name="line-4056"></a>    <span class="k">def</span> <span class="fm">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4057"></a>        <span class="sd">"""Return iterator over TiffPages in series."""</span>
<a name="line-4058"></a>        <span class="k">return</span> <span class="nb">iter</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span>
<a name="line-4059"></a>
<a name="line-4060"></a>    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4061"></a>        <span class="sd">"""Return string with information about series."""</span>
<a name="line-4062"></a>        <span class="n">s</span> <span class="o">=</span> <span class="s1">'  '</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">s</span> <span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="p">(</span>
<a name="line-4063"></a>            <span class="n">snipstr</span><span class="p">(</span><span class="s2">"'</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="mi">20</span><span class="p">)</span> <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="k">else</span> <span class="s1">''</span><span class="p">,</span>
<a name="line-4064"></a>            <span class="s1">'x'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">),</span>
<a name="line-4065"></a>            <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">dtype</span><span class="p">),</span>
<a name="line-4066"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">axes</span><span class="p">,</span>
<a name="line-4067"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">stype</span><span class="p">,</span>
<a name="line-4068"></a>            <span class="s1">'</span><span class="si">%i</span><span class="s1"> Pages'</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pages</span><span class="p">),</span>
<a name="line-4069"></a>            <span class="p">(</span><span class="s1">'Offset=</span><span class="si">%i</span><span class="s1">'</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">offset</span><span class="p">)</span> <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">offset</span> <span class="k">else</span> <span class="s1">''</span><span class="p">)</span> <span class="k">if</span> <span class="n">s</span><span class="p">)</span>
<a name="line-4070"></a>        <span class="k">return</span> <span class="s1">'TiffPageSeries </span><span class="si">%i</span><span class="s1">  </span><span class="si">%s</span><span class="s1">'</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">index</span><span class="p">,</span> <span class="n">s</span><span class="p">)</span>
<a name="line-4071"></a>
<a name="line-4072"></a>
<a name="line-4073"></a><span class="k">class</span> <span class="nc">TiffSequence</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-4074"></a>    <span class="sd">"""Sequence of TIFF files.</span>
<a name="line-4075"></a>
<a name="line-4076"></a><span class="sd">    The image data in all files must match shape, dtype, etc.</span>
<a name="line-4077"></a>
<a name="line-4078"></a><span class="sd">    Attributes</span>
<a name="line-4079"></a><span class="sd">    ----------</span>
<a name="line-4080"></a><span class="sd">    files : list</span>
<a name="line-4081"></a><span class="sd">        List of file names.</span>
<a name="line-4082"></a><span class="sd">    shape : tuple</span>
<a name="line-4083"></a><span class="sd">        Shape of image sequence. Excludes shape of image array.</span>
<a name="line-4084"></a><span class="sd">    axes : str</span>
<a name="line-4085"></a><span class="sd">        Labels of axes in shape.</span>
<a name="line-4086"></a>
<a name="line-4087"></a><span class="sd">    Examples</span>
<a name="line-4088"></a><span class="sd">    --------</span>
<a name="line-4089"></a><span class="sd">    &gt;&gt;&gt; # read image stack from sequence of TIFF files</span>
<a name="line-4090"></a><span class="sd">    &gt;&gt;&gt; imsave('temp_C001T001.tif', numpy.random.rand(64, 64))</span>
<a name="line-4091"></a><span class="sd">    &gt;&gt;&gt; imsave('temp_C001T002.tif', numpy.random.rand(64, 64))</span>
<a name="line-4092"></a><span class="sd">    &gt;&gt;&gt; tifs = TiffSequence("temp_C001*.tif")</span>
<a name="line-4093"></a><span class="sd">    &gt;&gt;&gt; tifs.shape</span>
<a name="line-4094"></a><span class="sd">    (1, 2)</span>
<a name="line-4095"></a><span class="sd">    &gt;&gt;&gt; tifs.axes</span>
<a name="line-4096"></a><span class="sd">    'CT'</span>
<a name="line-4097"></a><span class="sd">    &gt;&gt;&gt; data = tifs.asarray()</span>
<a name="line-4098"></a><span class="sd">    &gt;&gt;&gt; data.shape</span>
<a name="line-4099"></a><span class="sd">    (1, 2, 64, 64)</span>
<a name="line-4100"></a>
<a name="line-4101"></a><span class="sd">    """</span>
<a name="line-4102"></a>    <span class="n">_patterns</span> <span class="o">=</span> <span class="p">{</span>
<a name="line-4103"></a>        <span class="s1">'axes'</span><span class="p">:</span> <span class="sa">r</span><span class="s2">"""</span>
<a name="line-4104"></a><span class="s2">            # matches Olympus OIF and Leica TIFF series</span>
<a name="line-4105"></a><span class="s2">            _?(?:(q|l|p|a|c|t|x|y|z|ch|tp)(\d{1,4}))</span>
<a name="line-4106"></a><span class="s2">            _?(?:(q|l|p|a|c|t|x|y|z|ch|tp)(\d{1,4}))?</span>
<a name="line-4107"></a><span class="s2">            _?(?:(q|l|p|a|c|t|x|y|z|ch|tp)(\d{1,4}))?</span>
<a name="line-4108"></a><span class="s2">            _?(?:(q|l|p|a|c|t|x|y|z|ch|tp)(\d{1,4}))?</span>
<a name="line-4109"></a><span class="s2">            _?(?:(q|l|p|a|c|t|x|y|z|ch|tp)(\d{1,4}))?</span>
<a name="line-4110"></a><span class="s2">            _?(?:(q|l|p|a|c|t|x|y|z|ch|tp)(\d{1,4}))?</span>
<a name="line-4111"></a><span class="s2">            _?(?:(q|l|p|a|c|t|x|y|z|ch|tp)(\d{1,4}))?</span>
<a name="line-4112"></a><span class="s2">            """</span><span class="p">}</span>
<a name="line-4113"></a>
<a name="line-4114"></a>    <span class="k">class</span> <span class="nc">ParseError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
<a name="line-4115"></a>        <span class="k">pass</span>
<a name="line-4116"></a>
<a name="line-4117"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">files</span><span class="p">,</span> <span class="n">imread</span><span class="o">=</span><span class="n">TiffFile</span><span class="p">,</span> <span class="n">pattern</span><span class="o">=</span><span class="s1">'axes'</span><span class="p">,</span>
<a name="line-4118"></a>                 <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-4119"></a>        <span class="sd">"""Initialize instance from multiple files.</span>
<a name="line-4120"></a>
<a name="line-4121"></a><span class="sd">        Parameters</span>
<a name="line-4122"></a><span class="sd">        ----------</span>
<a name="line-4123"></a><span class="sd">        files : str, or sequence of str</span>
<a name="line-4124"></a><span class="sd">            Glob pattern or sequence of file names.</span>
<a name="line-4125"></a><span class="sd">            Binary streams are not supported.</span>
<a name="line-4126"></a><span class="sd">        imread : function or class</span>
<a name="line-4127"></a><span class="sd">            Image read function or class with asarray function returning numpy</span>
<a name="line-4128"></a><span class="sd">            array from single file.</span>
<a name="line-4129"></a><span class="sd">        pattern : str</span>
<a name="line-4130"></a><span class="sd">            Regular expression pattern that matches axes names and sequence</span>
<a name="line-4131"></a><span class="sd">            indices in file names.</span>
<a name="line-4132"></a><span class="sd">            By default, this matches Olympus OIF and Leica TIFF series.</span>
<a name="line-4133"></a>
<a name="line-4134"></a><span class="sd">        """</span>
<a name="line-4135"></a>        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">files</span><span class="p">,</span> <span class="nb">basestring</span><span class="p">):</span>
<a name="line-4136"></a>            <span class="n">files</span> <span class="o">=</span> <span class="n">natural_sorted</span><span class="p">(</span><span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="n">files</span><span class="p">))</span>
<a name="line-4137"></a>        <span class="n">files</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">files</span><span class="p">)</span>
<a name="line-4138"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">files</span><span class="p">:</span>
<a name="line-4139"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"no files found"</span><span class="p">)</span>
<a name="line-4140"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">files</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nb">basestring</span><span class="p">):</span>
<a name="line-4141"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a file name"</span><span class="p">)</span>
<a name="line-4142"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">files</span> <span class="o">=</span> <span class="n">files</span>
<a name="line-4143"></a>
<a name="line-4144"></a>        <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">imread</span><span class="p">,</span> <span class="s1">'asarray'</span><span class="p">):</span>
<a name="line-4145"></a>            <span class="c1"># redefine imread</span>
<a name="line-4146"></a>            <span class="n">_imread</span> <span class="o">=</span> <span class="n">imread</span>
<a name="line-4147"></a>
<a name="line-4148"></a>            <span class="k">def</span> <span class="nf">imread</span><span class="p">(</span><span class="n">fname</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-4149"></a>                <span class="k">with</span> <span class="n">_imread</span><span class="p">(</span><span class="n">fname</span><span class="p">)</span> <span class="k">as</span> <span class="n">im</span><span class="p">:</span>
<a name="line-4150"></a>                    <span class="k">return</span> <span class="n">im</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-4151"></a>
<a name="line-4152"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">imread</span> <span class="o">=</span> <span class="n">imread</span>
<a name="line-4153"></a>
<a name="line-4154"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">pattern</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_patterns</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span> <span class="n">pattern</span><span class="p">)</span>
<a name="line-4155"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-4156"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_parse</span><span class="p">()</span>
<a name="line-4157"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">axes</span><span class="p">:</span>
<a name="line-4158"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'I'</span>
<a name="line-4159"></a>        <span class="k">except</span> <span class="bp">self</span><span class="o">.</span><span class="n">ParseError</span><span class="p">:</span>
<a name="line-4160"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="s1">'I'</span>
<a name="line-4161"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">files</span><span class="p">),)</span>
<a name="line-4162"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_startindex</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,)</span>
<a name="line-4163"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_indices</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">((</span><span class="n">i</span><span class="p">,)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">files</span><span class="p">)))</span>
<a name="line-4164"></a>
<a name="line-4165"></a>    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4166"></a>        <span class="sd">"""Return string with information about image sequence."""</span>
<a name="line-4167"></a>        <span class="k">return</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span><span class="o">.</span><span class="n">join</span><span class="p">([</span>
<a name="line-4168"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
<a name="line-4169"></a>            <span class="s1">' size: </span><span class="si">%i</span><span class="s1">'</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">),</span>
<a name="line-4170"></a>            <span class="s1">' axes: </span><span class="si">%s</span><span class="s1">'</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">axes</span><span class="p">,</span>
<a name="line-4171"></a>            <span class="s1">' shape: </span><span class="si">%s</span><span class="s1">'</span> <span class="o">%</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)])</span>
<a name="line-4172"></a>
<a name="line-4173"></a>    <span class="k">def</span> <span class="fm">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4174"></a>        <span class="k">return</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">)</span>
<a name="line-4175"></a>
<a name="line-4176"></a>    <span class="k">def</span> <span class="fm">__enter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4177"></a>        <span class="k">return</span> <span class="bp">self</span>
<a name="line-4178"></a>
<a name="line-4179"></a>    <span class="k">def</span> <span class="fm">__exit__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">exc_type</span><span class="p">,</span> <span class="n">exc_value</span><span class="p">,</span> <span class="n">traceback</span><span class="p">):</span>
<a name="line-4180"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-4181"></a>
<a name="line-4182"></a>    <span class="k">def</span> <span class="nf">close</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4183"></a>        <span class="k">pass</span>
<a name="line-4184"></a>
<a name="line-4185"></a>    <span class="k">def</span> <span class="nf">asarray</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-4186"></a>        <span class="sd">"""Read image data from all files and return as numpy array.</span>
<a name="line-4187"></a>
<a name="line-4188"></a><span class="sd">        The args and kwargs parameters are passed to the imread function.</span>
<a name="line-4189"></a>
<a name="line-4190"></a><span class="sd">        Raise IndexError or ValueError if image shapes do not match.</span>
<a name="line-4191"></a>
<a name="line-4192"></a><span class="sd">        """</span>
<a name="line-4193"></a>        <span class="n">im</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-4194"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">+</span> <span class="n">im</span><span class="o">.</span><span class="n">shape</span>
<a name="line-4195"></a>        <span class="n">result</span> <span class="o">=</span> <span class="n">create_output</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">im</span><span class="o">.</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-4196"></a>        <span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">*</span><span class="n">im</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<a name="line-4197"></a>        <span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">fname</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_indices</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">):</span>
<a name="line-4198"></a>            <span class="n">index</span> <span class="o">=</span> <span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">j</span> <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_startindex</span><span class="p">)]</span>
<a name="line-4199"></a>            <span class="n">index</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">ravel_multi_index</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span>
<a name="line-4200"></a>            <span class="n">im</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">imread</span><span class="p">(</span><span class="n">fname</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-4201"></a>            <span class="n">result</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="n">im</span>
<a name="line-4202"></a>        <span class="n">result</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="n">shape</span>
<a name="line-4203"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-4204"></a>
<a name="line-4205"></a>    <span class="k">def</span> <span class="nf">_parse</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4206"></a>        <span class="sd">"""Get axes and shape from file names."""</span>
<a name="line-4207"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">pattern</span><span class="p">:</span>
<a name="line-4208"></a>            <span class="k">raise</span> <span class="bp">self</span><span class="o">.</span><span class="n">ParseError</span><span class="p">(</span><span class="s2">"invalid pattern"</span><span class="p">)</span>
<a name="line-4209"></a>        <span class="n">pattern</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pattern</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">IGNORECASE</span> <span class="o">|</span> <span class="n">re</span><span class="o">.</span><span class="n">VERBOSE</span><span class="p">)</span>
<a name="line-4210"></a>        <span class="n">matches</span> <span class="o">=</span> <span class="n">pattern</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="line-4211"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">matches</span><span class="p">:</span>
<a name="line-4212"></a>            <span class="k">raise</span> <span class="bp">self</span><span class="o">.</span><span class="n">ParseError</span><span class="p">(</span><span class="s2">"pattern does not match file names"</span><span class="p">)</span>
<a name="line-4213"></a>        <span class="n">matches</span> <span class="o">=</span> <span class="n">matches</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-4214"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">matches</span><span class="p">)</span> <span class="o">%</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-4215"></a>            <span class="k">raise</span> <span class="bp">self</span><span class="o">.</span><span class="n">ParseError</span><span class="p">(</span><span class="s2">"pattern does not match axis name and index"</span><span class="p">)</span>
<a name="line-4216"></a>        <span class="n">axes</span> <span class="o">=</span> <span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">m</span> <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="n">matches</span><span class="p">[::</span><span class="mi">2</span><span class="p">]</span> <span class="k">if</span> <span class="n">m</span><span class="p">)</span>
<a name="line-4217"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">axes</span><span class="p">:</span>
<a name="line-4218"></a>            <span class="k">raise</span> <span class="bp">self</span><span class="o">.</span><span class="n">ParseError</span><span class="p">(</span><span class="s2">"pattern does not match file names"</span><span class="p">)</span>
<a name="line-4219"></a>
<a name="line-4220"></a>        <span class="n">indices</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-4221"></a>        <span class="k">for</span> <span class="n">fname</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">:</span>
<a name="line-4222"></a>            <span class="n">matches</span> <span class="o">=</span> <span class="n">pattern</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">fname</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-4223"></a>            <span class="k">if</span> <span class="n">axes</span> <span class="o">!=</span> <span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">m</span> <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="n">matches</span><span class="p">[::</span><span class="mi">2</span><span class="p">]</span> <span class="k">if</span> <span class="n">m</span><span class="p">):</span>
<a name="line-4224"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"axes do not match within the image sequence"</span><span class="p">)</span>
<a name="line-4225"></a>            <span class="n">indices</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="nb">int</span><span class="p">(</span><span class="n">m</span><span class="p">)</span> <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="n">matches</span><span class="p">[</span><span class="mi">1</span><span class="p">::</span><span class="mi">2</span><span class="p">]</span> <span class="k">if</span> <span class="n">m</span><span class="p">])</span>
<a name="line-4226"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">numpy</span><span class="o">.</span><span class="n">max</span><span class="p">(</span><span class="n">indices</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<a name="line-4227"></a>        <span class="n">startindex</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">numpy</span><span class="o">.</span><span class="n">min</span><span class="p">(</span><span class="n">indices</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
<a name="line-4228"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">i</span><span class="o">-</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span> <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="n">startindex</span><span class="p">))</span>
<a name="line-4229"></a>        <span class="k">if</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">):</span>
<a name="line-4230"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"files are missing. Missing data are zeroed"</span><span class="p">)</span>
<a name="line-4231"></a>
<a name="line-4232"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">axes</span> <span class="o">=</span> <span class="n">axes</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
<a name="line-4233"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="n">shape</span>
<a name="line-4234"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_indices</span> <span class="o">=</span> <span class="n">indices</span>
<a name="line-4235"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_startindex</span> <span class="o">=</span> <span class="n">startindex</span>
<a name="line-4236"></a>
<a name="line-4237"></a>
<a name="line-4238"></a><span class="k">class</span> <span class="nc">FileHandle</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-4239"></a>    <span class="sd">"""Binary file handle.</span>
<a name="line-4240"></a>
<a name="line-4241"></a><span class="sd">    A limited, special purpose file handler that can:</span>
<a name="line-4242"></a>
<a name="line-4243"></a><span class="sd">    * handle embedded files (for CZI within CZI files)</span>
<a name="line-4244"></a><span class="sd">    * re-open closed files (for multi file formats, such as OME-TIFF)</span>
<a name="line-4245"></a><span class="sd">    * read and write numpy arrays and records from file like objects</span>
<a name="line-4246"></a>
<a name="line-4247"></a><span class="sd">    Only 'rb' and 'wb' modes are supported. Concurrently reading and writing</span>
<a name="line-4248"></a><span class="sd">    of the same stream is untested.</span>
<a name="line-4249"></a>
<a name="line-4250"></a><span class="sd">    When initialized from another file handle, do not use it unless this</span>
<a name="line-4251"></a><span class="sd">    FileHandle is closed.</span>
<a name="line-4252"></a>
<a name="line-4253"></a><span class="sd">    Attributes</span>
<a name="line-4254"></a><span class="sd">    ----------</span>
<a name="line-4255"></a><span class="sd">    name : str</span>
<a name="line-4256"></a><span class="sd">        Name of the file.</span>
<a name="line-4257"></a><span class="sd">    path : str</span>
<a name="line-4258"></a><span class="sd">        Absolute path to file.</span>
<a name="line-4259"></a><span class="sd">    size : int</span>
<a name="line-4260"></a><span class="sd">        Size of file in bytes.</span>
<a name="line-4261"></a><span class="sd">    is_file : bool</span>
<a name="line-4262"></a><span class="sd">        If True, file has a filno and can be memory-mapped.</span>
<a name="line-4263"></a>
<a name="line-4264"></a><span class="sd">    All attributes are read-only.</span>
<a name="line-4265"></a>
<a name="line-4266"></a><span class="sd">    """</span>
<a name="line-4267"></a>    <span class="vm">__slots__</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'_fh'</span><span class="p">,</span> <span class="s1">'_file'</span><span class="p">,</span> <span class="s1">'_mode'</span><span class="p">,</span> <span class="s1">'_name'</span><span class="p">,</span> <span class="s1">'_dir'</span><span class="p">,</span> <span class="s1">'_lock'</span><span class="p">,</span>
<a name="line-4268"></a>                 <span class="s1">'_offset'</span><span class="p">,</span> <span class="s1">'_size'</span><span class="p">,</span> <span class="s1">'_close'</span><span class="p">,</span> <span class="s1">'is_file'</span><span class="p">)</span>
<a name="line-4269"></a>
<a name="line-4270"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">file</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">'rb'</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-4271"></a>        <span class="sd">"""Initialize file handle from file name or another file handle.</span>
<a name="line-4272"></a>
<a name="line-4273"></a><span class="sd">        Parameters</span>
<a name="line-4274"></a><span class="sd">        ----------</span>
<a name="line-4275"></a><span class="sd">        file : str, binary stream, or FileHandle</span>
<a name="line-4276"></a><span class="sd">            File name or seekable binary stream, such as a open file</span>
<a name="line-4277"></a><span class="sd">            or BytesIO.</span>
<a name="line-4278"></a><span class="sd">        mode : str</span>
<a name="line-4279"></a><span class="sd">            File open mode in case 'file' is a file name. Must be 'rb' or 'wb'.</span>
<a name="line-4280"></a><span class="sd">        name : str</span>
<a name="line-4281"></a><span class="sd">            Optional name of file in case 'file' is a binary stream.</span>
<a name="line-4282"></a><span class="sd">        offset : int</span>
<a name="line-4283"></a><span class="sd">            Optional start position of embedded file. By default, this is</span>
<a name="line-4284"></a><span class="sd">            the current file position.</span>
<a name="line-4285"></a><span class="sd">        size : int</span>
<a name="line-4286"></a><span class="sd">            Optional size of embedded file. By default, this is the number</span>
<a name="line-4287"></a><span class="sd">            of bytes from the 'offset' to the end of the file.</span>
<a name="line-4288"></a>
<a name="line-4289"></a><span class="sd">        """</span>
<a name="line-4290"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-4291"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_file</span> <span class="o">=</span> <span class="nb">file</span>
<a name="line-4292"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_mode</span> <span class="o">=</span> <span class="n">mode</span>
<a name="line-4293"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="n">name</span>
<a name="line-4294"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_dir</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-4295"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="o">=</span> <span class="n">offset</span>
<a name="line-4296"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="o">=</span> <span class="n">size</span>
<a name="line-4297"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_close</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-4298"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">is_file</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-4299"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_lock</span> <span class="o">=</span> <span class="n">NullContext</span><span class="p">()</span>
<a name="line-4300"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">open</span><span class="p">()</span>
<a name="line-4301"></a>
<a name="line-4302"></a>    <span class="k">def</span> <span class="nf">open</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4303"></a>        <span class="sd">"""Open or re-open file."""</span>
<a name="line-4304"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="p">:</span>
<a name="line-4305"></a>            <span class="k">return</span>  <span class="c1"># file is open</span>
<a name="line-4306"></a>
<a name="line-4307"></a>        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="p">,</span> <span class="nb">basestring</span><span class="p">):</span>
<a name="line-4308"></a>            <span class="c1"># file name</span>
<a name="line-4309"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_file</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">realpath</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="p">)</span>
<a name="line-4310"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_dir</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="p">)</span>
<a name="line-4311"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_mode</span><span class="p">)</span>
<a name="line-4312"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_close</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-4313"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-4314"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-4315"></a>        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="p">,</span> <span class="n">FileHandle</span><span class="p">):</span>
<a name="line-4316"></a>            <span class="c1"># FileHandle</span>
<a name="line-4317"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">_fh</span>
<a name="line-4318"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-4319"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-4320"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="o">+=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">_offset</span>
<a name="line-4321"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_close</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-4322"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">:</span>
<a name="line-4323"></a>                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span><span class="p">:</span>
<a name="line-4324"></a>                    <span class="n">name</span><span class="p">,</span> <span class="n">ext</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">splitext</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">_name</span><span class="p">)</span>
<a name="line-4325"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="s2">"</span><span class="si">%s</span><span class="s2">@</span><span class="si">%i%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span><span class="p">,</span> <span class="n">ext</span><span class="p">)</span>
<a name="line-4326"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-4327"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">_name</span>
<a name="line-4328"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_mode</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">_mode</span> <span class="o">!=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">_mode</span><span class="p">:</span>
<a name="line-4329"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">'FileHandle has wrong mode'</span><span class="p">)</span>
<a name="line-4330"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_mode</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">_mode</span>
<a name="line-4331"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_dir</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">_dir</span>
<a name="line-4332"></a>        <span class="k">elif</span> <span class="nb">hasattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="p">,</span> <span class="s1">'seek'</span><span class="p">):</span>
<a name="line-4333"></a>            <span class="c1"># binary stream: open file, BytesIO</span>
<a name="line-4334"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-4335"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-4336"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-4337"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"binary stream is not seekable"</span><span class="p">)</span>
<a name="line-4338"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_file</span>
<a name="line-4339"></a>            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-4340"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_file</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-4341"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_close</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-4342"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">:</span>
<a name="line-4343"></a>                <span class="k">try</span><span class="p">:</span>
<a name="line-4344"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">_dir</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
<a name="line-4345"></a>                <span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
<a name="line-4346"></a>                    <span class="bp">self</span><span class="o">.</span><span class="n">_name</span> <span class="o">=</span> <span class="s2">"Unnamed binary stream"</span>
<a name="line-4347"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-4348"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_mode</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">mode</span>
<a name="line-4349"></a>            <span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
<a name="line-4350"></a>                <span class="k">pass</span>
<a name="line-4351"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-4352"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"The first parameter must be a file name, "</span>
<a name="line-4353"></a>                             <span class="s2">"seekable binary stream, or FileHandle"</span><span class="p">)</span>
<a name="line-4354"></a>
<a name="line-4355"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span><span class="p">:</span>
<a name="line-4356"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_offset</span><span class="p">)</span>
<a name="line-4357"></a>
<a name="line-4358"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-4359"></a>            <span class="n">pos</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-4360"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_offset</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-4361"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-4362"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-4363"></a>
<a name="line-4364"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-4365"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">fileno</span><span class="p">()</span>
<a name="line-4366"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">is_file</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-4367"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-4368"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">is_file</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-4369"></a>
<a name="line-4370"></a>    <span class="k">def</span> <span class="nf">read</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">size</span><span class="o">=-</span><span class="mi">1</span><span class="p">):</span>
<a name="line-4371"></a>        <span class="sd">"""Read 'size' bytes from file, or until EOF is reached."""</span>
<a name="line-4372"></a>        <span class="k">if</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span><span class="p">:</span>
<a name="line-4373"></a>            <span class="n">size</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span>
<a name="line-4374"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
<a name="line-4375"></a>
<a name="line-4376"></a>    <span class="k">def</span> <span class="nf">write</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">bytestring</span><span class="p">):</span>
<a name="line-4377"></a>        <span class="sd">"""Write bytestring to file."""</span>
<a name="line-4378"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">bytestring</span><span class="p">)</span>
<a name="line-4379"></a>
<a name="line-4380"></a>    <span class="k">def</span> <span class="nf">flush</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4381"></a>        <span class="sd">"""Flush write buffers if applicable."""</span>
<a name="line-4382"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
<a name="line-4383"></a>
<a name="line-4384"></a>    <span class="k">def</span> <span class="nf">memmap_array</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">'r'</span><span class="p">,</span> <span class="n">order</span><span class="o">=</span><span class="s1">'C'</span><span class="p">):</span>
<a name="line-4385"></a>        <span class="sd">"""Return numpy.memmap of data stored in file."""</span>
<a name="line-4386"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_file</span><span class="p">:</span>
<a name="line-4387"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"Can not memory-map file without fileno"</span><span class="p">)</span>
<a name="line-4388"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">memmap</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">dtype</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="n">mode</span><span class="p">,</span>
<a name="line-4389"></a>                            <span class="n">offset</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="o">+</span> <span class="n">offset</span><span class="p">,</span>
<a name="line-4390"></a>                            <span class="n">shape</span><span class="o">=</span><span class="n">shape</span><span class="p">,</span> <span class="n">order</span><span class="o">=</span><span class="n">order</span><span class="p">)</span>
<a name="line-4391"></a>
<a name="line-4392"></a>    <span class="k">def</span> <span class="nf">read_array</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s2">""</span><span class="p">,</span> <span class="n">chunksize</span><span class="o">=</span><span class="mi">2</span><span class="o">**</span><span class="mi">25</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-4393"></a>        <span class="sd">"""Return numpy array from file.</span>
<a name="line-4394"></a>
<a name="line-4395"></a><span class="sd">        Work around numpy issue #2230, "numpy.fromfile does not accept</span>
<a name="line-4396"></a><span class="sd">        StringIO object" https://github.com/numpy/numpy/issues/2230.</span>
<a name="line-4397"></a>
<a name="line-4398"></a><span class="sd">        """</span>
<a name="line-4399"></a>        <span class="n">fh</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span>
<a name="line-4400"></a>        <span class="n">dtype</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-4401"></a>        <span class="n">size</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="k">if</span> <span class="n">count</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="n">count</span> <span class="o">*</span> <span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span>
<a name="line-4402"></a>
<a name="line-4403"></a>        <span class="k">if</span> <span class="n">out</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-4404"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-4405"></a>                <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromfile</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">sep</span><span class="p">)</span>
<a name="line-4406"></a>            <span class="k">except</span> <span class="ne">IOError</span><span class="p">:</span>
<a name="line-4407"></a>                <span class="c1"># ByteIO</span>
<a name="line-4408"></a>                <span class="n">data</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
<a name="line-4409"></a>                <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">sep</span><span class="p">)</span>
<a name="line-4410"></a>
<a name="line-4411"></a>        <span class="c1"># Read data from file in chunks and copy to output array</span>
<a name="line-4412"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="n">out</span><span class="o">.</span><span class="n">shape</span>
<a name="line-4413"></a>        <span class="n">size</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">out</span><span class="o">.</span><span class="n">nbytes</span><span class="p">,</span> <span class="n">size</span><span class="p">)</span>
<a name="line-4414"></a>        <span class="n">out</span> <span class="o">=</span> <span class="n">out</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-4415"></a>        <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-4416"></a>        <span class="k">while</span> <span class="n">size</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-4417"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="nb">min</span><span class="p">(</span><span class="n">chunksize</span><span class="p">,</span> <span class="n">size</span><span class="p">))</span>
<a name="line-4418"></a>            <span class="n">datasize</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<a name="line-4419"></a>            <span class="k">if</span> <span class="n">datasize</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-4420"></a>                <span class="k">break</span>
<a name="line-4421"></a>            <span class="n">size</span> <span class="o">-=</span> <span class="n">datasize</span>
<a name="line-4422"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-4423"></a>            <span class="n">out</span><span class="p">[</span><span class="n">index</span><span class="p">:</span><span class="n">index</span><span class="o">+</span><span class="n">data</span><span class="o">.</span><span class="n">size</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span>
<a name="line-4424"></a>            <span class="n">index</span> <span class="o">+=</span> <span class="n">data</span><span class="o">.</span><span class="n">size</span>
<a name="line-4425"></a>
<a name="line-4426"></a>        <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="s1">'flush'</span><span class="p">):</span>
<a name="line-4427"></a>            <span class="n">out</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
<a name="line-4428"></a>        <span class="k">return</span> <span class="n">out</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-4429"></a>
<a name="line-4430"></a>    <span class="k">def</span> <span class="nf">read_record</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-4431"></a>        <span class="sd">"""Return numpy record from file."""</span>
<a name="line-4432"></a>        <span class="n">rec</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">rec</span>
<a name="line-4433"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-4434"></a>            <span class="n">record</span> <span class="o">=</span> <span class="n">rec</span><span class="o">.</span><span class="n">fromfile</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-4435"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-4436"></a>            <span class="n">dtype</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-4437"></a>            <span class="k">if</span> <span class="n">shape</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-4438"></a>                <span class="n">shape</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="o">//</span> <span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span>
<a name="line-4439"></a>            <span class="n">size</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">sequence</span><span class="p">(</span><span class="n">shape</span><span class="p">))</span> <span class="o">*</span> <span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span>
<a name="line-4440"></a>            <span class="n">data</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
<a name="line-4441"></a>            <span class="n">record</span> <span class="o">=</span> <span class="n">rec</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-4442"></a>        <span class="k">return</span> <span class="n">record</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">if</span> <span class="n">shape</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">else</span> <span class="n">record</span>
<a name="line-4443"></a>
<a name="line-4444"></a>    <span class="k">def</span> <span class="nf">write_empty</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">size</span><span class="p">):</span>
<a name="line-4445"></a>        <span class="sd">"""Append size bytes to file. Position must be at end of file."""</span>
<a name="line-4446"></a>        <span class="k">if</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-4447"></a>            <span class="k">return</span>
<a name="line-4448"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">size</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-4449"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="sa">b</span><span class="s1">'</span><span class="se">\x00</span><span class="s1">'</span><span class="p">)</span>
<a name="line-4450"></a>
<a name="line-4451"></a>    <span class="k">def</span> <span class="nf">write_array</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
<a name="line-4452"></a>        <span class="sd">"""Write numpy array to binary file."""</span>
<a name="line-4453"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-4454"></a>            <span class="n">data</span><span class="o">.</span><span class="n">tofile</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="p">)</span>
<a name="line-4455"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-4456"></a>            <span class="c1"># BytesIO</span>
<a name="line-4457"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">tostring</span><span class="p">())</span>
<a name="line-4458"></a>
<a name="line-4459"></a>    <span class="k">def</span> <span class="nf">tell</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4460"></a>        <span class="sd">"""Return file's current position."""</span>
<a name="line-4461"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span>
<a name="line-4462"></a>
<a name="line-4463"></a>    <span class="k">def</span> <span class="nf">seek</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">offset</span><span class="p">,</span> <span class="n">whence</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
<a name="line-4464"></a>        <span class="sd">"""Set file's current position."""</span>
<a name="line-4465"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span><span class="p">:</span>
<a name="line-4466"></a>            <span class="k">if</span> <span class="n">whence</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-4467"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="o">+</span> <span class="n">offset</span><span class="p">,</span> <span class="n">whence</span><span class="p">)</span>
<a name="line-4468"></a>                <span class="k">return</span>
<a name="line-4469"></a>            <span class="k">elif</span> <span class="n">whence</span> <span class="o">==</span> <span class="mi">2</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-4470"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_offset</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span> <span class="o">+</span> <span class="n">offset</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<a name="line-4471"></a>                <span class="k">return</span>
<a name="line-4472"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset</span><span class="p">,</span> <span class="n">whence</span><span class="p">)</span>
<a name="line-4473"></a>
<a name="line-4474"></a>    <span class="k">def</span> <span class="nf">close</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4475"></a>        <span class="sd">"""Close file."""</span>
<a name="line-4476"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_close</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="p">:</span>
<a name="line-4477"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-4478"></a>            <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-4479"></a>
<a name="line-4480"></a>    <span class="k">def</span> <span class="fm">__enter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4481"></a>        <span class="k">return</span> <span class="bp">self</span>
<a name="line-4482"></a>
<a name="line-4483"></a>    <span class="k">def</span> <span class="fm">__exit__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">exc_type</span><span class="p">,</span> <span class="n">exc_value</span><span class="p">,</span> <span class="n">traceback</span><span class="p">):</span>
<a name="line-4484"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-4485"></a>
<a name="line-4486"></a>    <span class="k">def</span> <span class="fm">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
<a name="line-4487"></a>        <span class="sd">"""Return attribute from underlying file object."""</span>
<a name="line-4488"></a>        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">_offset</span><span class="p">:</span>
<a name="line-4489"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span>
<a name="line-4490"></a>                <span class="s2">"FileHandle: '</span><span class="si">%s</span><span class="s2">' not implemented for embedded files"</span> <span class="o">%</span> <span class="n">name</span><span class="p">)</span>
<a name="line-4491"></a>        <span class="k">return</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_fh</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
<a name="line-4492"></a>
<a name="line-4493"></a>    <span class="nd">@property</span>
<a name="line-4494"></a>    <span class="k">def</span> <span class="nf">name</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4495"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span>
<a name="line-4496"></a>
<a name="line-4497"></a>    <span class="nd">@property</span>
<a name="line-4498"></a>    <span class="k">def</span> <span class="nf">dirname</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4499"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_dir</span>
<a name="line-4500"></a>
<a name="line-4501"></a>    <span class="nd">@property</span>
<a name="line-4502"></a>    <span class="k">def</span> <span class="nf">path</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4503"></a>        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_dir</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">_name</span><span class="p">)</span>
<a name="line-4504"></a>
<a name="line-4505"></a>    <span class="nd">@property</span>
<a name="line-4506"></a>    <span class="k">def</span> <span class="nf">size</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4507"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_size</span>
<a name="line-4508"></a>
<a name="line-4509"></a>    <span class="nd">@property</span>
<a name="line-4510"></a>    <span class="k">def</span> <span class="nf">closed</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4511"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_fh</span> <span class="ow">is</span> <span class="bp">None</span>
<a name="line-4512"></a>
<a name="line-4513"></a>    <span class="nd">@property</span>
<a name="line-4514"></a>    <span class="k">def</span> <span class="nf">lock</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4515"></a>        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_lock</span>
<a name="line-4516"></a>
<a name="line-4517"></a>    <span class="nd">@lock.setter</span>
<a name="line-4518"></a>    <span class="k">def</span> <span class="nf">lock</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
<a name="line-4519"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_lock</span> <span class="o">=</span> <span class="n">threading</span><span class="o">.</span><span class="n">RLock</span><span class="p">()</span> <span class="k">if</span> <span class="n">value</span> <span class="k">else</span> <span class="n">NullContext</span><span class="p">()</span>
<a name="line-4520"></a>
<a name="line-4521"></a>
<a name="line-4522"></a><span class="k">class</span> <span class="nc">NullContext</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-4523"></a>    <span class="sd">"""Null context manager.</span>
<a name="line-4524"></a>
<a name="line-4525"></a><span class="sd">    &gt;&gt;&gt; with NullContext():</span>
<a name="line-4526"></a><span class="sd">    ...     pass</span>
<a name="line-4527"></a>
<a name="line-4528"></a><span class="sd">    """</span>
<a name="line-4529"></a>    <span class="k">def</span> <span class="fm">__enter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4530"></a>        <span class="k">return</span> <span class="bp">self</span>
<a name="line-4531"></a>
<a name="line-4532"></a>    <span class="k">def</span> <span class="fm">__exit__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">exc_type</span><span class="p">,</span> <span class="n">exc_value</span><span class="p">,</span> <span class="n">traceback</span><span class="p">):</span>
<a name="line-4533"></a>        <span class="k">pass</span>
<a name="line-4534"></a>
<a name="line-4535"></a>
<a name="line-4536"></a><span class="k">class</span> <span class="nc">OpenFileCache</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-4537"></a>    <span class="sd">"""Keep files open."""</span>
<a name="line-4538"></a>
<a name="line-4539"></a>    <span class="vm">__slots__</span> <span class="o">=</span> <span class="p">(</span><span class="s1">'files'</span><span class="p">,</span> <span class="s1">'past'</span><span class="p">,</span> <span class="s1">'lock'</span><span class="p">,</span> <span class="s1">'size'</span><span class="p">)</span>
<a name="line-4540"></a>
<a name="line-4541"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">size</span><span class="p">,</span> <span class="n">lock</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-4542"></a>        <span class="sd">"""Initialize open file cache."""</span>
<a name="line-4543"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">past</span> <span class="o">=</span> <span class="p">[]</span>  <span class="c1"># FIFO of opened files</span>
<a name="line-4544"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">files</span> <span class="o">=</span> <span class="p">{}</span>  <span class="c1"># refcounts of opened files</span>
<a name="line-4545"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">lock</span> <span class="o">=</span> <span class="n">NullContext</span><span class="p">()</span> <span class="k">if</span> <span class="n">lock</span> <span class="ow">is</span> <span class="bp">None</span> <span class="k">else</span> <span class="n">lock</span>
<a name="line-4546"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">size</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
<a name="line-4547"></a>
<a name="line-4548"></a>    <span class="k">def</span> <span class="nf">open</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">filehandle</span><span class="p">):</span>
<a name="line-4549"></a>        <span class="sd">"""Re-open file if necessary."""</span>
<a name="line-4550"></a>        <span class="k">with</span> <span class="bp">self</span><span class="o">.</span><span class="n">lock</span><span class="p">:</span>
<a name="line-4551"></a>            <span class="k">if</span> <span class="n">filehandle</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">:</span>
<a name="line-4552"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="n">filehandle</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-4553"></a>            <span class="k">elif</span> <span class="n">filehandle</span><span class="o">.</span><span class="n">closed</span><span class="p">:</span>
<a name="line-4554"></a>                <span class="n">filehandle</span><span class="o">.</span><span class="n">open</span><span class="p">()</span>
<a name="line-4555"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="n">filehandle</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-4556"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">past</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">filehandle</span><span class="p">)</span>
<a name="line-4557"></a>
<a name="line-4558"></a>    <span class="k">def</span> <span class="nf">close</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">filehandle</span><span class="p">):</span>
<a name="line-4559"></a>        <span class="sd">"""Close openend file if no longer used."""</span>
<a name="line-4560"></a>        <span class="k">with</span> <span class="bp">self</span><span class="o">.</span><span class="n">lock</span><span class="p">:</span>
<a name="line-4561"></a>            <span class="k">if</span> <span class="n">filehandle</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">:</span>
<a name="line-4562"></a>                <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="n">filehandle</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span>
<a name="line-4563"></a>                <span class="c1"># trim the file cache</span>
<a name="line-4564"></a>                <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-4565"></a>                <span class="n">size</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">past</span><span class="p">)</span>
<a name="line-4566"></a>                <span class="k">while</span> <span class="n">size</span> <span class="o">&gt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">size</span> <span class="ow">and</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">size</span><span class="p">:</span>
<a name="line-4567"></a>                    <span class="n">filehandle</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">past</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
<a name="line-4568"></a>                    <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="n">filehandle</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-4569"></a>                        <span class="n">filehandle</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-4570"></a>                        <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="n">filehandle</span><span class="p">]</span>
<a name="line-4571"></a>                        <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">past</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
<a name="line-4572"></a>                        <span class="n">size</span> <span class="o">-=</span> <span class="mi">1</span>
<a name="line-4573"></a>                    <span class="k">else</span><span class="p">:</span>
<a name="line-4574"></a>                        <span class="n">index</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-4575"></a>
<a name="line-4576"></a>    <span class="k">def</span> <span class="nf">clear</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<a name="line-4577"></a>        <span class="sd">"""Close all opened files if not in use."""</span>
<a name="line-4578"></a>        <span class="k">with</span> <span class="bp">self</span><span class="o">.</span><span class="n">lock</span><span class="p">:</span>
<a name="line-4579"></a>            <span class="k">for</span> <span class="n">filehandle</span><span class="p">,</span> <span class="n">refcount</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="o">.</span><span class="n">items</span><span class="p">()):</span>
<a name="line-4580"></a>                <span class="k">if</span> <span class="n">refcount</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-4581"></a>                    <span class="n">filehandle</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-4582"></a>                    <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="n">filehandle</span><span class="p">]</span>
<a name="line-4583"></a>                    <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">past</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">past</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">filehandle</span><span class="p">)]</span>
<a name="line-4584"></a>
<a name="line-4585"></a>
<a name="line-4586"></a><span class="k">class</span> <span class="nc">LazyConst</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-4587"></a>    <span class="sd">"""Class whose attributes are computed on first access from its methods."""</span>
<a name="line-4588"></a>    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="bp">cls</span><span class="p">):</span>
<a name="line-4589"></a>        <span class="bp">self</span><span class="o">.</span><span class="n">_cls</span> <span class="o">=</span> <span class="bp">cls</span>
<a name="line-4590"></a>        <span class="bp">self</span><span class="o">.</span><span class="vm">__doc__</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">cls</span><span class="p">,</span> <span class="s1">'__doc__'</span><span class="p">)</span>
<a name="line-4591"></a>
<a name="line-4592"></a>    <span class="k">def</span> <span class="fm">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
<a name="line-4593"></a>        <span class="n">func</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_cls</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
<a name="line-4594"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="nb">callable</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
<a name="line-4595"></a>            <span class="k">return</span> <span class="n">func</span>
<a name="line-4596"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-4597"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">func</span><span class="p">()</span>
<a name="line-4598"></a>        <span class="k">except</span> <span class="ne">TypeError</span><span class="p">:</span>
<a name="line-4599"></a>            <span class="c1"># Python 2 unbound method</span>
<a name="line-4600"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">func</span><span class="o">.</span><span class="vm">__func__</span><span class="p">()</span>
<a name="line-4601"></a>        <span class="nb">setattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
<a name="line-4602"></a>        <span class="k">return</span> <span class="n">value</span>
<a name="line-4603"></a>
<a name="line-4604"></a>
<a name="line-4605"></a><span class="nd">@LazyConst</span>
<a name="line-4606"></a><span class="k">class</span> <span class="nc">TIFF</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
<a name="line-4607"></a>    <span class="sd">"""Namespace for module constants."""</span>
<a name="line-4608"></a>
<a name="line-4609"></a>    <span class="k">def</span> <span class="nf">TAGS</span><span class="p">():</span>
<a name="line-4610"></a>        <span class="c1"># TIFF tag codes and names</span>
<a name="line-4611"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-4612"></a>            <span class="mi">254</span><span class="p">:</span> <span class="s1">'NewSubfileType'</span><span class="p">,</span>
<a name="line-4613"></a>            <span class="mi">255</span><span class="p">:</span> <span class="s1">'SubfileType'</span><span class="p">,</span>
<a name="line-4614"></a>            <span class="mi">256</span><span class="p">:</span> <span class="s1">'ImageWidth'</span><span class="p">,</span>
<a name="line-4615"></a>            <span class="mi">257</span><span class="p">:</span> <span class="s1">'ImageLength'</span><span class="p">,</span>
<a name="line-4616"></a>            <span class="mi">258</span><span class="p">:</span> <span class="s1">'BitsPerSample'</span><span class="p">,</span>
<a name="line-4617"></a>            <span class="mi">259</span><span class="p">:</span> <span class="s1">'Compression'</span><span class="p">,</span>
<a name="line-4618"></a>            <span class="mi">262</span><span class="p">:</span> <span class="s1">'PhotometricInterpretation'</span><span class="p">,</span>
<a name="line-4619"></a>            <span class="mi">263</span><span class="p">:</span> <span class="s1">'Threshholding'</span><span class="p">,</span>
<a name="line-4620"></a>            <span class="mi">264</span><span class="p">:</span> <span class="s1">'CellWidth'</span><span class="p">,</span>
<a name="line-4621"></a>            <span class="mi">265</span><span class="p">:</span> <span class="s1">'CellLength'</span><span class="p">,</span>
<a name="line-4622"></a>            <span class="mi">266</span><span class="p">:</span> <span class="s1">'FillOrder'</span><span class="p">,</span>
<a name="line-4623"></a>            <span class="mi">269</span><span class="p">:</span> <span class="s1">'DocumentName'</span><span class="p">,</span>
<a name="line-4624"></a>            <span class="mi">270</span><span class="p">:</span> <span class="s1">'ImageDescription'</span><span class="p">,</span>
<a name="line-4625"></a>            <span class="mi">271</span><span class="p">:</span> <span class="s1">'Make'</span><span class="p">,</span>
<a name="line-4626"></a>            <span class="mi">272</span><span class="p">:</span> <span class="s1">'Model'</span><span class="p">,</span>
<a name="line-4627"></a>            <span class="mi">273</span><span class="p">:</span> <span class="s1">'StripOffsets'</span><span class="p">,</span>
<a name="line-4628"></a>            <span class="mi">274</span><span class="p">:</span> <span class="s1">'Orientation'</span><span class="p">,</span>
<a name="line-4629"></a>            <span class="mi">277</span><span class="p">:</span> <span class="s1">'SamplesPerPixel'</span><span class="p">,</span>
<a name="line-4630"></a>            <span class="mi">278</span><span class="p">:</span> <span class="s1">'RowsPerStrip'</span><span class="p">,</span>
<a name="line-4631"></a>            <span class="mi">279</span><span class="p">:</span> <span class="s1">'StripByteCounts'</span><span class="p">,</span>
<a name="line-4632"></a>            <span class="mi">280</span><span class="p">:</span> <span class="s1">'MinSampleValue'</span><span class="p">,</span>
<a name="line-4633"></a>            <span class="mi">281</span><span class="p">:</span> <span class="s1">'MaxSampleValue'</span><span class="p">,</span>
<a name="line-4634"></a>            <span class="mi">282</span><span class="p">:</span> <span class="s1">'XResolution'</span><span class="p">,</span>
<a name="line-4635"></a>            <span class="mi">283</span><span class="p">:</span> <span class="s1">'YResolution'</span><span class="p">,</span>
<a name="line-4636"></a>            <span class="mi">284</span><span class="p">:</span> <span class="s1">'PlanarConfiguration'</span><span class="p">,</span>
<a name="line-4637"></a>            <span class="mi">285</span><span class="p">:</span> <span class="s1">'PageName'</span><span class="p">,</span>
<a name="line-4638"></a>            <span class="mi">286</span><span class="p">:</span> <span class="s1">'XPosition'</span><span class="p">,</span>
<a name="line-4639"></a>            <span class="mi">287</span><span class="p">:</span> <span class="s1">'YPosition'</span><span class="p">,</span>
<a name="line-4640"></a>            <span class="mi">288</span><span class="p">:</span> <span class="s1">'FreeOffsets'</span><span class="p">,</span>
<a name="line-4641"></a>            <span class="mi">289</span><span class="p">:</span> <span class="s1">'FreeByteCounts'</span><span class="p">,</span>
<a name="line-4642"></a>            <span class="mi">290</span><span class="p">:</span> <span class="s1">'GrayResponseUnit'</span><span class="p">,</span>
<a name="line-4643"></a>            <span class="mi">291</span><span class="p">:</span> <span class="s1">'GrayResponseCurve'</span><span class="p">,</span>
<a name="line-4644"></a>            <span class="mi">292</span><span class="p">:</span> <span class="s1">'T4Options'</span><span class="p">,</span>
<a name="line-4645"></a>            <span class="mi">293</span><span class="p">:</span> <span class="s1">'T6Options'</span><span class="p">,</span>
<a name="line-4646"></a>            <span class="mi">296</span><span class="p">:</span> <span class="s1">'ResolutionUnit'</span><span class="p">,</span>
<a name="line-4647"></a>            <span class="mi">297</span><span class="p">:</span> <span class="s1">'PageNumber'</span><span class="p">,</span>
<a name="line-4648"></a>            <span class="mi">300</span><span class="p">:</span> <span class="s1">'ColorResponseUnit'</span><span class="p">,</span>
<a name="line-4649"></a>            <span class="mi">301</span><span class="p">:</span> <span class="s1">'TransferFunction'</span><span class="p">,</span>
<a name="line-4650"></a>            <span class="mi">305</span><span class="p">:</span> <span class="s1">'Software'</span><span class="p">,</span>
<a name="line-4651"></a>            <span class="mi">306</span><span class="p">:</span> <span class="s1">'DateTime'</span><span class="p">,</span>
<a name="line-4652"></a>            <span class="mi">315</span><span class="p">:</span> <span class="s1">'Artist'</span><span class="p">,</span>
<a name="line-4653"></a>            <span class="mi">316</span><span class="p">:</span> <span class="s1">'HostComputer'</span><span class="p">,</span>
<a name="line-4654"></a>            <span class="mi">317</span><span class="p">:</span> <span class="s1">'Predictor'</span><span class="p">,</span>
<a name="line-4655"></a>            <span class="mi">318</span><span class="p">:</span> <span class="s1">'WhitePoint'</span><span class="p">,</span>
<a name="line-4656"></a>            <span class="mi">319</span><span class="p">:</span> <span class="s1">'PrimaryChromaticities'</span><span class="p">,</span>
<a name="line-4657"></a>            <span class="mi">320</span><span class="p">:</span> <span class="s1">'ColorMap'</span><span class="p">,</span>
<a name="line-4658"></a>            <span class="mi">321</span><span class="p">:</span> <span class="s1">'HalftoneHints'</span><span class="p">,</span>
<a name="line-4659"></a>            <span class="mi">322</span><span class="p">:</span> <span class="s1">'TileWidth'</span><span class="p">,</span>
<a name="line-4660"></a>            <span class="mi">323</span><span class="p">:</span> <span class="s1">'TileLength'</span><span class="p">,</span>
<a name="line-4661"></a>            <span class="mi">324</span><span class="p">:</span> <span class="s1">'TileOffsets'</span><span class="p">,</span>
<a name="line-4662"></a>            <span class="mi">325</span><span class="p">:</span> <span class="s1">'TileByteCounts'</span><span class="p">,</span>
<a name="line-4663"></a>            <span class="mi">326</span><span class="p">:</span> <span class="s1">'BadFaxLines'</span><span class="p">,</span>
<a name="line-4664"></a>            <span class="mi">327</span><span class="p">:</span> <span class="s1">'CleanFaxData'</span><span class="p">,</span>
<a name="line-4665"></a>            <span class="mi">328</span><span class="p">:</span> <span class="s1">'ConsecutiveBadFaxLines'</span><span class="p">,</span>
<a name="line-4666"></a>            <span class="mi">330</span><span class="p">:</span> <span class="s1">'SubIFDs'</span><span class="p">,</span>
<a name="line-4667"></a>            <span class="mi">332</span><span class="p">:</span> <span class="s1">'InkSet'</span><span class="p">,</span>
<a name="line-4668"></a>            <span class="mi">333</span><span class="p">:</span> <span class="s1">'InkNames'</span><span class="p">,</span>
<a name="line-4669"></a>            <span class="mi">334</span><span class="p">:</span> <span class="s1">'NumberOfInks'</span><span class="p">,</span>
<a name="line-4670"></a>            <span class="mi">336</span><span class="p">:</span> <span class="s1">'DotRange'</span><span class="p">,</span>
<a name="line-4671"></a>            <span class="mi">337</span><span class="p">:</span> <span class="s1">'TargetPrinter'</span><span class="p">,</span>
<a name="line-4672"></a>            <span class="mi">338</span><span class="p">:</span> <span class="s1">'ExtraSamples'</span><span class="p">,</span>
<a name="line-4673"></a>            <span class="mi">339</span><span class="p">:</span> <span class="s1">'SampleFormat'</span><span class="p">,</span>
<a name="line-4674"></a>            <span class="mi">340</span><span class="p">:</span> <span class="s1">'SMinSampleValue'</span><span class="p">,</span>
<a name="line-4675"></a>            <span class="mi">341</span><span class="p">:</span> <span class="s1">'SMaxSampleValue'</span><span class="p">,</span>
<a name="line-4676"></a>            <span class="mi">342</span><span class="p">:</span> <span class="s1">'TransferRange'</span><span class="p">,</span>
<a name="line-4677"></a>            <span class="mi">343</span><span class="p">:</span> <span class="s1">'ClipPath'</span><span class="p">,</span>
<a name="line-4678"></a>            <span class="mi">344</span><span class="p">:</span> <span class="s1">'XClipPathUnits'</span><span class="p">,</span>
<a name="line-4679"></a>            <span class="mi">345</span><span class="p">:</span> <span class="s1">'YClipPathUnits'</span><span class="p">,</span>
<a name="line-4680"></a>            <span class="mi">346</span><span class="p">:</span> <span class="s1">'Indexed'</span><span class="p">,</span>
<a name="line-4681"></a>            <span class="mi">347</span><span class="p">:</span> <span class="s1">'JPEGTables'</span><span class="p">,</span>
<a name="line-4682"></a>            <span class="mi">351</span><span class="p">:</span> <span class="s1">'OPIProxy'</span><span class="p">,</span>
<a name="line-4683"></a>            <span class="mi">400</span><span class="p">:</span> <span class="s1">'GlobalParametersIFD'</span><span class="p">,</span>
<a name="line-4684"></a>            <span class="mi">401</span><span class="p">:</span> <span class="s1">'ProfileType'</span><span class="p">,</span>
<a name="line-4685"></a>            <span class="mi">402</span><span class="p">:</span> <span class="s1">'FaxProfile'</span><span class="p">,</span>
<a name="line-4686"></a>            <span class="mi">403</span><span class="p">:</span> <span class="s1">'CodingMethods'</span><span class="p">,</span>
<a name="line-4687"></a>            <span class="mi">404</span><span class="p">:</span> <span class="s1">'VersionYear'</span><span class="p">,</span>
<a name="line-4688"></a>            <span class="mi">405</span><span class="p">:</span> <span class="s1">'ModeNumber'</span><span class="p">,</span>
<a name="line-4689"></a>            <span class="mi">433</span><span class="p">:</span> <span class="s1">'Decode'</span><span class="p">,</span>
<a name="line-4690"></a>            <span class="mi">434</span><span class="p">:</span> <span class="s1">'DefaultImageColor'</span><span class="p">,</span>
<a name="line-4691"></a>            <span class="mi">435</span><span class="p">:</span> <span class="s1">'T82Options'</span><span class="p">,</span>
<a name="line-4692"></a>            <span class="mi">512</span><span class="p">:</span> <span class="s1">'JPEGProc'</span><span class="p">,</span>
<a name="line-4693"></a>            <span class="mi">513</span><span class="p">:</span> <span class="s1">'JPEGInterchangeFormat'</span><span class="p">,</span>
<a name="line-4694"></a>            <span class="mi">514</span><span class="p">:</span> <span class="s1">'JPEGInterchangeFormatLength'</span><span class="p">,</span>
<a name="line-4695"></a>            <span class="mi">515</span><span class="p">:</span> <span class="s1">'JPEGRestartInterval'</span><span class="p">,</span>
<a name="line-4696"></a>            <span class="mi">517</span><span class="p">:</span> <span class="s1">'JPEGLosslessPredictors'</span><span class="p">,</span>
<a name="line-4697"></a>            <span class="mi">518</span><span class="p">:</span> <span class="s1">'JPEGPointTransforms'</span><span class="p">,</span>
<a name="line-4698"></a>            <span class="mi">519</span><span class="p">:</span> <span class="s1">'JPEGQTables'</span><span class="p">,</span>
<a name="line-4699"></a>            <span class="mi">520</span><span class="p">:</span> <span class="s1">'JPEGDCTables'</span><span class="p">,</span>
<a name="line-4700"></a>            <span class="mi">521</span><span class="p">:</span> <span class="s1">'JPEGACTables'</span><span class="p">,</span>
<a name="line-4701"></a>            <span class="mi">529</span><span class="p">:</span> <span class="s1">'YCbCrCoefficients'</span><span class="p">,</span>
<a name="line-4702"></a>            <span class="mi">530</span><span class="p">:</span> <span class="s1">'YCbCrSubSampling'</span><span class="p">,</span>
<a name="line-4703"></a>            <span class="mi">531</span><span class="p">:</span> <span class="s1">'YCbCrPositioning'</span><span class="p">,</span>
<a name="line-4704"></a>            <span class="mi">532</span><span class="p">:</span> <span class="s1">'ReferenceBlackWhite'</span><span class="p">,</span>
<a name="line-4705"></a>            <span class="mi">559</span><span class="p">:</span> <span class="s1">'StripRowCounts'</span><span class="p">,</span>
<a name="line-4706"></a>            <span class="mi">700</span><span class="p">:</span> <span class="s1">'XMP'</span><span class="p">,</span>
<a name="line-4707"></a>            <span class="mi">4864</span><span class="p">:</span> <span class="s1">'AndorId'</span><span class="p">,</span>  <span class="c1"># TODO: Andor Technology 4864 - 5030</span>
<a name="line-4708"></a>            <span class="mi">4869</span><span class="p">:</span> <span class="s1">'AndorTemperature'</span><span class="p">,</span>
<a name="line-4709"></a>            <span class="mi">4876</span><span class="p">:</span> <span class="s1">'AndorExposureTime'</span><span class="p">,</span>
<a name="line-4710"></a>            <span class="mi">4878</span><span class="p">:</span> <span class="s1">'AndorKineticCycleTime'</span><span class="p">,</span>
<a name="line-4711"></a>            <span class="mi">4879</span><span class="p">:</span> <span class="s1">'AndorAccumulations'</span><span class="p">,</span>
<a name="line-4712"></a>            <span class="mi">4881</span><span class="p">:</span> <span class="s1">'AndorAcquisitionCycleTime'</span><span class="p">,</span>
<a name="line-4713"></a>            <span class="mi">4882</span><span class="p">:</span> <span class="s1">'AndorReadoutTime'</span><span class="p">,</span>
<a name="line-4714"></a>            <span class="mi">4884</span><span class="p">:</span> <span class="s1">'AndorPhotonCounting'</span><span class="p">,</span>
<a name="line-4715"></a>            <span class="mi">4885</span><span class="p">:</span> <span class="s1">'AndorEmDacLevel'</span><span class="p">,</span>
<a name="line-4716"></a>            <span class="mi">4890</span><span class="p">:</span> <span class="s1">'AndorFrames'</span><span class="p">,</span>
<a name="line-4717"></a>            <span class="mi">4896</span><span class="p">:</span> <span class="s1">'AndorHorizontalFlip'</span><span class="p">,</span>
<a name="line-4718"></a>            <span class="mi">4897</span><span class="p">:</span> <span class="s1">'AndorVerticalFlip'</span><span class="p">,</span>
<a name="line-4719"></a>            <span class="mi">4898</span><span class="p">:</span> <span class="s1">'AndorClockwise'</span><span class="p">,</span>
<a name="line-4720"></a>            <span class="mi">4899</span><span class="p">:</span> <span class="s1">'AndorCounterClockwise'</span><span class="p">,</span>
<a name="line-4721"></a>            <span class="mi">4904</span><span class="p">:</span> <span class="s1">'AndorVerticalClockVoltage'</span><span class="p">,</span>
<a name="line-4722"></a>            <span class="mi">4905</span><span class="p">:</span> <span class="s1">'AndorVerticalShiftSpeed'</span><span class="p">,</span>
<a name="line-4723"></a>            <span class="mi">4907</span><span class="p">:</span> <span class="s1">'AndorPreAmpSetting'</span><span class="p">,</span>
<a name="line-4724"></a>            <span class="mi">4908</span><span class="p">:</span> <span class="s1">'AndorCameraSerial'</span><span class="p">,</span>
<a name="line-4725"></a>            <span class="mi">4911</span><span class="p">:</span> <span class="s1">'AndorActualTemperature'</span><span class="p">,</span>
<a name="line-4726"></a>            <span class="mi">4912</span><span class="p">:</span> <span class="s1">'AndorBaselineClamp'</span><span class="p">,</span>
<a name="line-4727"></a>            <span class="mi">4913</span><span class="p">:</span> <span class="s1">'AndorPrescans'</span><span class="p">,</span>
<a name="line-4728"></a>            <span class="mi">4914</span><span class="p">:</span> <span class="s1">'AndorModel'</span><span class="p">,</span>
<a name="line-4729"></a>            <span class="mi">4915</span><span class="p">:</span> <span class="s1">'AndorChipSizeX'</span><span class="p">,</span>
<a name="line-4730"></a>            <span class="mi">4916</span><span class="p">:</span> <span class="s1">'AndorChipSizeY'</span><span class="p">,</span>
<a name="line-4731"></a>            <span class="mi">4944</span><span class="p">:</span> <span class="s1">'AndorBaselineOffset'</span><span class="p">,</span>
<a name="line-4732"></a>            <span class="mi">4966</span><span class="p">:</span> <span class="s1">'AndorSoftwareVersion'</span><span class="p">,</span>
<a name="line-4733"></a>            <span class="c1"># Private tags</span>
<a name="line-4734"></a>            <span class="mi">32781</span><span class="p">:</span> <span class="s1">'ImageID'</span><span class="p">,</span>
<a name="line-4735"></a>            <span class="mi">32932</span><span class="p">:</span> <span class="s1">'WangAnnotation'</span><span class="p">,</span>
<a name="line-4736"></a>            <span class="mi">32995</span><span class="p">:</span> <span class="s1">'Matteing'</span><span class="p">,</span>
<a name="line-4737"></a>            <span class="mi">32996</span><span class="p">:</span> <span class="s1">'DataType'</span><span class="p">,</span>
<a name="line-4738"></a>            <span class="mi">32997</span><span class="p">:</span> <span class="s1">'ImageDepth'</span><span class="p">,</span>
<a name="line-4739"></a>            <span class="mi">32998</span><span class="p">:</span> <span class="s1">'TileDepth'</span><span class="p">,</span>
<a name="line-4740"></a>            <span class="mi">33300</span><span class="p">:</span> <span class="s1">'ImageFullWidth'</span><span class="p">,</span>
<a name="line-4741"></a>            <span class="mi">33301</span><span class="p">:</span> <span class="s1">'ImageFullLength'</span><span class="p">,</span>
<a name="line-4742"></a>            <span class="mi">33302</span><span class="p">:</span> <span class="s1">'TextureFormat'</span><span class="p">,</span>
<a name="line-4743"></a>            <span class="mi">33303</span><span class="p">:</span> <span class="s1">'TextureWrapModes'</span><span class="p">,</span>
<a name="line-4744"></a>            <span class="mi">33304</span><span class="p">:</span> <span class="s1">'FieldOfViewCotangent'</span><span class="p">,</span>
<a name="line-4745"></a>            <span class="mi">33305</span><span class="p">:</span> <span class="s1">'MatrixWorldToScreen'</span><span class="p">,</span>
<a name="line-4746"></a>            <span class="mi">33306</span><span class="p">:</span> <span class="s1">'MatrixWorldToCamera'</span><span class="p">,</span>
<a name="line-4747"></a>            <span class="mi">33421</span><span class="p">:</span> <span class="s1">'CFARepeatPatternDim'</span><span class="p">,</span>
<a name="line-4748"></a>            <span class="mi">33422</span><span class="p">:</span> <span class="s1">'CFAPattern'</span><span class="p">,</span>
<a name="line-4749"></a>            <span class="mi">33432</span><span class="p">:</span> <span class="s1">'Copyright'</span><span class="p">,</span>
<a name="line-4750"></a>            <span class="mi">33445</span><span class="p">:</span> <span class="s1">'MDFileTag'</span><span class="p">,</span>
<a name="line-4751"></a>            <span class="mi">33446</span><span class="p">:</span> <span class="s1">'MDScalePixel'</span><span class="p">,</span>
<a name="line-4752"></a>            <span class="mi">33447</span><span class="p">:</span> <span class="s1">'MDColorTable'</span><span class="p">,</span>
<a name="line-4753"></a>            <span class="mi">33448</span><span class="p">:</span> <span class="s1">'MDLabName'</span><span class="p">,</span>
<a name="line-4754"></a>            <span class="mi">33449</span><span class="p">:</span> <span class="s1">'MDSampleInfo'</span><span class="p">,</span>
<a name="line-4755"></a>            <span class="mi">33450</span><span class="p">:</span> <span class="s1">'MDPrepDate'</span><span class="p">,</span>
<a name="line-4756"></a>            <span class="mi">33451</span><span class="p">:</span> <span class="s1">'MDPrepTime'</span><span class="p">,</span>
<a name="line-4757"></a>            <span class="mi">33452</span><span class="p">:</span> <span class="s1">'MDFileUnits'</span><span class="p">,</span>
<a name="line-4758"></a>            <span class="mi">33550</span><span class="p">:</span> <span class="s1">'ModelPixelScaleTag'</span><span class="p">,</span>
<a name="line-4759"></a>            <span class="mi">33628</span><span class="p">:</span> <span class="s1">'UIC1tag'</span><span class="p">,</span>  <span class="c1"># Metamorph  Universal Imaging Corp STK</span>
<a name="line-4760"></a>            <span class="mi">33629</span><span class="p">:</span> <span class="s1">'UIC2tag'</span><span class="p">,</span>
<a name="line-4761"></a>            <span class="mi">33630</span><span class="p">:</span> <span class="s1">'UIC3tag'</span><span class="p">,</span>
<a name="line-4762"></a>            <span class="mi">33631</span><span class="p">:</span> <span class="s1">'UIC4tag'</span><span class="p">,</span>
<a name="line-4763"></a>            <span class="mi">33723</span><span class="p">:</span> <span class="s1">'IPTC'</span><span class="p">,</span>
<a name="line-4764"></a>            <span class="mi">33918</span><span class="p">:</span> <span class="s1">'INGRPacketDataTag'</span><span class="p">,</span>
<a name="line-4765"></a>            <span class="mi">33919</span><span class="p">:</span> <span class="s1">'INGRFlagRegisters'</span><span class="p">,</span>
<a name="line-4766"></a>            <span class="mi">33920</span><span class="p">:</span> <span class="s1">'IrasBTransformationMatrix'</span><span class="p">,</span>
<a name="line-4767"></a>            <span class="mi">33922</span><span class="p">:</span> <span class="s1">'ModelTiepointTag'</span><span class="p">,</span>
<a name="line-4768"></a>            <span class="mi">34118</span><span class="p">:</span> <span class="s1">'CZ_SEM'</span><span class="p">,</span>  <span class="c1"># Zeiss SEM</span>
<a name="line-4769"></a>            <span class="mi">34122</span><span class="p">:</span> <span class="s1">'IPLAB'</span><span class="p">,</span>  <span class="c1"># number of images</span>
<a name="line-4770"></a>            <span class="mi">34264</span><span class="p">:</span> <span class="s1">'ModelTransformationTag'</span><span class="p">,</span>
<a name="line-4771"></a>            <span class="mi">34361</span><span class="p">:</span> <span class="s1">'MM_Header'</span><span class="p">,</span>
<a name="line-4772"></a>            <span class="mi">34362</span><span class="p">:</span> <span class="s1">'MM_Stamp'</span><span class="p">,</span>
<a name="line-4773"></a>            <span class="mi">34363</span><span class="p">:</span> <span class="s1">'MM_Unknown'</span><span class="p">,</span>
<a name="line-4774"></a>            <span class="mi">34377</span><span class="p">:</span> <span class="s1">'Photoshop'</span><span class="p">,</span>
<a name="line-4775"></a>            <span class="mi">34386</span><span class="p">:</span> <span class="s1">'MM_UserBlock'</span><span class="p">,</span>
<a name="line-4776"></a>            <span class="mi">34412</span><span class="p">:</span> <span class="s1">'CZ_LSMINFO'</span><span class="p">,</span>
<a name="line-4777"></a>            <span class="mi">34665</span><span class="p">:</span> <span class="s1">'ExifIFD'</span><span class="p">,</span>
<a name="line-4778"></a>            <span class="mi">34675</span><span class="p">:</span> <span class="s1">'ICCProfile'</span><span class="p">,</span>
<a name="line-4779"></a>            <span class="mi">34680</span><span class="p">:</span> <span class="s1">'FEI_SFEG'</span><span class="p">,</span>  <span class="c1">#</span>
<a name="line-4780"></a>            <span class="mi">34682</span><span class="p">:</span> <span class="s1">'FEI_HELIOS'</span><span class="p">,</span>  <span class="c1">#</span>
<a name="line-4781"></a>            <span class="mi">34683</span><span class="p">:</span> <span class="s1">'FEI_TITAN'</span><span class="p">,</span>  <span class="c1">#</span>
<a name="line-4782"></a>            <span class="mi">34732</span><span class="p">:</span> <span class="s1">'ImageLayer'</span><span class="p">,</span>
<a name="line-4783"></a>            <span class="mi">34735</span><span class="p">:</span> <span class="s1">'GeoKeyDirectoryTag'</span><span class="p">,</span>
<a name="line-4784"></a>            <span class="mi">34736</span><span class="p">:</span> <span class="s1">'GeoDoubleParamsTag'</span><span class="p">,</span>
<a name="line-4785"></a>            <span class="mi">34737</span><span class="p">:</span> <span class="s1">'GeoAsciiParamsTag'</span><span class="p">,</span>
<a name="line-4786"></a>            <span class="mi">34853</span><span class="p">:</span> <span class="s1">'GPSIFD'</span><span class="p">,</span>
<a name="line-4787"></a>            <span class="mi">34908</span><span class="p">:</span> <span class="s1">'HylaFAXFaxRecvParams'</span><span class="p">,</span>
<a name="line-4788"></a>            <span class="mi">34909</span><span class="p">:</span> <span class="s1">'HylaFAXFaxSubAddress'</span><span class="p">,</span>
<a name="line-4789"></a>            <span class="mi">34910</span><span class="p">:</span> <span class="s1">'HylaFAXFaxRecvTime'</span><span class="p">,</span>
<a name="line-4790"></a>            <span class="mi">34911</span><span class="p">:</span> <span class="s1">'FaxDcs'</span><span class="p">,</span>
<a name="line-4791"></a>            <span class="mi">37439</span><span class="p">:</span> <span class="s1">'StoNits'</span><span class="p">,</span>
<a name="line-4792"></a>            <span class="mi">37679</span><span class="p">:</span> <span class="s1">'MODI_TXT'</span><span class="p">,</span>  <span class="c1"># Microsoft Office Document Imaging</span>
<a name="line-4793"></a>            <span class="mi">37681</span><span class="p">:</span> <span class="s1">'MODI_POS'</span><span class="p">,</span>
<a name="line-4794"></a>            <span class="mi">37680</span><span class="p">:</span> <span class="s1">'MODI_OLE'</span><span class="p">,</span>
<a name="line-4795"></a>            <span class="mi">37706</span><span class="p">:</span> <span class="s1">'TVIPS'</span><span class="p">,</span>  <span class="c1"># offset to TemData structure</span>
<a name="line-4796"></a>            <span class="mi">37707</span><span class="p">:</span> <span class="s1">'TVIPS1'</span><span class="p">,</span>
<a name="line-4797"></a>            <span class="mi">37708</span><span class="p">:</span> <span class="s1">'TVIPS2'</span><span class="p">,</span>  <span class="c1"># same TemData structure as undefined</span>
<a name="line-4798"></a>            <span class="mi">37724</span><span class="p">:</span> <span class="s1">'ImageSourceData'</span><span class="p">,</span>
<a name="line-4799"></a>            <span class="mi">40001</span><span class="p">:</span> <span class="s1">'MC_IpWinScal'</span><span class="p">,</span>  <span class="c1"># Media Cybernetics</span>
<a name="line-4800"></a>            <span class="mi">40100</span><span class="p">:</span> <span class="s1">'MC_IdOld'</span><span class="p">,</span>
<a name="line-4801"></a>            <span class="mi">40965</span><span class="p">:</span> <span class="s1">'InteroperabilityIFD'</span><span class="p">,</span>
<a name="line-4802"></a>            <span class="mi">42112</span><span class="p">:</span> <span class="s1">'GDAL_METADATA'</span><span class="p">,</span>
<a name="line-4803"></a>            <span class="mi">42113</span><span class="p">:</span> <span class="s1">'GDAL_NODATA'</span><span class="p">,</span>
<a name="line-4804"></a>            <span class="mi">43314</span><span class="p">:</span> <span class="s1">'NIHImageHeader'</span><span class="p">,</span>
<a name="line-4805"></a>            <span class="mi">50215</span><span class="p">:</span> <span class="s1">'OceScanjobDescription'</span><span class="p">,</span>
<a name="line-4806"></a>            <span class="mi">50216</span><span class="p">:</span> <span class="s1">'OceApplicationSelector'</span><span class="p">,</span>
<a name="line-4807"></a>            <span class="mi">50217</span><span class="p">:</span> <span class="s1">'OceIdentificationNumber'</span><span class="p">,</span>
<a name="line-4808"></a>            <span class="mi">50218</span><span class="p">:</span> <span class="s1">'OceImageLogicCharacteristics'</span><span class="p">,</span>
<a name="line-4809"></a>            <span class="mi">50288</span><span class="p">:</span> <span class="s1">'MC_Id'</span><span class="p">,</span>  <span class="c1"># Media Cybernetics</span>
<a name="line-4810"></a>            <span class="mi">50289</span><span class="p">:</span> <span class="s1">'MC_XYPosition'</span><span class="p">,</span>
<a name="line-4811"></a>            <span class="mi">50290</span><span class="p">:</span> <span class="s1">'MC_ZPosition'</span><span class="p">,</span>
<a name="line-4812"></a>            <span class="mi">50291</span><span class="p">:</span> <span class="s1">'MC_XYCalibration'</span><span class="p">,</span>
<a name="line-4813"></a>            <span class="mi">50292</span><span class="p">:</span> <span class="s1">'MC_LensCharacteristics'</span><span class="p">,</span>
<a name="line-4814"></a>            <span class="mi">50293</span><span class="p">:</span> <span class="s1">'MC_ChannelName'</span><span class="p">,</span>
<a name="line-4815"></a>            <span class="mi">50294</span><span class="p">:</span> <span class="s1">'MC_ExcitationWavelength'</span><span class="p">,</span>
<a name="line-4816"></a>            <span class="mi">50295</span><span class="p">:</span> <span class="s1">'MC_TimeStamp'</span><span class="p">,</span>
<a name="line-4817"></a>            <span class="mi">50296</span><span class="p">:</span> <span class="s1">'MC_FrameProperties'</span><span class="p">,</span>
<a name="line-4818"></a>            <span class="mi">50706</span><span class="p">:</span> <span class="s1">'DNGVersion'</span><span class="p">,</span>
<a name="line-4819"></a>            <span class="mi">50707</span><span class="p">:</span> <span class="s1">'DNGBackwardVersion'</span><span class="p">,</span>
<a name="line-4820"></a>            <span class="mi">50708</span><span class="p">:</span> <span class="s1">'UniqueCameraModel'</span><span class="p">,</span>
<a name="line-4821"></a>            <span class="mi">50709</span><span class="p">:</span> <span class="s1">'LocalizedCameraModel'</span><span class="p">,</span>
<a name="line-4822"></a>            <span class="mi">50710</span><span class="p">:</span> <span class="s1">'CFAPlaneColor'</span><span class="p">,</span>
<a name="line-4823"></a>            <span class="mi">50711</span><span class="p">:</span> <span class="s1">'CFALayout'</span><span class="p">,</span>
<a name="line-4824"></a>            <span class="mi">50712</span><span class="p">:</span> <span class="s1">'LinearizationTable'</span><span class="p">,</span>
<a name="line-4825"></a>            <span class="mi">50713</span><span class="p">:</span> <span class="s1">'BlackLevelRepeatDim'</span><span class="p">,</span>
<a name="line-4826"></a>            <span class="mi">50714</span><span class="p">:</span> <span class="s1">'BlackLevel'</span><span class="p">,</span>
<a name="line-4827"></a>            <span class="mi">50715</span><span class="p">:</span> <span class="s1">'BlackLevelDeltaH'</span><span class="p">,</span>
<a name="line-4828"></a>            <span class="mi">50716</span><span class="p">:</span> <span class="s1">'BlackLevelDeltaV'</span><span class="p">,</span>
<a name="line-4829"></a>            <span class="mi">50717</span><span class="p">:</span> <span class="s1">'WhiteLevel'</span><span class="p">,</span>
<a name="line-4830"></a>            <span class="mi">50718</span><span class="p">:</span> <span class="s1">'DefaultScale'</span><span class="p">,</span>
<a name="line-4831"></a>            <span class="mi">50719</span><span class="p">:</span> <span class="s1">'DefaultCropOrigin'</span><span class="p">,</span>
<a name="line-4832"></a>            <span class="mi">50720</span><span class="p">:</span> <span class="s1">'DefaultCropSize'</span><span class="p">,</span>
<a name="line-4833"></a>            <span class="mi">50721</span><span class="p">:</span> <span class="s1">'ColorMatrix1'</span><span class="p">,</span>
<a name="line-4834"></a>            <span class="mi">50722</span><span class="p">:</span> <span class="s1">'ColorMatrix2'</span><span class="p">,</span>
<a name="line-4835"></a>            <span class="mi">50723</span><span class="p">:</span> <span class="s1">'CameraCalibration1'</span><span class="p">,</span>
<a name="line-4836"></a>            <span class="mi">50724</span><span class="p">:</span> <span class="s1">'CameraCalibration2'</span><span class="p">,</span>
<a name="line-4837"></a>            <span class="mi">50725</span><span class="p">:</span> <span class="s1">'ReductionMatrix1'</span><span class="p">,</span>
<a name="line-4838"></a>            <span class="mi">50726</span><span class="p">:</span> <span class="s1">'ReductionMatrix2'</span><span class="p">,</span>
<a name="line-4839"></a>            <span class="mi">50727</span><span class="p">:</span> <span class="s1">'AnalogBalance'</span><span class="p">,</span>
<a name="line-4840"></a>            <span class="mi">50728</span><span class="p">:</span> <span class="s1">'AsShotNeutral'</span><span class="p">,</span>
<a name="line-4841"></a>            <span class="mi">50729</span><span class="p">:</span> <span class="s1">'AsShotWhiteXY'</span><span class="p">,</span>
<a name="line-4842"></a>            <span class="mi">50730</span><span class="p">:</span> <span class="s1">'BaselineExposure'</span><span class="p">,</span>
<a name="line-4843"></a>            <span class="mi">50731</span><span class="p">:</span> <span class="s1">'BaselineNoise'</span><span class="p">,</span>
<a name="line-4844"></a>            <span class="mi">50732</span><span class="p">:</span> <span class="s1">'BaselineSharpness'</span><span class="p">,</span>
<a name="line-4845"></a>            <span class="mi">50733</span><span class="p">:</span> <span class="s1">'BayerGreenSplit'</span><span class="p">,</span>
<a name="line-4846"></a>            <span class="mi">50734</span><span class="p">:</span> <span class="s1">'LinearResponseLimit'</span><span class="p">,</span>
<a name="line-4847"></a>            <span class="mi">50735</span><span class="p">:</span> <span class="s1">'CameraSerialNumber'</span><span class="p">,</span>
<a name="line-4848"></a>            <span class="mi">50736</span><span class="p">:</span> <span class="s1">'LensInfo'</span><span class="p">,</span>
<a name="line-4849"></a>            <span class="mi">50737</span><span class="p">:</span> <span class="s1">'ChromaBlurRadius'</span><span class="p">,</span>
<a name="line-4850"></a>            <span class="mi">50738</span><span class="p">:</span> <span class="s1">'AntiAliasStrength'</span><span class="p">,</span>
<a name="line-4851"></a>            <span class="mi">50739</span><span class="p">:</span> <span class="s1">'ShadowScale'</span><span class="p">,</span>
<a name="line-4852"></a>            <span class="mi">50740</span><span class="p">:</span> <span class="s1">'DNGPrivateData'</span><span class="p">,</span>
<a name="line-4853"></a>            <span class="mi">50741</span><span class="p">:</span> <span class="s1">'MakerNoteSafety'</span><span class="p">,</span>
<a name="line-4854"></a>            <span class="mi">50778</span><span class="p">:</span> <span class="s1">'CalibrationIlluminant1'</span><span class="p">,</span>
<a name="line-4855"></a>            <span class="mi">50779</span><span class="p">:</span> <span class="s1">'CalibrationIlluminant2'</span><span class="p">,</span>
<a name="line-4856"></a>            <span class="mi">50780</span><span class="p">:</span> <span class="s1">'BestQualityScale'</span><span class="p">,</span>
<a name="line-4857"></a>            <span class="mi">50781</span><span class="p">:</span> <span class="s1">'RawDataUniqueID'</span><span class="p">,</span>
<a name="line-4858"></a>            <span class="mi">50784</span><span class="p">:</span> <span class="s1">'AliasLayerMetadata'</span><span class="p">,</span>
<a name="line-4859"></a>            <span class="mi">50827</span><span class="p">:</span> <span class="s1">'OriginalRawFileName'</span><span class="p">,</span>
<a name="line-4860"></a>            <span class="mi">50828</span><span class="p">:</span> <span class="s1">'OriginalRawFileData'</span><span class="p">,</span>
<a name="line-4861"></a>            <span class="mi">50829</span><span class="p">:</span> <span class="s1">'ActiveArea'</span><span class="p">,</span>
<a name="line-4862"></a>            <span class="mi">50830</span><span class="p">:</span> <span class="s1">'MaskedAreas'</span><span class="p">,</span>
<a name="line-4863"></a>            <span class="mi">50831</span><span class="p">:</span> <span class="s1">'AsShotICCProfile'</span><span class="p">,</span>
<a name="line-4864"></a>            <span class="mi">50832</span><span class="p">:</span> <span class="s1">'AsShotPreProfileMatrix'</span><span class="p">,</span>
<a name="line-4865"></a>            <span class="mi">50833</span><span class="p">:</span> <span class="s1">'CurrentICCProfile'</span><span class="p">,</span>
<a name="line-4866"></a>            <span class="mi">50834</span><span class="p">:</span> <span class="s1">'CurrentPreProfileMatrix'</span><span class="p">,</span>
<a name="line-4867"></a>            <span class="mi">50838</span><span class="p">:</span> <span class="s1">'IJMetadataByteCounts'</span><span class="p">,</span>
<a name="line-4868"></a>            <span class="mi">50839</span><span class="p">:</span> <span class="s1">'IJMetadata'</span><span class="p">,</span>
<a name="line-4869"></a>            <span class="mi">51023</span><span class="p">:</span> <span class="s1">'FibicsXML'</span><span class="p">,</span>  <span class="c1">#</span>
<a name="line-4870"></a>            <span class="mi">51123</span><span class="p">:</span> <span class="s1">'MicroManagerMetadata'</span><span class="p">,</span>
<a name="line-4871"></a>            <span class="mi">65200</span><span class="p">:</span> <span class="s1">'FlexXML'</span><span class="p">,</span>  <span class="c1">#</span>
<a name="line-4872"></a>            <span class="mi">65563</span><span class="p">:</span> <span class="s1">'PerSample'</span><span class="p">,</span>
<a name="line-4873"></a>        <span class="p">}</span>
<a name="line-4874"></a>
<a name="line-4875"></a>    <span class="k">def</span> <span class="nf">TAG_NAMES</span><span class="p">():</span>
<a name="line-4876"></a>        <span class="k">return</span> <span class="p">{</span><span class="n">v</span><span class="p">:</span> <span class="n">c</span> <span class="k">for</span> <span class="n">c</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAGS</span><span class="o">.</span><span class="n">items</span><span class="p">()}</span>
<a name="line-4877"></a>
<a name="line-4878"></a>    <span class="k">def</span> <span class="nf">TAG_READERS</span><span class="p">():</span>
<a name="line-4879"></a>        <span class="c1"># Map TIFF tag codes to import functions</span>
<a name="line-4880"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-4881"></a>            <span class="mi">320</span><span class="p">:</span> <span class="n">read_colormap</span><span class="p">,</span>
<a name="line-4882"></a>            <span class="mi">700</span><span class="p">:</span> <span class="n">read_bytes</span><span class="p">,</span>  <span class="c1"># read_utf8,</span>
<a name="line-4883"></a>            <span class="mi">34377</span><span class="p">:</span> <span class="n">read_numpy</span><span class="p">,</span>
<a name="line-4884"></a>            <span class="mi">33723</span><span class="p">:</span> <span class="n">read_bytes</span><span class="p">,</span>
<a name="line-4885"></a>            <span class="mi">34675</span><span class="p">:</span> <span class="n">read_bytes</span><span class="p">,</span>
<a name="line-4886"></a>            <span class="mi">33628</span><span class="p">:</span> <span class="n">read_uic1tag</span><span class="p">,</span>  <span class="c1"># Universal Imaging Corp STK</span>
<a name="line-4887"></a>            <span class="mi">33629</span><span class="p">:</span> <span class="n">read_uic2tag</span><span class="p">,</span>
<a name="line-4888"></a>            <span class="mi">33630</span><span class="p">:</span> <span class="n">read_uic3tag</span><span class="p">,</span>
<a name="line-4889"></a>            <span class="mi">33631</span><span class="p">:</span> <span class="n">read_uic4tag</span><span class="p">,</span>
<a name="line-4890"></a>            <span class="mi">34118</span><span class="p">:</span> <span class="n">read_cz_sem</span><span class="p">,</span>  <span class="c1"># Carl Zeiss SEM</span>
<a name="line-4891"></a>            <span class="mi">34361</span><span class="p">:</span> <span class="n">read_mm_header</span><span class="p">,</span>  <span class="c1"># Olympus FluoView</span>
<a name="line-4892"></a>            <span class="mi">34362</span><span class="p">:</span> <span class="n">read_mm_stamp</span><span class="p">,</span>
<a name="line-4893"></a>            <span class="mi">34363</span><span class="p">:</span> <span class="n">read_numpy</span><span class="p">,</span>  <span class="c1"># MM_Unknown</span>
<a name="line-4894"></a>            <span class="mi">34386</span><span class="p">:</span> <span class="n">read_numpy</span><span class="p">,</span>  <span class="c1"># MM_UserBlock</span>
<a name="line-4895"></a>            <span class="mi">34412</span><span class="p">:</span> <span class="n">read_cz_lsminfo</span><span class="p">,</span>  <span class="c1"># Carl Zeiss LSM</span>
<a name="line-4896"></a>            <span class="mi">34680</span><span class="p">:</span> <span class="n">read_fei_metadata</span><span class="p">,</span>  <span class="c1"># S-FEG</span>
<a name="line-4897"></a>            <span class="mi">34682</span><span class="p">:</span> <span class="n">read_fei_metadata</span><span class="p">,</span>  <span class="c1"># Helios NanoLab</span>
<a name="line-4898"></a>            <span class="mi">37706</span><span class="p">:</span> <span class="n">read_tvips_header</span><span class="p">,</span>  <span class="c1"># TVIPS EMMENU</span>
<a name="line-4899"></a>            <span class="mi">43314</span><span class="p">:</span> <span class="n">read_nih_image_header</span><span class="p">,</span>
<a name="line-4900"></a>            <span class="c1"># 40001: read_bytes,</span>
<a name="line-4901"></a>            <span class="mi">40100</span><span class="p">:</span> <span class="n">read_bytes</span><span class="p">,</span>
<a name="line-4902"></a>            <span class="mi">50288</span><span class="p">:</span> <span class="n">read_bytes</span><span class="p">,</span>
<a name="line-4903"></a>            <span class="mi">50296</span><span class="p">:</span> <span class="n">read_bytes</span><span class="p">,</span>
<a name="line-4904"></a>            <span class="mi">50839</span><span class="p">:</span> <span class="n">read_bytes</span><span class="p">,</span>
<a name="line-4905"></a>            <span class="mi">51123</span><span class="p">:</span> <span class="n">read_json</span><span class="p">,</span>
<a name="line-4906"></a>            <span class="mi">34665</span><span class="p">:</span> <span class="n">read_exif_ifd</span><span class="p">,</span>
<a name="line-4907"></a>            <span class="mi">34853</span><span class="p">:</span> <span class="n">read_gps_ifd</span><span class="p">,</span>
<a name="line-4908"></a>            <span class="mi">40965</span><span class="p">:</span> <span class="n">read_interoperability_ifd</span>
<a name="line-4909"></a>        <span class="p">}</span>
<a name="line-4910"></a>
<a name="line-4911"></a>    <span class="k">def</span> <span class="nf">TAG_TUPLE</span><span class="p">():</span>
<a name="line-4912"></a>        <span class="c1"># Tags whose values must be stored as tuples</span>
<a name="line-4913"></a>        <span class="k">return</span> <span class="nb">frozenset</span><span class="p">((</span><span class="mi">273</span><span class="p">,</span> <span class="mi">279</span><span class="p">,</span> <span class="mi">324</span><span class="p">,</span> <span class="mi">325</span><span class="p">,</span> <span class="mi">530</span><span class="p">,</span> <span class="mi">531</span><span class="p">))</span>
<a name="line-4914"></a>
<a name="line-4915"></a>    <span class="k">def</span> <span class="nf">TAG_ATTRIBUTES</span><span class="p">():</span>
<a name="line-4916"></a>        <span class="c1">#  Map tag codes to TiffPage attribute names</span>
<a name="line-4917"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-4918"></a>            <span class="s1">'ImageWidth'</span><span class="p">:</span> <span class="s1">'imagewidth'</span><span class="p">,</span>
<a name="line-4919"></a>            <span class="s1">'ImageLength'</span><span class="p">:</span> <span class="s1">'imagelength'</span><span class="p">,</span>
<a name="line-4920"></a>            <span class="s1">'BitsPerSample'</span><span class="p">:</span> <span class="s1">'bitspersample'</span><span class="p">,</span>
<a name="line-4921"></a>            <span class="s1">'Compression'</span><span class="p">:</span> <span class="s1">'compression'</span><span class="p">,</span>
<a name="line-4922"></a>            <span class="s1">'PlanarConfiguration'</span><span class="p">:</span> <span class="s1">'planarconfig'</span><span class="p">,</span>
<a name="line-4923"></a>            <span class="s1">'FillOrder'</span><span class="p">:</span> <span class="s1">'fillorder'</span><span class="p">,</span>
<a name="line-4924"></a>            <span class="s1">'PhotometricInterpretation'</span><span class="p">:</span> <span class="s1">'photometric'</span><span class="p">,</span>
<a name="line-4925"></a>            <span class="s1">'ColorMap'</span><span class="p">:</span> <span class="s1">'colormap'</span><span class="p">,</span>
<a name="line-4926"></a>            <span class="s1">'ImageDescription'</span><span class="p">:</span> <span class="s1">'description'</span><span class="p">,</span>
<a name="line-4927"></a>            <span class="s1">'ImageDescription1'</span><span class="p">:</span> <span class="s1">'description1'</span><span class="p">,</span>
<a name="line-4928"></a>            <span class="s1">'SamplesPerPixel'</span><span class="p">:</span> <span class="s1">'samplesperpixel'</span><span class="p">,</span>
<a name="line-4929"></a>            <span class="s1">'RowsPerStrip'</span><span class="p">:</span> <span class="s1">'rowsperstrip'</span><span class="p">,</span>
<a name="line-4930"></a>            <span class="s1">'Software'</span><span class="p">:</span> <span class="s1">'software'</span><span class="p">,</span>
<a name="line-4931"></a>            <span class="s1">'Predictor'</span><span class="p">:</span> <span class="s1">'predictor'</span><span class="p">,</span>
<a name="line-4932"></a>            <span class="s1">'TileWidth'</span><span class="p">:</span> <span class="s1">'tilewidth'</span><span class="p">,</span>
<a name="line-4933"></a>            <span class="s1">'TileLength'</span><span class="p">:</span> <span class="s1">'tilelength'</span><span class="p">,</span>
<a name="line-4934"></a>            <span class="s1">'ExtraSamples'</span><span class="p">:</span> <span class="s1">'extrasamples'</span><span class="p">,</span>
<a name="line-4935"></a>            <span class="s1">'SampleFormat'</span><span class="p">:</span> <span class="s1">'sampleformat'</span><span class="p">,</span>
<a name="line-4936"></a>            <span class="s1">'ImageDepth'</span><span class="p">:</span> <span class="s1">'imagedepth'</span><span class="p">,</span>
<a name="line-4937"></a>            <span class="s1">'TileDepth'</span><span class="p">:</span> <span class="s1">'tiledepth'</span><span class="p">,</span>
<a name="line-4938"></a>        <span class="p">}</span>
<a name="line-4939"></a>
<a name="line-4940"></a>    <span class="k">def</span> <span class="nf">TAG_ENUM</span><span class="p">():</span>
<a name="line-4941"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-4942"></a>            <span class="c1"># 254: TIFF.FILETYPE,</span>
<a name="line-4943"></a>            <span class="mi">255</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">OFILETYPE</span><span class="p">,</span>
<a name="line-4944"></a>            <span class="mi">259</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">COMPRESSION</span><span class="p">,</span>
<a name="line-4945"></a>            <span class="mi">262</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span><span class="p">,</span>
<a name="line-4946"></a>            <span class="mi">263</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">THRESHHOLD</span><span class="p">,</span>
<a name="line-4947"></a>            <span class="mi">266</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">FILLORDER</span><span class="p">,</span>
<a name="line-4948"></a>            <span class="mi">274</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">ORIENTATION</span><span class="p">,</span>
<a name="line-4949"></a>            <span class="mi">284</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PLANARCONFIG</span><span class="p">,</span>
<a name="line-4950"></a>            <span class="mi">290</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">GRAYRESPONSEUNIT</span><span class="p">,</span>
<a name="line-4951"></a>            <span class="c1"># 292: TIFF.GROUP3OPT,</span>
<a name="line-4952"></a>            <span class="c1"># 293: TIFF.GROUP4OPT,</span>
<a name="line-4953"></a>            <span class="mi">296</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">RESUNIT</span><span class="p">,</span>
<a name="line-4954"></a>            <span class="mi">300</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">COLORRESPONSEUNIT</span><span class="p">,</span>
<a name="line-4955"></a>            <span class="mi">317</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PREDICTOR</span><span class="p">,</span>
<a name="line-4956"></a>            <span class="mi">338</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">EXTRASAMPLE</span><span class="p">,</span>
<a name="line-4957"></a>            <span class="mi">339</span><span class="p">:</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">SAMPLEFORMAT</span><span class="p">,</span>
<a name="line-4958"></a>            <span class="c1"># 512: TIFF.JPEGPROC,</span>
<a name="line-4959"></a>            <span class="c1"># 531: TIFF.YCBCRPOSITION,</span>
<a name="line-4960"></a>        <span class="p">}</span>
<a name="line-4961"></a>
<a name="line-4962"></a>    <span class="k">def</span> <span class="nf">FILETYPE</span><span class="p">():</span>
<a name="line-4963"></a>        <span class="k">class</span> <span class="nc">FILETYPE</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntFlag</span><span class="p">):</span>
<a name="line-4964"></a>            <span class="c1"># Python 3.6 only</span>
<a name="line-4965"></a>            <span class="n">UNDEFINED</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-4966"></a>            <span class="n">REDUCEDIMAGE</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-4967"></a>            <span class="n">PAGE</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-4968"></a>            <span class="n">MASK</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-4969"></a>        <span class="k">return</span> <span class="n">FILETYPE</span>
<a name="line-4970"></a>
<a name="line-4971"></a>    <span class="k">def</span> <span class="nf">OFILETYPE</span><span class="p">():</span>
<a name="line-4972"></a>        <span class="k">class</span> <span class="nc">OFILETYPE</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-4973"></a>            <span class="n">UNDEFINED</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-4974"></a>            <span class="n">IMAGE</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-4975"></a>            <span class="n">REDUCEDIMAGE</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-4976"></a>            <span class="n">PAGE</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-4977"></a>        <span class="k">return</span> <span class="n">OFILETYPE</span>
<a name="line-4978"></a>
<a name="line-4979"></a>    <span class="k">def</span> <span class="nf">COMPRESSION</span><span class="p">():</span>
<a name="line-4980"></a>        <span class="k">class</span> <span class="nc">COMPRESSION</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-4981"></a>            <span class="n">NONE</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1"># Uncompressed</span>
<a name="line-4982"></a>            <span class="n">CCITTRLE</span> <span class="o">=</span> <span class="mi">2</span>  <span class="c1"># CCITT 1D</span>
<a name="line-4983"></a>            <span class="n">CCITT_T4</span> <span class="o">=</span> <span class="mi">3</span>  <span class="c1"># 'T4/Group 3 Fax',</span>
<a name="line-4984"></a>            <span class="n">CCITT_T6</span> <span class="o">=</span> <span class="mi">4</span>  <span class="c1"># 'T6/Group 4 Fax',</span>
<a name="line-4985"></a>            <span class="n">LZW</span> <span class="o">=</span> <span class="mi">5</span>
<a name="line-4986"></a>            <span class="n">OJPEG</span> <span class="o">=</span> <span class="mi">6</span>  <span class="c1"># old-style JPEG</span>
<a name="line-4987"></a>            <span class="n">JPEG</span> <span class="o">=</span> <span class="mi">7</span>
<a name="line-4988"></a>            <span class="n">ADOBE_DEFLATE</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-4989"></a>            <span class="n">JBIG_BW</span> <span class="o">=</span> <span class="mi">9</span>
<a name="line-4990"></a>            <span class="n">JBIG_COLOR</span> <span class="o">=</span> <span class="mi">10</span>
<a name="line-4991"></a>            <span class="n">JPEG_99</span> <span class="o">=</span> <span class="mi">99</span>
<a name="line-4992"></a>            <span class="n">KODAK_262</span> <span class="o">=</span> <span class="mi">262</span>
<a name="line-4993"></a>            <span class="n">NEXT</span> <span class="o">=</span> <span class="mi">32766</span>
<a name="line-4994"></a>            <span class="n">SONY_ARW</span> <span class="o">=</span> <span class="mi">32767</span>
<a name="line-4995"></a>            <span class="n">PACKED_RAW</span> <span class="o">=</span> <span class="mi">32769</span>
<a name="line-4996"></a>            <span class="n">SAMSUNG_SRW</span> <span class="o">=</span> <span class="mi">32770</span>
<a name="line-4997"></a>            <span class="n">CCIRLEW</span> <span class="o">=</span> <span class="mi">32771</span>
<a name="line-4998"></a>            <span class="n">SAMSUNG_SRW2</span> <span class="o">=</span> <span class="mi">32772</span>
<a name="line-4999"></a>            <span class="n">PACKBITS</span> <span class="o">=</span> <span class="mi">32773</span>
<a name="line-5000"></a>            <span class="n">THUNDERSCAN</span> <span class="o">=</span> <span class="mi">32809</span>
<a name="line-5001"></a>            <span class="n">IT8CTPAD</span> <span class="o">=</span> <span class="mi">32895</span>
<a name="line-5002"></a>            <span class="n">IT8LW</span> <span class="o">=</span> <span class="mi">32896</span>
<a name="line-5003"></a>            <span class="n">IT8MP</span> <span class="o">=</span> <span class="mi">32897</span>
<a name="line-5004"></a>            <span class="n">IT8BL</span> <span class="o">=</span> <span class="mi">32898</span>
<a name="line-5005"></a>            <span class="n">PIXARFILM</span> <span class="o">=</span> <span class="mi">32908</span>
<a name="line-5006"></a>            <span class="n">PIXARLOG</span> <span class="o">=</span> <span class="mi">32909</span>
<a name="line-5007"></a>            <span class="n">DEFLATE</span> <span class="o">=</span> <span class="mi">32946</span>
<a name="line-5008"></a>            <span class="n">DCS</span> <span class="o">=</span> <span class="mi">32947</span>
<a name="line-5009"></a>            <span class="n">APERIO_JP2000_YCBC</span> <span class="o">=</span> <span class="mi">33003</span>  <span class="c1"># Leica Aperio</span>
<a name="line-5010"></a>            <span class="n">APERIO_JP2000_RGB</span> <span class="o">=</span> <span class="mi">33005</span>  <span class="c1"># Leica Aperio</span>
<a name="line-5011"></a>            <span class="n">JBIG</span> <span class="o">=</span> <span class="mi">34661</span>
<a name="line-5012"></a>            <span class="n">SGILOG</span> <span class="o">=</span> <span class="mi">34676</span>
<a name="line-5013"></a>            <span class="n">SGILOG24</span> <span class="o">=</span> <span class="mi">34677</span>
<a name="line-5014"></a>            <span class="n">JPEG2000</span> <span class="o">=</span> <span class="mi">34712</span>
<a name="line-5015"></a>            <span class="n">NIKON_NEF</span> <span class="o">=</span> <span class="mi">34713</span>
<a name="line-5016"></a>            <span class="n">JBIG2</span> <span class="o">=</span> <span class="mi">34715</span>
<a name="line-5017"></a>            <span class="n">MDI_BINARY</span> <span class="o">=</span> <span class="mi">34718</span>  <span class="c1"># 'Microsoft Document Imaging</span>
<a name="line-5018"></a>            <span class="n">MDI_PROGRESSIVE</span> <span class="o">=</span> <span class="mi">34719</span>  <span class="c1"># 'Microsoft Document Imaging</span>
<a name="line-5019"></a>            <span class="n">MDI_VECTOR</span> <span class="o">=</span> <span class="mi">34720</span>  <span class="c1"># 'Microsoft Document Imaging</span>
<a name="line-5020"></a>            <span class="n">JPEG_LOSSY</span> <span class="o">=</span> <span class="mi">34892</span>
<a name="line-5021"></a>            <span class="n">LZMA</span> <span class="o">=</span> <span class="mi">34925</span>
<a name="line-5022"></a>            <span class="n">OPS_PNG</span> <span class="o">=</span> <span class="mi">34933</span>  <span class="c1"># Objective Pathology Services</span>
<a name="line-5023"></a>            <span class="n">OPS_JPEGXR</span> <span class="o">=</span> <span class="mi">34934</span>  <span class="c1"># Objective Pathology Services</span>
<a name="line-5024"></a>            <span class="n">KODAK_DCR</span> <span class="o">=</span> <span class="mi">65000</span>
<a name="line-5025"></a>            <span class="n">PENTAX_PEF</span> <span class="o">=</span> <span class="mi">65535</span>
<a name="line-5026"></a>            <span class="c1"># def __bool__(self): return self != 1  # Python 3.6 only</span>
<a name="line-5027"></a>        <span class="k">return</span> <span class="n">COMPRESSION</span>
<a name="line-5028"></a>
<a name="line-5029"></a>    <span class="k">def</span> <span class="nf">PHOTOMETRIC</span><span class="p">():</span>
<a name="line-5030"></a>        <span class="k">class</span> <span class="nc">PHOTOMETRIC</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5031"></a>            <span class="n">MINISWHITE</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-5032"></a>            <span class="n">MINISBLACK</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5033"></a>            <span class="n">RGB</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5034"></a>            <span class="n">PALETTE</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5035"></a>            <span class="n">MASK</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-5036"></a>            <span class="n">SEPARATED</span> <span class="o">=</span> <span class="mi">5</span>  <span class="c1"># CMYK</span>
<a name="line-5037"></a>            <span class="n">YCBCR</span> <span class="o">=</span> <span class="mi">6</span>
<a name="line-5038"></a>            <span class="n">CIELAB</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-5039"></a>            <span class="n">ICCLAB</span> <span class="o">=</span> <span class="mi">9</span>
<a name="line-5040"></a>            <span class="n">ITULAB</span> <span class="o">=</span> <span class="mi">10</span>
<a name="line-5041"></a>            <span class="n">CFA</span> <span class="o">=</span> <span class="mi">32803</span>  <span class="c1"># Color Filter Array</span>
<a name="line-5042"></a>            <span class="n">LOGL</span> <span class="o">=</span> <span class="mi">32844</span>
<a name="line-5043"></a>            <span class="n">LOGLUV</span> <span class="o">=</span> <span class="mi">32845</span>
<a name="line-5044"></a>            <span class="n">LINEAR_RAW</span> <span class="o">=</span> <span class="mi">34892</span>
<a name="line-5045"></a>        <span class="k">return</span> <span class="n">PHOTOMETRIC</span>
<a name="line-5046"></a>
<a name="line-5047"></a>    <span class="k">def</span> <span class="nf">THRESHHOLD</span><span class="p">():</span>
<a name="line-5048"></a>        <span class="k">class</span> <span class="nc">THRESHHOLD</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5049"></a>            <span class="n">BILEVEL</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5050"></a>            <span class="n">HALFTONE</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5051"></a>            <span class="n">ERRORDIFFUSE</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5052"></a>        <span class="k">return</span> <span class="n">THRESHHOLD</span>
<a name="line-5053"></a>
<a name="line-5054"></a>    <span class="k">def</span> <span class="nf">FILLORDER</span><span class="p">():</span>
<a name="line-5055"></a>        <span class="k">class</span> <span class="nc">FILLORDER</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5056"></a>            <span class="n">MSB2LSB</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5057"></a>            <span class="n">LSB2MSB</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5058"></a>        <span class="k">return</span> <span class="n">FILLORDER</span>
<a name="line-5059"></a>
<a name="line-5060"></a>    <span class="k">def</span> <span class="nf">ORIENTATION</span><span class="p">():</span>
<a name="line-5061"></a>        <span class="k">class</span> <span class="nc">ORIENTATION</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5062"></a>            <span class="n">TOPLEFT</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5063"></a>            <span class="n">TOPRIGHT</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5064"></a>            <span class="n">BOTRIGHT</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5065"></a>            <span class="n">BOTLEFT</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-5066"></a>            <span class="n">LEFTTOP</span> <span class="o">=</span> <span class="mi">5</span>
<a name="line-5067"></a>            <span class="n">RIGHTTOP</span> <span class="o">=</span> <span class="mi">6</span>
<a name="line-5068"></a>            <span class="n">RIGHTBOT</span> <span class="o">=</span> <span class="mi">7</span>
<a name="line-5069"></a>            <span class="n">LEFTBOT</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-5070"></a>        <span class="k">return</span> <span class="n">ORIENTATION</span>
<a name="line-5071"></a>
<a name="line-5072"></a>    <span class="k">def</span> <span class="nf">PLANARCONFIG</span><span class="p">():</span>
<a name="line-5073"></a>        <span class="k">class</span> <span class="nc">PLANARCONFIG</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5074"></a>            <span class="n">CONTIG</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5075"></a>            <span class="n">SEPARATE</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5076"></a>        <span class="k">return</span> <span class="n">PLANARCONFIG</span>
<a name="line-5077"></a>
<a name="line-5078"></a>    <span class="k">def</span> <span class="nf">GRAYRESPONSEUNIT</span><span class="p">():</span>
<a name="line-5079"></a>        <span class="k">class</span> <span class="nc">GRAYRESPONSEUNIT</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5080"></a>            <span class="n">_10S</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5081"></a>            <span class="n">_100S</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5082"></a>            <span class="n">_1000S</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5083"></a>            <span class="n">_10000S</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-5084"></a>            <span class="n">_100000S</span> <span class="o">=</span> <span class="mi">5</span>
<a name="line-5085"></a>        <span class="k">return</span> <span class="n">GRAYRESPONSEUNIT</span>
<a name="line-5086"></a>
<a name="line-5087"></a>    <span class="k">def</span> <span class="nf">GROUP4OPT</span><span class="p">():</span>
<a name="line-5088"></a>        <span class="k">class</span> <span class="nc">GROUP4OPT</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5089"></a>            <span class="n">UNCOMPRESSED</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5090"></a>        <span class="k">return</span> <span class="n">GROUP4OPT</span>
<a name="line-5091"></a>
<a name="line-5092"></a>    <span class="k">def</span> <span class="nf">RESUNIT</span><span class="p">():</span>
<a name="line-5093"></a>        <span class="k">class</span> <span class="nc">RESUNIT</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5094"></a>            <span class="n">NONE</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5095"></a>            <span class="n">INCH</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5096"></a>            <span class="n">CENTIMETER</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5097"></a>            <span class="c1"># def __bool__(self): return self != 1  # Python 3.6 only</span>
<a name="line-5098"></a>        <span class="k">return</span> <span class="n">RESUNIT</span>
<a name="line-5099"></a>
<a name="line-5100"></a>    <span class="k">def</span> <span class="nf">COLORRESPONSEUNIT</span><span class="p">():</span>
<a name="line-5101"></a>        <span class="k">class</span> <span class="nc">COLORRESPONSEUNIT</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5102"></a>            <span class="n">_10S</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5103"></a>            <span class="n">_100S</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5104"></a>            <span class="n">_1000S</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5105"></a>            <span class="n">_10000S</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-5106"></a>            <span class="n">_100000S</span> <span class="o">=</span> <span class="mi">5</span>
<a name="line-5107"></a>        <span class="k">return</span> <span class="n">COLORRESPONSEUNIT</span>
<a name="line-5108"></a>
<a name="line-5109"></a>    <span class="k">def</span> <span class="nf">PREDICTOR</span><span class="p">():</span>
<a name="line-5110"></a>        <span class="k">class</span> <span class="nc">PREDICTOR</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5111"></a>            <span class="n">NONE</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5112"></a>            <span class="n">HORIZONTAL</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5113"></a>            <span class="n">FLOATINGPOINT</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5114"></a>            <span class="c1"># def __bool__(self): return self != 1  # Python 3.6 only</span>
<a name="line-5115"></a>        <span class="k">return</span> <span class="n">PREDICTOR</span>
<a name="line-5116"></a>
<a name="line-5117"></a>    <span class="k">def</span> <span class="nf">EXTRASAMPLE</span><span class="p">():</span>
<a name="line-5118"></a>        <span class="k">class</span> <span class="nc">EXTRASAMPLE</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5119"></a>            <span class="n">UNSPECIFIED</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-5120"></a>            <span class="n">ASSOCALPHA</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5121"></a>            <span class="n">UNASSALPHA</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5122"></a>        <span class="k">return</span> <span class="n">EXTRASAMPLE</span>
<a name="line-5123"></a>
<a name="line-5124"></a>    <span class="k">def</span> <span class="nf">SAMPLEFORMAT</span><span class="p">():</span>
<a name="line-5125"></a>        <span class="k">class</span> <span class="nc">SAMPLEFORMAT</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5126"></a>            <span class="n">UINT</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5127"></a>            <span class="n">INT</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5128"></a>            <span class="n">IEEEFP</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5129"></a>            <span class="n">VOID</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-5130"></a>            <span class="n">COMPLEXINT</span> <span class="o">=</span> <span class="mi">5</span>
<a name="line-5131"></a>            <span class="n">COMPLEXIEEEFP</span> <span class="o">=</span> <span class="mi">6</span>
<a name="line-5132"></a>        <span class="k">return</span> <span class="n">SAMPLEFORMAT</span>
<a name="line-5133"></a>
<a name="line-5134"></a>    <span class="k">def</span> <span class="nf">DATATYPES</span><span class="p">():</span>
<a name="line-5135"></a>        <span class="k">class</span> <span class="nc">DATATYPES</span><span class="p">(</span><span class="n">enum</span><span class="o">.</span><span class="n">IntEnum</span><span class="p">):</span>
<a name="line-5136"></a>            <span class="n">NOTYPE</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-5137"></a>            <span class="n">BYTE</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-5138"></a>            <span class="n">ASCII</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-5139"></a>            <span class="n">SHORT</span> <span class="o">=</span> <span class="mi">3</span>
<a name="line-5140"></a>            <span class="n">LONG</span> <span class="o">=</span> <span class="mi">4</span>
<a name="line-5141"></a>            <span class="n">RATIONAL</span> <span class="o">=</span> <span class="mi">5</span>
<a name="line-5142"></a>            <span class="n">SBYTE</span> <span class="o">=</span> <span class="mi">6</span>
<a name="line-5143"></a>            <span class="n">UNDEFINED</span> <span class="o">=</span> <span class="mi">7</span>
<a name="line-5144"></a>            <span class="n">SSHORT</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-5145"></a>            <span class="n">SLONG</span> <span class="o">=</span> <span class="mi">9</span>
<a name="line-5146"></a>            <span class="n">SRATIONAL</span> <span class="o">=</span> <span class="mi">10</span>
<a name="line-5147"></a>            <span class="n">FLOAT</span> <span class="o">=</span> <span class="mi">11</span>
<a name="line-5148"></a>            <span class="n">DOUBLE</span> <span class="o">=</span> <span class="mi">12</span>
<a name="line-5149"></a>            <span class="n">IFD</span> <span class="o">=</span> <span class="mi">13</span>
<a name="line-5150"></a>            <span class="n">UNICODE</span> <span class="o">=</span> <span class="mi">14</span>
<a name="line-5151"></a>            <span class="n">COMPLEX</span> <span class="o">=</span> <span class="mi">15</span>
<a name="line-5152"></a>            <span class="n">LONG8</span> <span class="o">=</span> <span class="mi">16</span>
<a name="line-5153"></a>            <span class="n">SLONG8</span> <span class="o">=</span> <span class="mi">17</span>
<a name="line-5154"></a>            <span class="n">IFD8</span> <span class="o">=</span> <span class="mi">18</span>
<a name="line-5155"></a>        <span class="k">return</span> <span class="n">DATATYPES</span>
<a name="line-5156"></a>
<a name="line-5157"></a>    <span class="k">def</span> <span class="nf">DATA_FORMATS</span><span class="p">():</span>
<a name="line-5158"></a>        <span class="c1"># Map TIFF DATATYPES to Python struct formats</span>
<a name="line-5159"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5160"></a>            <span class="mi">1</span><span class="p">:</span> <span class="s1">'1B'</span><span class="p">,</span>   <span class="c1"># BYTE 8-bit unsigned integer.</span>
<a name="line-5161"></a>            <span class="mi">2</span><span class="p">:</span> <span class="s1">'1s'</span><span class="p">,</span>   <span class="c1"># ASCII 8-bit byte that contains a 7-bit ASCII code;</span>
<a name="line-5162"></a>                       <span class="c1">#   the last byte must be NULL (binary zero).</span>
<a name="line-5163"></a>            <span class="mi">3</span><span class="p">:</span> <span class="s1">'1H'</span><span class="p">,</span>   <span class="c1"># SHORT 16-bit (2-byte) unsigned integer</span>
<a name="line-5164"></a>            <span class="mi">4</span><span class="p">:</span> <span class="s1">'1I'</span><span class="p">,</span>   <span class="c1"># LONG 32-bit (4-byte) unsigned integer.</span>
<a name="line-5165"></a>            <span class="mi">5</span><span class="p">:</span> <span class="s1">'2I'</span><span class="p">,</span>   <span class="c1"># RATIONAL Two LONGs: the first represents the numerator</span>
<a name="line-5166"></a>                       <span class="c1">#   of a fraction; the second, the denominator.</span>
<a name="line-5167"></a>            <span class="mi">6</span><span class="p">:</span> <span class="s1">'1b'</span><span class="p">,</span>   <span class="c1"># SBYTE An 8-bit signed (twos-complement) integer.</span>
<a name="line-5168"></a>            <span class="mi">7</span><span class="p">:</span> <span class="s1">'1p'</span><span class="p">,</span>   <span class="c1"># UNDEFINED An 8-bit byte that may contain anything,</span>
<a name="line-5169"></a>                       <span class="c1">#   depending on the definition of the field.</span>
<a name="line-5170"></a>            <span class="mi">8</span><span class="p">:</span> <span class="s1">'1h'</span><span class="p">,</span>   <span class="c1"># SSHORT A 16-bit (2-byte) signed (twos-complement)</span>
<a name="line-5171"></a>                       <span class="c1">#   integer.</span>
<a name="line-5172"></a>            <span class="mi">9</span><span class="p">:</span> <span class="s1">'1i'</span><span class="p">,</span>   <span class="c1"># SLONG A 32-bit (4-byte) signed (twos-complement)</span>
<a name="line-5173"></a>                       <span class="c1">#   integer.</span>
<a name="line-5174"></a>            <span class="mi">10</span><span class="p">:</span> <span class="s1">'2i'</span><span class="p">,</span>  <span class="c1"># SRATIONAL Two SLONGs: the first represents the</span>
<a name="line-5175"></a>                       <span class="c1">#   numerator of a fraction, the second the denominator.</span>
<a name="line-5176"></a>            <span class="mi">11</span><span class="p">:</span> <span class="s1">'1f'</span><span class="p">,</span>  <span class="c1"># FLOAT Single precision (4-byte) IEEE format.</span>
<a name="line-5177"></a>            <span class="mi">12</span><span class="p">:</span> <span class="s1">'1d'</span><span class="p">,</span>  <span class="c1"># DOUBLE Double precision (8-byte) IEEE format.</span>
<a name="line-5178"></a>            <span class="mi">13</span><span class="p">:</span> <span class="s1">'1I'</span><span class="p">,</span>  <span class="c1"># IFD unsigned 4 byte IFD offset.</span>
<a name="line-5179"></a>            <span class="c1"># 14: '',  # UNICODE</span>
<a name="line-5180"></a>            <span class="c1"># 15: '',  # COMPLEX</span>
<a name="line-5181"></a>            <span class="mi">16</span><span class="p">:</span> <span class="s1">'1Q'</span><span class="p">,</span>  <span class="c1"># LONG8 unsigned 8 byte integer (BigTiff)</span>
<a name="line-5182"></a>            <span class="mi">17</span><span class="p">:</span> <span class="s1">'1q'</span><span class="p">,</span>  <span class="c1"># SLONG8 signed 8 byte integer (BigTiff)</span>
<a name="line-5183"></a>            <span class="mi">18</span><span class="p">:</span> <span class="s1">'1Q'</span><span class="p">,</span>  <span class="c1"># IFD8 unsigned 8 byte IFD offset (BigTiff)</span>
<a name="line-5184"></a>        <span class="p">}</span>
<a name="line-5185"></a>
<a name="line-5186"></a>    <span class="k">def</span> <span class="nf">DATA_DTYPES</span><span class="p">():</span>
<a name="line-5187"></a>        <span class="c1"># Map numpy dtypes to TIFF DATATYPES</span>
<a name="line-5188"></a>        <span class="k">return</span> <span class="p">{</span><span class="s1">'B'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">'s'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">'H'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s1">'2I'</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s1">'b'</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span>
<a name="line-5189"></a>                <span class="s1">'h'</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="s1">'i'</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span> <span class="s1">'2i'</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s1">'f'</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span> <span class="s1">'d'</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span> <span class="s1">'Q'</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span> <span class="s1">'q'</span><span class="p">:</span> <span class="mi">17</span><span class="p">}</span>
<a name="line-5190"></a>
<a name="line-5191"></a>    <span class="k">def</span> <span class="nf">SAMPLE_DTYPES</span><span class="p">():</span>
<a name="line-5192"></a>        <span class="c1"># Map TIFF SampleFormats and BitsPerSample to numpy dtype</span>
<a name="line-5193"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5194"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">):</span> <span class="s1">'?'</span><span class="p">,</span>  <span class="c1"># bitmap</span>
<a name="line-5195"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">):</span> <span class="s1">'B'</span><span class="p">,</span>
<a name="line-5196"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">):</span> <span class="s1">'B'</span><span class="p">,</span>
<a name="line-5197"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span> <span class="s1">'B'</span><span class="p">,</span>
<a name="line-5198"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">):</span> <span class="s1">'B'</span><span class="p">,</span>
<a name="line-5199"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">):</span> <span class="s1">'B'</span><span class="p">,</span>
<a name="line-5200"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">):</span> <span class="s1">'B'</span><span class="p">,</span>
<a name="line-5201"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="p">):</span> <span class="s1">'B'</span><span class="p">,</span>
<a name="line-5202"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">9</span><span class="p">):</span> <span class="s1">'H'</span><span class="p">,</span>
<a name="line-5203"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="p">):</span> <span class="s1">'H'</span><span class="p">,</span>
<a name="line-5204"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">11</span><span class="p">):</span> <span class="s1">'H'</span><span class="p">,</span>
<a name="line-5205"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">12</span><span class="p">):</span> <span class="s1">'H'</span><span class="p">,</span>
<a name="line-5206"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">13</span><span class="p">):</span> <span class="s1">'H'</span><span class="p">,</span>
<a name="line-5207"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">14</span><span class="p">):</span> <span class="s1">'H'</span><span class="p">,</span>
<a name="line-5208"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">15</span><span class="p">):</span> <span class="s1">'H'</span><span class="p">,</span>
<a name="line-5209"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">16</span><span class="p">):</span> <span class="s1">'H'</span><span class="p">,</span>
<a name="line-5210"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">17</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5211"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">18</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5212"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">19</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5213"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">20</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5214"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">21</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5215"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">22</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5216"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">23</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5217"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">24</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5218"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">25</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5219"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">26</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5220"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">27</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5221"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">28</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5222"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">29</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5223"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">30</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5224"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">31</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5225"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">32</span><span class="p">):</span> <span class="s1">'I'</span><span class="p">,</span>
<a name="line-5226"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">64</span><span class="p">):</span> <span class="s1">'Q'</span><span class="p">,</span>
<a name="line-5227"></a>            <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">8</span><span class="p">):</span> <span class="s1">'b'</span><span class="p">,</span>
<a name="line-5228"></a>            <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">16</span><span class="p">):</span> <span class="s1">'h'</span><span class="p">,</span>
<a name="line-5229"></a>            <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">32</span><span class="p">):</span> <span class="s1">'i'</span><span class="p">,</span>
<a name="line-5230"></a>            <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">64</span><span class="p">):</span> <span class="s1">'q'</span><span class="p">,</span>
<a name="line-5231"></a>            <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">16</span><span class="p">):</span> <span class="s1">'e'</span><span class="p">,</span>
<a name="line-5232"></a>            <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">32</span><span class="p">):</span> <span class="s1">'f'</span><span class="p">,</span>
<a name="line-5233"></a>            <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">64</span><span class="p">):</span> <span class="s1">'d'</span><span class="p">,</span>
<a name="line-5234"></a>            <span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">64</span><span class="p">):</span> <span class="s1">'F'</span><span class="p">,</span>
<a name="line-5235"></a>            <span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">128</span><span class="p">):</span> <span class="s1">'D'</span><span class="p">,</span>
<a name="line-5236"></a>            <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">)):</span> <span class="s1">'B'</span><span class="p">,</span>
<a name="line-5237"></a>        <span class="p">}</span>
<a name="line-5238"></a>
<a name="line-5239"></a>    <span class="k">def</span> <span class="nf">DECOMPESSORS</span><span class="p">():</span>
<a name="line-5240"></a>        <span class="n">decompressors</span> <span class="o">=</span> <span class="p">{</span>
<a name="line-5241"></a>            <span class="bp">None</span><span class="p">:</span> <span class="n">identityfunc</span><span class="p">,</span>
<a name="line-5242"></a>            <span class="mi">1</span><span class="p">:</span> <span class="n">identityfunc</span><span class="p">,</span>
<a name="line-5243"></a>            <span class="mi">5</span><span class="p">:</span> <span class="n">decode_lzw</span><span class="p">,</span>
<a name="line-5244"></a>            <span class="c1"># 7: decode_jpeg,</span>
<a name="line-5245"></a>            <span class="mi">8</span><span class="p">:</span> <span class="n">zlib</span><span class="o">.</span><span class="n">decompress</span><span class="p">,</span>
<a name="line-5246"></a>            <span class="mi">32946</span><span class="p">:</span> <span class="n">zlib</span><span class="o">.</span><span class="n">decompress</span><span class="p">,</span>
<a name="line-5247"></a>            <span class="mi">32773</span><span class="p">:</span> <span class="n">decode_packbits</span><span class="p">,</span>
<a name="line-5248"></a>        <span class="p">}</span>
<a name="line-5249"></a>        <span class="k">if</span> <span class="n">lzma</span><span class="p">:</span>
<a name="line-5250"></a>            <span class="n">decompressors</span><span class="p">[</span><span class="mi">34925</span><span class="p">]</span> <span class="o">=</span> <span class="n">lzma</span><span class="o">.</span><span class="n">decompress</span>
<a name="line-5251"></a>        <span class="k">return</span> <span class="n">decompressors</span>
<a name="line-5252"></a>
<a name="line-5253"></a>    <span class="k">def</span> <span class="nf">FRAME_ATTRS</span><span class="p">():</span>
<a name="line-5254"></a>        <span class="c1"># Attributes that a TiffFrame shares with its keyframe</span>
<a name="line-5255"></a>        <span class="k">return</span> <span class="nb">set</span><span class="p">(</span><span class="s1">'shape ndim size dtype axes is_final'</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
<a name="line-5256"></a>
<a name="line-5257"></a>    <span class="k">def</span> <span class="nf">FILE_FLAGS</span><span class="p">():</span>
<a name="line-5258"></a>        <span class="c1"># TiffFile and TiffPage 'is_\*' attributes</span>
<a name="line-5259"></a>        <span class="n">exclude</span> <span class="o">=</span> <span class="nb">set</span><span class="p">(</span><span class="s1">'reduced final memmappable contiguous '</span>
<a name="line-5260"></a>                      <span class="s1">'chroma_subsampled'</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
<a name="line-5261"></a>        <span class="k">return</span> <span class="nb">set</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="mi">3</span><span class="p">:]</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="nb">dir</span><span class="p">(</span><span class="n">TiffPage</span><span class="p">)</span>
<a name="line-5262"></a>                   <span class="k">if</span> <span class="n">a</span><span class="p">[:</span><span class="mi">3</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'is_'</span> <span class="ow">and</span> <span class="n">a</span><span class="p">[</span><span class="mi">3</span><span class="p">:]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">exclude</span><span class="p">)</span>
<a name="line-5263"></a>
<a name="line-5264"></a>    <span class="k">def</span> <span class="nf">FILE_EXTENSIONS</span><span class="p">():</span>
<a name="line-5265"></a>        <span class="c1"># TIFF file extensions</span>
<a name="line-5266"></a>        <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="s1">'tif tiff ome.tif lsm stk '</span>
<a name="line-5267"></a>                     <span class="s1">'gel seq svs bif tf8 tf2 btf'</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
<a name="line-5268"></a>
<a name="line-5269"></a>    <span class="k">def</span> <span class="nf">FILEOPEN_FILTER</span><span class="p">():</span>
<a name="line-5270"></a>        <span class="c1"># String for use in Windows File Open box</span>
<a name="line-5271"></a>        <span class="k">return</span> <span class="p">[(</span><span class="s2">"</span><span class="si">%s</span><span class="s2"> files"</span> <span class="o">%</span> <span class="n">ext</span><span class="o">.</span><span class="n">upper</span><span class="p">(),</span> <span class="s2">"*.</span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">ext</span><span class="p">)</span>
<a name="line-5272"></a>                <span class="k">for</span> <span class="n">ext</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">FILE_EXTENSIONS</span><span class="p">]</span> <span class="o">+</span> <span class="p">[(</span><span class="s2">"allfiles"</span><span class="p">,</span> <span class="s2">"*"</span><span class="p">)]</span>
<a name="line-5273"></a>
<a name="line-5274"></a>    <span class="k">def</span> <span class="nf">AXES_LABELS</span><span class="p">():</span>
<a name="line-5275"></a>        <span class="c1"># TODO: is there a standard for character axes labels?</span>
<a name="line-5276"></a>        <span class="n">axes</span> <span class="o">=</span> <span class="p">{</span>
<a name="line-5277"></a>            <span class="s1">'X'</span><span class="p">:</span> <span class="s1">'width'</span><span class="p">,</span>
<a name="line-5278"></a>            <span class="s1">'Y'</span><span class="p">:</span> <span class="s1">'height'</span><span class="p">,</span>
<a name="line-5279"></a>            <span class="s1">'Z'</span><span class="p">:</span> <span class="s1">'depth'</span><span class="p">,</span>
<a name="line-5280"></a>            <span class="s1">'S'</span><span class="p">:</span> <span class="s1">'sample'</span><span class="p">,</span>  <span class="c1"># rgb(a)</span>
<a name="line-5281"></a>            <span class="s1">'I'</span><span class="p">:</span> <span class="s1">'series'</span><span class="p">,</span>  <span class="c1"># general sequence, plane, page, IFD</span>
<a name="line-5282"></a>            <span class="s1">'T'</span><span class="p">:</span> <span class="s1">'time'</span><span class="p">,</span>
<a name="line-5283"></a>            <span class="s1">'C'</span><span class="p">:</span> <span class="s1">'channel'</span><span class="p">,</span>  <span class="c1"># color, emission wavelength</span>
<a name="line-5284"></a>            <span class="s1">'A'</span><span class="p">:</span> <span class="s1">'angle'</span><span class="p">,</span>
<a name="line-5285"></a>            <span class="s1">'P'</span><span class="p">:</span> <span class="s1">'phase'</span><span class="p">,</span>  <span class="c1"># formerly F    # P is Position in LSM!</span>
<a name="line-5286"></a>            <span class="s1">'R'</span><span class="p">:</span> <span class="s1">'tile'</span><span class="p">,</span>  <span class="c1"># region, point, mosaic</span>
<a name="line-5287"></a>            <span class="s1">'H'</span><span class="p">:</span> <span class="s1">'lifetime'</span><span class="p">,</span>  <span class="c1"># histogram</span>
<a name="line-5288"></a>            <span class="s1">'E'</span><span class="p">:</span> <span class="s1">'lambda'</span><span class="p">,</span>  <span class="c1"># excitation wavelength</span>
<a name="line-5289"></a>            <span class="s1">'L'</span><span class="p">:</span> <span class="s1">'exposure'</span><span class="p">,</span>  <span class="c1"># lux</span>
<a name="line-5290"></a>            <span class="s1">'V'</span><span class="p">:</span> <span class="s1">'event'</span><span class="p">,</span>
<a name="line-5291"></a>            <span class="s1">'Q'</span><span class="p">:</span> <span class="s1">'other'</span><span class="p">,</span>
<a name="line-5292"></a>            <span class="s1">'M'</span><span class="p">:</span> <span class="s1">'mosaic'</span><span class="p">,</span>  <span class="c1"># LSM 6</span>
<a name="line-5293"></a>        <span class="p">}</span>
<a name="line-5294"></a>        <span class="n">axes</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="nb">dict</span><span class="p">((</span><span class="n">v</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">axes</span><span class="o">.</span><span class="n">items</span><span class="p">()))</span>
<a name="line-5295"></a>        <span class="k">return</span> <span class="n">axes</span>
<a name="line-5296"></a>
<a name="line-5297"></a>    <span class="k">def</span> <span class="nf">ANDOR_TAGS</span><span class="p">():</span>
<a name="line-5298"></a>        <span class="c1"># Andor Technology tags #4864 - 5030</span>
<a name="line-5299"></a>        <span class="k">return</span> <span class="nb">set</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">4864</span><span class="p">,</span> <span class="mi">5030</span><span class="p">))</span>
<a name="line-5300"></a>
<a name="line-5301"></a>    <span class="k">def</span> <span class="nf">EXIF_TAGS</span><span class="p">():</span>
<a name="line-5302"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5303"></a>            <span class="mi">33434</span><span class="p">:</span> <span class="s1">'ExposureTime'</span><span class="p">,</span>
<a name="line-5304"></a>            <span class="mi">33437</span><span class="p">:</span> <span class="s1">'FNumber'</span><span class="p">,</span>
<a name="line-5305"></a>            <span class="mi">34850</span><span class="p">:</span> <span class="s1">'ExposureProgram'</span><span class="p">,</span>
<a name="line-5306"></a>            <span class="mi">34852</span><span class="p">:</span> <span class="s1">'SpectralSensitivity'</span><span class="p">,</span>
<a name="line-5307"></a>            <span class="mi">34855</span><span class="p">:</span> <span class="s1">'ISOSpeedRatings'</span><span class="p">,</span>
<a name="line-5308"></a>            <span class="mi">34856</span><span class="p">:</span> <span class="s1">'OECF'</span><span class="p">,</span>
<a name="line-5309"></a>            <span class="mi">34858</span><span class="p">:</span> <span class="s1">'TimeZoneOffset'</span><span class="p">,</span>
<a name="line-5310"></a>            <span class="mi">34859</span><span class="p">:</span> <span class="s1">'SelfTimerMode'</span><span class="p">,</span>
<a name="line-5311"></a>            <span class="mi">34864</span><span class="p">:</span> <span class="s1">'SensitivityType'</span><span class="p">,</span>
<a name="line-5312"></a>            <span class="mi">34865</span><span class="p">:</span> <span class="s1">'StandardOutputSensitivity'</span><span class="p">,</span>
<a name="line-5313"></a>            <span class="mi">34866</span><span class="p">:</span> <span class="s1">'RecommendedExposureIndex'</span><span class="p">,</span>
<a name="line-5314"></a>            <span class="mi">34867</span><span class="p">:</span> <span class="s1">'ISOSpeed'</span><span class="p">,</span>
<a name="line-5315"></a>            <span class="mi">34868</span><span class="p">:</span> <span class="s1">'ISOSpeedLatitudeyyy'</span><span class="p">,</span>
<a name="line-5316"></a>            <span class="mi">34869</span><span class="p">:</span> <span class="s1">'ISOSpeedLatitudezzz'</span><span class="p">,</span>
<a name="line-5317"></a>            <span class="mi">36864</span><span class="p">:</span> <span class="s1">'ExifVersion'</span><span class="p">,</span>
<a name="line-5318"></a>            <span class="mi">36867</span><span class="p">:</span> <span class="s1">'DateTimeOriginal'</span><span class="p">,</span>
<a name="line-5319"></a>            <span class="mi">36868</span><span class="p">:</span> <span class="s1">'DateTimeDigitized'</span><span class="p">,</span>
<a name="line-5320"></a>            <span class="mi">36873</span><span class="p">:</span> <span class="s1">'GooglePlusUploadCode'</span><span class="p">,</span>
<a name="line-5321"></a>            <span class="mi">36880</span><span class="p">:</span> <span class="s1">'OffsetTime'</span><span class="p">,</span>
<a name="line-5322"></a>            <span class="mi">36881</span><span class="p">:</span> <span class="s1">'OffsetTimeOriginal'</span><span class="p">,</span>
<a name="line-5323"></a>            <span class="mi">36882</span><span class="p">:</span> <span class="s1">'OffsetTimeDigitized'</span><span class="p">,</span>
<a name="line-5324"></a>            <span class="mi">37121</span><span class="p">:</span> <span class="s1">'ComponentsConfiguration'</span><span class="p">,</span>
<a name="line-5325"></a>            <span class="mi">37122</span><span class="p">:</span> <span class="s1">'CompressedBitsPerPixel'</span><span class="p">,</span>
<a name="line-5326"></a>            <span class="mi">37377</span><span class="p">:</span> <span class="s1">'ShutterSpeedValue'</span><span class="p">,</span>
<a name="line-5327"></a>            <span class="mi">37378</span><span class="p">:</span> <span class="s1">'ApertureValue'</span><span class="p">,</span>
<a name="line-5328"></a>            <span class="mi">37379</span><span class="p">:</span> <span class="s1">'BrightnessValue'</span><span class="p">,</span>
<a name="line-5329"></a>            <span class="mi">37380</span><span class="p">:</span> <span class="s1">'ExposureBiasValue'</span><span class="p">,</span>
<a name="line-5330"></a>            <span class="mi">37381</span><span class="p">:</span> <span class="s1">'MaxApertureValue'</span><span class="p">,</span>
<a name="line-5331"></a>            <span class="mi">37382</span><span class="p">:</span> <span class="s1">'SubjectDistance'</span><span class="p">,</span>
<a name="line-5332"></a>            <span class="mi">37383</span><span class="p">:</span> <span class="s1">'MeteringMode'</span><span class="p">,</span>
<a name="line-5333"></a>            <span class="mi">37384</span><span class="p">:</span> <span class="s1">'LightSource'</span><span class="p">,</span>
<a name="line-5334"></a>            <span class="mi">37385</span><span class="p">:</span> <span class="s1">'Flash'</span><span class="p">,</span>
<a name="line-5335"></a>            <span class="mi">37386</span><span class="p">:</span> <span class="s1">'FocalLength'</span><span class="p">,</span>
<a name="line-5336"></a>            <span class="mi">37393</span><span class="p">:</span> <span class="s1">'ImageNumber'</span><span class="p">,</span>
<a name="line-5337"></a>            <span class="mi">37394</span><span class="p">:</span> <span class="s1">'SecurityClassification'</span><span class="p">,</span>
<a name="line-5338"></a>            <span class="mi">37395</span><span class="p">:</span> <span class="s1">'ImageHistory'</span><span class="p">,</span>
<a name="line-5339"></a>            <span class="mi">37396</span><span class="p">:</span> <span class="s1">'SubjectArea'</span><span class="p">,</span>
<a name="line-5340"></a>            <span class="mi">37500</span><span class="p">:</span> <span class="s1">'MakerNote'</span><span class="p">,</span>
<a name="line-5341"></a>            <span class="mi">37510</span><span class="p">:</span> <span class="s1">'UserComment'</span><span class="p">,</span>
<a name="line-5342"></a>            <span class="mi">37520</span><span class="p">:</span> <span class="s1">'SubsecTime'</span><span class="p">,</span>
<a name="line-5343"></a>            <span class="mi">37521</span><span class="p">:</span> <span class="s1">'SubsecTimeOriginal'</span><span class="p">,</span>
<a name="line-5344"></a>            <span class="mi">37522</span><span class="p">:</span> <span class="s1">'SubsecTimeDigitized'</span><span class="p">,</span>
<a name="line-5345"></a>            <span class="mi">37888</span><span class="p">:</span> <span class="s1">'Temperature'</span><span class="p">,</span>
<a name="line-5346"></a>            <span class="mi">37889</span><span class="p">:</span> <span class="s1">'Humidity'</span><span class="p">,</span>
<a name="line-5347"></a>            <span class="mi">37890</span><span class="p">:</span> <span class="s1">'Pressure'</span><span class="p">,</span>
<a name="line-5348"></a>            <span class="mi">37891</span><span class="p">:</span> <span class="s1">'WaterDepth'</span><span class="p">,</span>
<a name="line-5349"></a>            <span class="mi">37892</span><span class="p">:</span> <span class="s1">'Acceleration'</span><span class="p">,</span>
<a name="line-5350"></a>            <span class="mi">37893</span><span class="p">:</span> <span class="s1">'CameraElevationAngle'</span><span class="p">,</span>
<a name="line-5351"></a>            <span class="mi">40960</span><span class="p">:</span> <span class="s1">'FlashpixVersion'</span><span class="p">,</span>
<a name="line-5352"></a>            <span class="mi">40961</span><span class="p">:</span> <span class="s1">'ColorSpace'</span><span class="p">,</span>
<a name="line-5353"></a>            <span class="mi">40962</span><span class="p">:</span> <span class="s1">'PixelXDimension'</span><span class="p">,</span>
<a name="line-5354"></a>            <span class="mi">40963</span><span class="p">:</span> <span class="s1">'PixelYDimension'</span><span class="p">,</span>
<a name="line-5355"></a>            <span class="mi">40964</span><span class="p">:</span> <span class="s1">'RelatedSoundFile'</span><span class="p">,</span>
<a name="line-5356"></a>            <span class="mi">41483</span><span class="p">:</span> <span class="s1">'FlashEnergy'</span><span class="p">,</span>
<a name="line-5357"></a>            <span class="mi">41484</span><span class="p">:</span> <span class="s1">'SpatialFrequencyResponse'</span><span class="p">,</span>
<a name="line-5358"></a>            <span class="mi">41486</span><span class="p">:</span> <span class="s1">'FocalPlaneXResolution'</span><span class="p">,</span>
<a name="line-5359"></a>            <span class="mi">41487</span><span class="p">:</span> <span class="s1">'FocalPlaneYResolution'</span><span class="p">,</span>
<a name="line-5360"></a>            <span class="mi">41488</span><span class="p">:</span> <span class="s1">'FocalPlaneResolutionUnit'</span><span class="p">,</span>
<a name="line-5361"></a>            <span class="mi">41492</span><span class="p">:</span> <span class="s1">'SubjectLocation'</span><span class="p">,</span>
<a name="line-5362"></a>            <span class="mi">41493</span><span class="p">:</span> <span class="s1">'ExposureIndex'</span><span class="p">,</span>
<a name="line-5363"></a>            <span class="mi">41495</span><span class="p">:</span> <span class="s1">'SensingMethod'</span><span class="p">,</span>
<a name="line-5364"></a>            <span class="mi">41728</span><span class="p">:</span> <span class="s1">'FileSource'</span><span class="p">,</span>
<a name="line-5365"></a>            <span class="mi">41729</span><span class="p">:</span> <span class="s1">'SceneType'</span><span class="p">,</span>
<a name="line-5366"></a>            <span class="mi">41730</span><span class="p">:</span> <span class="s1">'CFAPattern'</span><span class="p">,</span>
<a name="line-5367"></a>            <span class="mi">41985</span><span class="p">:</span> <span class="s1">'CustomRendered'</span><span class="p">,</span>
<a name="line-5368"></a>            <span class="mi">41986</span><span class="p">:</span> <span class="s1">'ExposureMode'</span><span class="p">,</span>
<a name="line-5369"></a>            <span class="mi">41987</span><span class="p">:</span> <span class="s1">'WhiteBalance'</span><span class="p">,</span>
<a name="line-5370"></a>            <span class="mi">41988</span><span class="p">:</span> <span class="s1">'DigitalZoomRatio'</span><span class="p">,</span>
<a name="line-5371"></a>            <span class="mi">41989</span><span class="p">:</span> <span class="s1">'FocalLengthIn35mmFilm'</span><span class="p">,</span>
<a name="line-5372"></a>            <span class="mi">41990</span><span class="p">:</span> <span class="s1">'SceneCaptureType'</span><span class="p">,</span>
<a name="line-5373"></a>            <span class="mi">41991</span><span class="p">:</span> <span class="s1">'GainControl'</span><span class="p">,</span>
<a name="line-5374"></a>            <span class="mi">41992</span><span class="p">:</span> <span class="s1">'Contrast'</span><span class="p">,</span>
<a name="line-5375"></a>            <span class="mi">41993</span><span class="p">:</span> <span class="s1">'Saturation'</span><span class="p">,</span>
<a name="line-5376"></a>            <span class="mi">41994</span><span class="p">:</span> <span class="s1">'Sharpness'</span><span class="p">,</span>
<a name="line-5377"></a>            <span class="mi">41995</span><span class="p">:</span> <span class="s1">'DeviceSettingDescription'</span><span class="p">,</span>
<a name="line-5378"></a>            <span class="mi">41996</span><span class="p">:</span> <span class="s1">'SubjectDistanceRange'</span><span class="p">,</span>
<a name="line-5379"></a>            <span class="mi">42016</span><span class="p">:</span> <span class="s1">'ImageUniqueID'</span><span class="p">,</span>
<a name="line-5380"></a>            <span class="mi">42032</span><span class="p">:</span> <span class="s1">'CameraOwnerName'</span><span class="p">,</span>
<a name="line-5381"></a>            <span class="mi">42033</span><span class="p">:</span> <span class="s1">'BodySerialNumber'</span><span class="p">,</span>
<a name="line-5382"></a>            <span class="mi">42034</span><span class="p">:</span> <span class="s1">'LensSpecification'</span><span class="p">,</span>
<a name="line-5383"></a>            <span class="mi">42035</span><span class="p">:</span> <span class="s1">'LensMake'</span><span class="p">,</span>
<a name="line-5384"></a>            <span class="mi">42036</span><span class="p">:</span> <span class="s1">'LensModel'</span><span class="p">,</span>
<a name="line-5385"></a>            <span class="mi">42037</span><span class="p">:</span> <span class="s1">'LensSerialNumber'</span><span class="p">,</span>
<a name="line-5386"></a>            <span class="mi">42240</span><span class="p">:</span> <span class="s1">'Gamma'</span><span class="p">,</span>
<a name="line-5387"></a>            <span class="mi">59932</span><span class="p">:</span> <span class="s1">'Padding'</span><span class="p">,</span>
<a name="line-5388"></a>            <span class="mi">59933</span><span class="p">:</span> <span class="s1">'OffsetSchema'</span><span class="p">,</span>
<a name="line-5389"></a>            <span class="mi">65000</span><span class="p">:</span> <span class="s1">'OwnerName'</span><span class="p">,</span>
<a name="line-5390"></a>            <span class="mi">65001</span><span class="p">:</span> <span class="s1">'SerialNumber'</span><span class="p">,</span>
<a name="line-5391"></a>            <span class="mi">65002</span><span class="p">:</span> <span class="s1">'Lens'</span><span class="p">,</span>
<a name="line-5392"></a>            <span class="mi">65100</span><span class="p">:</span> <span class="s1">'RawFile'</span><span class="p">,</span>
<a name="line-5393"></a>            <span class="mi">65101</span><span class="p">:</span> <span class="s1">'Converter'</span><span class="p">,</span>
<a name="line-5394"></a>            <span class="mi">65102</span><span class="p">:</span> <span class="s1">'WhiteBalance'</span><span class="p">,</span>
<a name="line-5395"></a>            <span class="mi">65105</span><span class="p">:</span> <span class="s1">'Exposure'</span><span class="p">,</span>
<a name="line-5396"></a>            <span class="mi">65106</span><span class="p">:</span> <span class="s1">'Shadows'</span><span class="p">,</span>
<a name="line-5397"></a>            <span class="mi">65107</span><span class="p">:</span> <span class="s1">'Brightness'</span><span class="p">,</span>
<a name="line-5398"></a>            <span class="mi">65108</span><span class="p">:</span> <span class="s1">'Contrast'</span><span class="p">,</span>
<a name="line-5399"></a>            <span class="mi">65109</span><span class="p">:</span> <span class="s1">'Saturation'</span><span class="p">,</span>
<a name="line-5400"></a>            <span class="mi">65110</span><span class="p">:</span> <span class="s1">'Sharpness'</span><span class="p">,</span>
<a name="line-5401"></a>            <span class="mi">65111</span><span class="p">:</span> <span class="s1">'Smoothness'</span><span class="p">,</span>
<a name="line-5402"></a>            <span class="mi">65112</span><span class="p">:</span> <span class="s1">'MoireFilter'</span><span class="p">,</span>
<a name="line-5403"></a>        <span class="p">}</span>
<a name="line-5404"></a>
<a name="line-5405"></a>    <span class="k">def</span> <span class="nf">GPS_TAGS</span><span class="p">():</span>
<a name="line-5406"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5407"></a>            <span class="mi">0</span><span class="p">:</span> <span class="s1">'GPSVersionID'</span><span class="p">,</span>
<a name="line-5408"></a>            <span class="mi">1</span><span class="p">:</span> <span class="s1">'GPSLatitudeRef'</span><span class="p">,</span>
<a name="line-5409"></a>            <span class="mi">2</span><span class="p">:</span> <span class="s1">'GPSLatitude'</span><span class="p">,</span>
<a name="line-5410"></a>            <span class="mi">3</span><span class="p">:</span> <span class="s1">'GPSLongitudeRef'</span><span class="p">,</span>
<a name="line-5411"></a>            <span class="mi">4</span><span class="p">:</span> <span class="s1">'GPSLongitude'</span><span class="p">,</span>
<a name="line-5412"></a>            <span class="mi">5</span><span class="p">:</span> <span class="s1">'GPSAltitudeRef'</span><span class="p">,</span>
<a name="line-5413"></a>            <span class="mi">6</span><span class="p">:</span> <span class="s1">'GPSAltitude'</span><span class="p">,</span>
<a name="line-5414"></a>            <span class="mi">7</span><span class="p">:</span> <span class="s1">'GPSTimeStamp'</span><span class="p">,</span>
<a name="line-5415"></a>            <span class="mi">8</span><span class="p">:</span> <span class="s1">'GPSSatellites'</span><span class="p">,</span>
<a name="line-5416"></a>            <span class="mi">9</span><span class="p">:</span> <span class="s1">'GPSStatus'</span><span class="p">,</span>
<a name="line-5417"></a>            <span class="mi">10</span><span class="p">:</span> <span class="s1">'GPSMeasureMode'</span><span class="p">,</span>
<a name="line-5418"></a>            <span class="mi">11</span><span class="p">:</span> <span class="s1">'GPSDOP'</span><span class="p">,</span>
<a name="line-5419"></a>            <span class="mi">12</span><span class="p">:</span> <span class="s1">'GPSSpeedRef'</span><span class="p">,</span>
<a name="line-5420"></a>            <span class="mi">13</span><span class="p">:</span> <span class="s1">'GPSSpeed'</span><span class="p">,</span>
<a name="line-5421"></a>            <span class="mi">14</span><span class="p">:</span> <span class="s1">'GPSTrackRef'</span><span class="p">,</span>
<a name="line-5422"></a>            <span class="mi">15</span><span class="p">:</span> <span class="s1">'GPSTrack'</span><span class="p">,</span>
<a name="line-5423"></a>            <span class="mi">16</span><span class="p">:</span> <span class="s1">'GPSImgDirectionRef'</span><span class="p">,</span>
<a name="line-5424"></a>            <span class="mi">17</span><span class="p">:</span> <span class="s1">'GPSImgDirection'</span><span class="p">,</span>
<a name="line-5425"></a>            <span class="mi">18</span><span class="p">:</span> <span class="s1">'GPSMapDatum'</span><span class="p">,</span>
<a name="line-5426"></a>            <span class="mi">19</span><span class="p">:</span> <span class="s1">'GPSDestLatitudeRef'</span><span class="p">,</span>
<a name="line-5427"></a>            <span class="mi">20</span><span class="p">:</span> <span class="s1">'GPSDestLatitude'</span><span class="p">,</span>
<a name="line-5428"></a>            <span class="mi">21</span><span class="p">:</span> <span class="s1">'GPSDestLongitudeRef'</span><span class="p">,</span>
<a name="line-5429"></a>            <span class="mi">22</span><span class="p">:</span> <span class="s1">'GPSDestLongitude'</span><span class="p">,</span>
<a name="line-5430"></a>            <span class="mi">23</span><span class="p">:</span> <span class="s1">'GPSDestBearingRef'</span><span class="p">,</span>
<a name="line-5431"></a>            <span class="mi">24</span><span class="p">:</span> <span class="s1">'GPSDestBearing'</span><span class="p">,</span>
<a name="line-5432"></a>            <span class="mi">25</span><span class="p">:</span> <span class="s1">'GPSDestDistanceRef'</span><span class="p">,</span>
<a name="line-5433"></a>            <span class="mi">26</span><span class="p">:</span> <span class="s1">'GPSDestDistance'</span><span class="p">,</span>
<a name="line-5434"></a>            <span class="mi">27</span><span class="p">:</span> <span class="s1">'GPSProcessingMethod'</span><span class="p">,</span>
<a name="line-5435"></a>            <span class="mi">28</span><span class="p">:</span> <span class="s1">'GPSAreaInformation'</span><span class="p">,</span>
<a name="line-5436"></a>            <span class="mi">29</span><span class="p">:</span> <span class="s1">'GPSDateStamp'</span><span class="p">,</span>
<a name="line-5437"></a>            <span class="mi">30</span><span class="p">:</span> <span class="s1">'GPSDifferential'</span><span class="p">,</span>
<a name="line-5438"></a>            <span class="mi">31</span><span class="p">:</span> <span class="s1">'GPSHPositioningError'</span><span class="p">,</span>
<a name="line-5439"></a>        <span class="p">}</span>
<a name="line-5440"></a>
<a name="line-5441"></a>    <span class="k">def</span> <span class="nf">IOP_TAGS</span><span class="p">():</span>
<a name="line-5442"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5443"></a>            <span class="mi">1</span><span class="p">:</span> <span class="s1">'InteroperabilityIndex'</span><span class="p">,</span>
<a name="line-5444"></a>            <span class="mi">2</span><span class="p">:</span> <span class="s1">'InteroperabilityVersion'</span><span class="p">,</span>
<a name="line-5445"></a>            <span class="mi">4096</span><span class="p">:</span> <span class="s1">'RelatedImageFileFormat'</span><span class="p">,</span>
<a name="line-5446"></a>            <span class="mi">4097</span><span class="p">:</span> <span class="s1">'RelatedImageWidth'</span><span class="p">,</span>
<a name="line-5447"></a>            <span class="mi">4098</span><span class="p">:</span> <span class="s1">'RelatedImageLength'</span><span class="p">,</span>
<a name="line-5448"></a>        <span class="p">}</span>
<a name="line-5449"></a>
<a name="line-5450"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO</span><span class="p">():</span>
<a name="line-5451"></a>        <span class="k">return</span> <span class="p">[</span>
<a name="line-5452"></a>            <span class="p">(</span><span class="s1">'MagicNumber'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5453"></a>            <span class="p">(</span><span class="s1">'StructureSize'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5454"></a>            <span class="p">(</span><span class="s1">'DimensionX'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5455"></a>            <span class="p">(</span><span class="s1">'DimensionY'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5456"></a>            <span class="p">(</span><span class="s1">'DimensionZ'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5457"></a>            <span class="p">(</span><span class="s1">'DimensionChannels'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5458"></a>            <span class="p">(</span><span class="s1">'DimensionTime'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5459"></a>            <span class="p">(</span><span class="s1">'DataType'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>  <span class="c1"># DATATYPES</span>
<a name="line-5460"></a>            <span class="p">(</span><span class="s1">'ThumbnailX'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5461"></a>            <span class="p">(</span><span class="s1">'ThumbnailY'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5462"></a>            <span class="p">(</span><span class="s1">'VoxelSizeX'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5463"></a>            <span class="p">(</span><span class="s1">'VoxelSizeY'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5464"></a>            <span class="p">(</span><span class="s1">'VoxelSizeZ'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5465"></a>            <span class="p">(</span><span class="s1">'OriginX'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5466"></a>            <span class="p">(</span><span class="s1">'OriginY'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5467"></a>            <span class="p">(</span><span class="s1">'OriginZ'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5468"></a>            <span class="p">(</span><span class="s1">'ScanType'</span><span class="p">,</span> <span class="s1">'u2'</span><span class="p">),</span>
<a name="line-5469"></a>            <span class="p">(</span><span class="s1">'SpectralScan'</span><span class="p">,</span> <span class="s1">'u2'</span><span class="p">),</span>
<a name="line-5470"></a>            <span class="p">(</span><span class="s1">'TypeOfData'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>  <span class="c1"># TYPEOFDATA</span>
<a name="line-5471"></a>            <span class="p">(</span><span class="s1">'OffsetVectorOverlay'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5472"></a>            <span class="p">(</span><span class="s1">'OffsetInputLut'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5473"></a>            <span class="p">(</span><span class="s1">'OffsetOutputLut'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5474"></a>            <span class="p">(</span><span class="s1">'OffsetChannelColors'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5475"></a>            <span class="p">(</span><span class="s1">'TimeIntervall'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5476"></a>            <span class="p">(</span><span class="s1">'OffsetChannelDataTypes'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5477"></a>            <span class="p">(</span><span class="s1">'OffsetScanInformation'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>  <span class="c1"># SCANINFO</span>
<a name="line-5478"></a>            <span class="p">(</span><span class="s1">'OffsetKsData'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5479"></a>            <span class="p">(</span><span class="s1">'OffsetTimeStamps'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5480"></a>            <span class="p">(</span><span class="s1">'OffsetEventList'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5481"></a>            <span class="p">(</span><span class="s1">'OffsetRoi'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5482"></a>            <span class="p">(</span><span class="s1">'OffsetBleachRoi'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5483"></a>            <span class="p">(</span><span class="s1">'OffsetNextRecording'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5484"></a>            <span class="c1"># LSM 2.0 ends here</span>
<a name="line-5485"></a>            <span class="p">(</span><span class="s1">'DisplayAspectX'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5486"></a>            <span class="p">(</span><span class="s1">'DisplayAspectY'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5487"></a>            <span class="p">(</span><span class="s1">'DisplayAspectZ'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5488"></a>            <span class="p">(</span><span class="s1">'DisplayAspectTime'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5489"></a>            <span class="p">(</span><span class="s1">'OffsetMeanOfRoisOverlay'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5490"></a>            <span class="p">(</span><span class="s1">'OffsetTopoIsolineOverlay'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5491"></a>            <span class="p">(</span><span class="s1">'OffsetTopoProfileOverlay'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5492"></a>            <span class="p">(</span><span class="s1">'OffsetLinescanOverlay'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5493"></a>            <span class="p">(</span><span class="s1">'ToolbarFlags'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5494"></a>            <span class="p">(</span><span class="s1">'OffsetChannelWavelength'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5495"></a>            <span class="p">(</span><span class="s1">'OffsetChannelFactors'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5496"></a>            <span class="p">(</span><span class="s1">'ObjectiveSphereCorrection'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5497"></a>            <span class="p">(</span><span class="s1">'OffsetUnmixParameters'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5498"></a>            <span class="c1"># LSM 3.2, 4.0 end here</span>
<a name="line-5499"></a>            <span class="p">(</span><span class="s1">'OffsetAcquisitionParameters'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5500"></a>            <span class="p">(</span><span class="s1">'OffsetCharacteristics'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5501"></a>            <span class="p">(</span><span class="s1">'OffsetPalette'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5502"></a>            <span class="p">(</span><span class="s1">'TimeDifferenceX'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5503"></a>            <span class="p">(</span><span class="s1">'TimeDifferenceY'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5504"></a>            <span class="p">(</span><span class="s1">'TimeDifferenceZ'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5505"></a>            <span class="p">(</span><span class="s1">'InternalUse1'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5506"></a>            <span class="p">(</span><span class="s1">'DimensionP'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5507"></a>            <span class="p">(</span><span class="s1">'DimensionM'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5508"></a>            <span class="p">(</span><span class="s1">'DimensionsReserved'</span><span class="p">,</span> <span class="s1">'16i4'</span><span class="p">),</span>
<a name="line-5509"></a>            <span class="p">(</span><span class="s1">'OffsetTilePositions'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5510"></a>            <span class="p">(</span><span class="s1">''</span><span class="p">,</span> <span class="s1">'9u4'</span><span class="p">),</span>  <span class="c1"># Reserved</span>
<a name="line-5511"></a>            <span class="p">(</span><span class="s1">'OffsetPositions'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5512"></a>            <span class="c1"># ('', '21u4'),  # must be 0</span>
<a name="line-5513"></a>        <span class="p">]</span>
<a name="line-5514"></a>
<a name="line-5515"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO_READERS</span><span class="p">():</span>
<a name="line-5516"></a>        <span class="c1"># Import functions for CZ_LSMINFO sub-records</span>
<a name="line-5517"></a>        <span class="c1"># TODO: read more CZ_LSMINFO sub-records</span>
<a name="line-5518"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5519"></a>            <span class="s1">'ScanInformation'</span><span class="p">:</span> <span class="n">read_lsm_scaninfo</span><span class="p">,</span>
<a name="line-5520"></a>            <span class="s1">'TimeStamps'</span><span class="p">:</span> <span class="n">read_lsm_timestamps</span><span class="p">,</span>
<a name="line-5521"></a>            <span class="s1">'EventList'</span><span class="p">:</span> <span class="n">read_lsm_eventlist</span><span class="p">,</span>
<a name="line-5522"></a>            <span class="s1">'ChannelColors'</span><span class="p">:</span> <span class="n">read_lsm_channelcolors</span><span class="p">,</span>
<a name="line-5523"></a>            <span class="s1">'Positions'</span><span class="p">:</span> <span class="n">read_lsm_floatpairs</span><span class="p">,</span>
<a name="line-5524"></a>            <span class="s1">'TilePositions'</span><span class="p">:</span> <span class="n">read_lsm_floatpairs</span><span class="p">,</span>
<a name="line-5525"></a>            <span class="s1">'VectorOverlay'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5526"></a>            <span class="s1">'InputLut'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5527"></a>            <span class="s1">'OutputLut'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5528"></a>            <span class="s1">'TimeIntervall'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5529"></a>            <span class="s1">'ChannelDataTypes'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5530"></a>            <span class="s1">'KsData'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5531"></a>            <span class="s1">'Roi'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5532"></a>            <span class="s1">'BleachRoi'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5533"></a>            <span class="s1">'NextRecording'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5534"></a>            <span class="s1">'MeanOfRoisOverlay'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5535"></a>            <span class="s1">'TopoIsolineOverlay'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5536"></a>            <span class="s1">'TopoProfileOverlay'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5537"></a>            <span class="s1">'ChannelWavelength'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5538"></a>            <span class="s1">'SphereCorrection'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5539"></a>            <span class="s1">'ChannelFactors'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5540"></a>            <span class="s1">'UnmixParameters'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5541"></a>            <span class="s1">'AcquisitionParameters'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5542"></a>            <span class="s1">'Characteristics'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
<a name="line-5543"></a>        <span class="p">}</span>
<a name="line-5544"></a>
<a name="line-5545"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO_SCANTYPE</span><span class="p">():</span>
<a name="line-5546"></a>        <span class="c1"># Map CZ_LSMINFO.ScanType to dimension order</span>
<a name="line-5547"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5548"></a>            <span class="mi">0</span><span class="p">:</span> <span class="s1">'XYZCT'</span><span class="p">,</span>  <span class="c1"># 'Stack' normal x-y-z-scan</span>
<a name="line-5549"></a>            <span class="mi">1</span><span class="p">:</span> <span class="s1">'XYZCT'</span><span class="p">,</span>  <span class="c1"># 'Z-Scan' x-z-plane Y=1</span>
<a name="line-5550"></a>            <span class="mi">2</span><span class="p">:</span> <span class="s1">'XYZCT'</span><span class="p">,</span>  <span class="c1"># 'Line'</span>
<a name="line-5551"></a>            <span class="mi">3</span><span class="p">:</span> <span class="s1">'XYTCZ'</span><span class="p">,</span>  <span class="c1"># 'Time Series Plane' time series x-y  XYCTZ ? Z=1</span>
<a name="line-5552"></a>            <span class="mi">4</span><span class="p">:</span> <span class="s1">'XYZTC'</span><span class="p">,</span>  <span class="c1"># 'Time Series z-Scan' time series x-z</span>
<a name="line-5553"></a>            <span class="mi">5</span><span class="p">:</span> <span class="s1">'XYTCZ'</span><span class="p">,</span>  <span class="c1"># 'Time Series Mean-of-ROIs'</span>
<a name="line-5554"></a>            <span class="mi">6</span><span class="p">:</span> <span class="s1">'XYZTC'</span><span class="p">,</span>  <span class="c1"># 'Time Series Stack' time series x-y-z</span>
<a name="line-5555"></a>            <span class="mi">7</span><span class="p">:</span> <span class="s1">'XYCTZ'</span><span class="p">,</span>  <span class="c1"># Spline Scan</span>
<a name="line-5556"></a>            <span class="mi">8</span><span class="p">:</span> <span class="s1">'XYCZT'</span><span class="p">,</span>  <span class="c1"># Spline Plane x-z</span>
<a name="line-5557"></a>            <span class="mi">9</span><span class="p">:</span> <span class="s1">'XYTCZ'</span><span class="p">,</span>  <span class="c1"># Time Series Spline Plane x-z</span>
<a name="line-5558"></a>            <span class="mi">10</span><span class="p">:</span> <span class="s1">'XYZCT'</span><span class="p">,</span>  <span class="c1"># 'Time Series Point' point mode</span>
<a name="line-5559"></a>        <span class="p">}</span>
<a name="line-5560"></a>
<a name="line-5561"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO_DIMENSIONS</span><span class="p">():</span>
<a name="line-5562"></a>        <span class="c1"># Map dimension codes to CZ_LSMINFO attribute</span>
<a name="line-5563"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5564"></a>            <span class="s1">'X'</span><span class="p">:</span> <span class="s1">'DimensionX'</span><span class="p">,</span>
<a name="line-5565"></a>            <span class="s1">'Y'</span><span class="p">:</span> <span class="s1">'DimensionY'</span><span class="p">,</span>
<a name="line-5566"></a>            <span class="s1">'Z'</span><span class="p">:</span> <span class="s1">'DimensionZ'</span><span class="p">,</span>
<a name="line-5567"></a>            <span class="s1">'C'</span><span class="p">:</span> <span class="s1">'DimensionChannels'</span><span class="p">,</span>
<a name="line-5568"></a>            <span class="s1">'T'</span><span class="p">:</span> <span class="s1">'DimensionTime'</span><span class="p">,</span>
<a name="line-5569"></a>            <span class="s1">'P'</span><span class="p">:</span> <span class="s1">'DimensionP'</span><span class="p">,</span>
<a name="line-5570"></a>            <span class="s1">'M'</span><span class="p">:</span> <span class="s1">'DimensionM'</span><span class="p">,</span>
<a name="line-5571"></a>        <span class="p">}</span>
<a name="line-5572"></a>
<a name="line-5573"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO_DATATYPES</span><span class="p">():</span>
<a name="line-5574"></a>        <span class="c1"># Description of CZ_LSMINFO.DataType</span>
<a name="line-5575"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5576"></a>            <span class="mi">0</span><span class="p">:</span> <span class="s1">'varying data types'</span><span class="p">,</span>
<a name="line-5577"></a>            <span class="mi">1</span><span class="p">:</span> <span class="s1">'8 bit unsigned integer'</span><span class="p">,</span>
<a name="line-5578"></a>            <span class="mi">2</span><span class="p">:</span> <span class="s1">'12 bit unsigned integer'</span><span class="p">,</span>
<a name="line-5579"></a>            <span class="mi">5</span><span class="p">:</span> <span class="s1">'32 bit float'</span><span class="p">,</span>
<a name="line-5580"></a>        <span class="p">}</span>
<a name="line-5581"></a>
<a name="line-5582"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO_TYPEOFDATA</span><span class="p">():</span>
<a name="line-5583"></a>        <span class="c1"># Description of CZ_LSMINFO.TypeOfData</span>
<a name="line-5584"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5585"></a>            <span class="mi">0</span><span class="p">:</span> <span class="s1">'Original scan data'</span><span class="p">,</span>
<a name="line-5586"></a>            <span class="mi">1</span><span class="p">:</span> <span class="s1">'Calculated data'</span><span class="p">,</span>
<a name="line-5587"></a>            <span class="mi">2</span><span class="p">:</span> <span class="s1">'3D reconstruction'</span><span class="p">,</span>
<a name="line-5588"></a>            <span class="mi">3</span><span class="p">:</span> <span class="s1">'Topography height map'</span><span class="p">,</span>
<a name="line-5589"></a>        <span class="p">}</span>
<a name="line-5590"></a>
<a name="line-5591"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO_SCANINFO_ARRAYS</span><span class="p">():</span>
<a name="line-5592"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5593"></a>            <span class="mh">0x20000000</span><span class="p">:</span> <span class="s1">'Tracks'</span><span class="p">,</span>
<a name="line-5594"></a>            <span class="mh">0x30000000</span><span class="p">:</span> <span class="s1">'Lasers'</span><span class="p">,</span>
<a name="line-5595"></a>            <span class="mh">0x60000000</span><span class="p">:</span> <span class="s1">'DetectionChannels'</span><span class="p">,</span>
<a name="line-5596"></a>            <span class="mh">0x80000000</span><span class="p">:</span> <span class="s1">'IlluminationChannels'</span><span class="p">,</span>
<a name="line-5597"></a>            <span class="mh">0xa0000000</span><span class="p">:</span> <span class="s1">'BeamSplitters'</span><span class="p">,</span>
<a name="line-5598"></a>            <span class="mh">0xc0000000</span><span class="p">:</span> <span class="s1">'DataChannels'</span><span class="p">,</span>
<a name="line-5599"></a>            <span class="mh">0x11000000</span><span class="p">:</span> <span class="s1">'Timers'</span><span class="p">,</span>
<a name="line-5600"></a>            <span class="mh">0x13000000</span><span class="p">:</span> <span class="s1">'Markers'</span><span class="p">,</span>
<a name="line-5601"></a>        <span class="p">}</span>
<a name="line-5602"></a>
<a name="line-5603"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO_SCANINFO_STRUCTS</span><span class="p">():</span>
<a name="line-5604"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5605"></a>            <span class="c1"># 0x10000000: "Recording",</span>
<a name="line-5606"></a>            <span class="mh">0x40000000</span><span class="p">:</span> <span class="s1">'Track'</span><span class="p">,</span>
<a name="line-5607"></a>            <span class="mh">0x50000000</span><span class="p">:</span> <span class="s1">'Laser'</span><span class="p">,</span>
<a name="line-5608"></a>            <span class="mh">0x70000000</span><span class="p">:</span> <span class="s1">'DetectionChannel'</span><span class="p">,</span>
<a name="line-5609"></a>            <span class="mh">0x90000000</span><span class="p">:</span> <span class="s1">'IlluminationChannel'</span><span class="p">,</span>
<a name="line-5610"></a>            <span class="mh">0xb0000000</span><span class="p">:</span> <span class="s1">'BeamSplitter'</span><span class="p">,</span>
<a name="line-5611"></a>            <span class="mh">0xd0000000</span><span class="p">:</span> <span class="s1">'DataChannel'</span><span class="p">,</span>
<a name="line-5612"></a>            <span class="mh">0x12000000</span><span class="p">:</span> <span class="s1">'Timer'</span><span class="p">,</span>
<a name="line-5613"></a>            <span class="mh">0x14000000</span><span class="p">:</span> <span class="s1">'Marker'</span><span class="p">,</span>
<a name="line-5614"></a>        <span class="p">}</span>
<a name="line-5615"></a>
<a name="line-5616"></a>    <span class="k">def</span> <span class="nf">CZ_LSMINFO_SCANINFO_ATTRIBUTES</span><span class="p">():</span>
<a name="line-5617"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-5618"></a>            <span class="c1"># Recording</span>
<a name="line-5619"></a>            <span class="mh">0x10000001</span><span class="p">:</span> <span class="s1">'Name'</span><span class="p">,</span>
<a name="line-5620"></a>            <span class="mh">0x10000002</span><span class="p">:</span> <span class="s1">'Description'</span><span class="p">,</span>
<a name="line-5621"></a>            <span class="mh">0x10000003</span><span class="p">:</span> <span class="s1">'Notes'</span><span class="p">,</span>
<a name="line-5622"></a>            <span class="mh">0x10000004</span><span class="p">:</span> <span class="s1">'Objective'</span><span class="p">,</span>
<a name="line-5623"></a>            <span class="mh">0x10000005</span><span class="p">:</span> <span class="s1">'ProcessingSummary'</span><span class="p">,</span>
<a name="line-5624"></a>            <span class="mh">0x10000006</span><span class="p">:</span> <span class="s1">'SpecialScanMode'</span><span class="p">,</span>
<a name="line-5625"></a>            <span class="mh">0x10000007</span><span class="p">:</span> <span class="s1">'ScanType'</span><span class="p">,</span>
<a name="line-5626"></a>            <span class="mh">0x10000008</span><span class="p">:</span> <span class="s1">'ScanMode'</span><span class="p">,</span>
<a name="line-5627"></a>            <span class="mh">0x10000009</span><span class="p">:</span> <span class="s1">'NumberOfStacks'</span><span class="p">,</span>
<a name="line-5628"></a>            <span class="mh">0x1000000a</span><span class="p">:</span> <span class="s1">'LinesPerPlane'</span><span class="p">,</span>
<a name="line-5629"></a>            <span class="mh">0x1000000b</span><span class="p">:</span> <span class="s1">'SamplesPerLine'</span><span class="p">,</span>
<a name="line-5630"></a>            <span class="mh">0x1000000c</span><span class="p">:</span> <span class="s1">'PlanesPerVolume'</span><span class="p">,</span>
<a name="line-5631"></a>            <span class="mh">0x1000000d</span><span class="p">:</span> <span class="s1">'ImagesWidth'</span><span class="p">,</span>
<a name="line-5632"></a>            <span class="mh">0x1000000e</span><span class="p">:</span> <span class="s1">'ImagesHeight'</span><span class="p">,</span>
<a name="line-5633"></a>            <span class="mh">0x1000000f</span><span class="p">:</span> <span class="s1">'ImagesNumberPlanes'</span><span class="p">,</span>
<a name="line-5634"></a>            <span class="mh">0x10000010</span><span class="p">:</span> <span class="s1">'ImagesNumberStacks'</span><span class="p">,</span>
<a name="line-5635"></a>            <span class="mh">0x10000011</span><span class="p">:</span> <span class="s1">'ImagesNumberChannels'</span><span class="p">,</span>
<a name="line-5636"></a>            <span class="mh">0x10000012</span><span class="p">:</span> <span class="s1">'LinscanXySize'</span><span class="p">,</span>
<a name="line-5637"></a>            <span class="mh">0x10000013</span><span class="p">:</span> <span class="s1">'ScanDirection'</span><span class="p">,</span>
<a name="line-5638"></a>            <span class="mh">0x10000014</span><span class="p">:</span> <span class="s1">'TimeSeries'</span><span class="p">,</span>
<a name="line-5639"></a>            <span class="mh">0x10000015</span><span class="p">:</span> <span class="s1">'OriginalScanData'</span><span class="p">,</span>
<a name="line-5640"></a>            <span class="mh">0x10000016</span><span class="p">:</span> <span class="s1">'ZoomX'</span><span class="p">,</span>
<a name="line-5641"></a>            <span class="mh">0x10000017</span><span class="p">:</span> <span class="s1">'ZoomY'</span><span class="p">,</span>
<a name="line-5642"></a>            <span class="mh">0x10000018</span><span class="p">:</span> <span class="s1">'ZoomZ'</span><span class="p">,</span>
<a name="line-5643"></a>            <span class="mh">0x10000019</span><span class="p">:</span> <span class="s1">'Sample0X'</span><span class="p">,</span>
<a name="line-5644"></a>            <span class="mh">0x1000001a</span><span class="p">:</span> <span class="s1">'Sample0Y'</span><span class="p">,</span>
<a name="line-5645"></a>            <span class="mh">0x1000001b</span><span class="p">:</span> <span class="s1">'Sample0Z'</span><span class="p">,</span>
<a name="line-5646"></a>            <span class="mh">0x1000001c</span><span class="p">:</span> <span class="s1">'SampleSpacing'</span><span class="p">,</span>
<a name="line-5647"></a>            <span class="mh">0x1000001d</span><span class="p">:</span> <span class="s1">'LineSpacing'</span><span class="p">,</span>
<a name="line-5648"></a>            <span class="mh">0x1000001e</span><span class="p">:</span> <span class="s1">'PlaneSpacing'</span><span class="p">,</span>
<a name="line-5649"></a>            <span class="mh">0x1000001f</span><span class="p">:</span> <span class="s1">'PlaneWidth'</span><span class="p">,</span>
<a name="line-5650"></a>            <span class="mh">0x10000020</span><span class="p">:</span> <span class="s1">'PlaneHeight'</span><span class="p">,</span>
<a name="line-5651"></a>            <span class="mh">0x10000021</span><span class="p">:</span> <span class="s1">'VolumeDepth'</span><span class="p">,</span>
<a name="line-5652"></a>            <span class="mh">0x10000023</span><span class="p">:</span> <span class="s1">'Nutation'</span><span class="p">,</span>
<a name="line-5653"></a>            <span class="mh">0x10000034</span><span class="p">:</span> <span class="s1">'Rotation'</span><span class="p">,</span>
<a name="line-5654"></a>            <span class="mh">0x10000035</span><span class="p">:</span> <span class="s1">'Precession'</span><span class="p">,</span>
<a name="line-5655"></a>            <span class="mh">0x10000036</span><span class="p">:</span> <span class="s1">'Sample0time'</span><span class="p">,</span>
<a name="line-5656"></a>            <span class="mh">0x10000037</span><span class="p">:</span> <span class="s1">'StartScanTriggerIn'</span><span class="p">,</span>
<a name="line-5657"></a>            <span class="mh">0x10000038</span><span class="p">:</span> <span class="s1">'StartScanTriggerOut'</span><span class="p">,</span>
<a name="line-5658"></a>            <span class="mh">0x10000039</span><span class="p">:</span> <span class="s1">'StartScanEvent'</span><span class="p">,</span>
<a name="line-5659"></a>            <span class="mh">0x10000040</span><span class="p">:</span> <span class="s1">'StartScanTime'</span><span class="p">,</span>
<a name="line-5660"></a>            <span class="mh">0x10000041</span><span class="p">:</span> <span class="s1">'StopScanTriggerIn'</span><span class="p">,</span>
<a name="line-5661"></a>            <span class="mh">0x10000042</span><span class="p">:</span> <span class="s1">'StopScanTriggerOut'</span><span class="p">,</span>
<a name="line-5662"></a>            <span class="mh">0x10000043</span><span class="p">:</span> <span class="s1">'StopScanEvent'</span><span class="p">,</span>
<a name="line-5663"></a>            <span class="mh">0x10000044</span><span class="p">:</span> <span class="s1">'StopScanTime'</span><span class="p">,</span>
<a name="line-5664"></a>            <span class="mh">0x10000045</span><span class="p">:</span> <span class="s1">'UseRois'</span><span class="p">,</span>
<a name="line-5665"></a>            <span class="mh">0x10000046</span><span class="p">:</span> <span class="s1">'UseReducedMemoryRois'</span><span class="p">,</span>
<a name="line-5666"></a>            <span class="mh">0x10000047</span><span class="p">:</span> <span class="s1">'User'</span><span class="p">,</span>
<a name="line-5667"></a>            <span class="mh">0x10000048</span><span class="p">:</span> <span class="s1">'UseBcCorrection'</span><span class="p">,</span>
<a name="line-5668"></a>            <span class="mh">0x10000049</span><span class="p">:</span> <span class="s1">'PositionBcCorrection1'</span><span class="p">,</span>
<a name="line-5669"></a>            <span class="mh">0x10000050</span><span class="p">:</span> <span class="s1">'PositionBcCorrection2'</span><span class="p">,</span>
<a name="line-5670"></a>            <span class="mh">0x10000051</span><span class="p">:</span> <span class="s1">'InterpolationY'</span><span class="p">,</span>
<a name="line-5671"></a>            <span class="mh">0x10000052</span><span class="p">:</span> <span class="s1">'CameraBinning'</span><span class="p">,</span>
<a name="line-5672"></a>            <span class="mh">0x10000053</span><span class="p">:</span> <span class="s1">'CameraSupersampling'</span><span class="p">,</span>
<a name="line-5673"></a>            <span class="mh">0x10000054</span><span class="p">:</span> <span class="s1">'CameraFrameWidth'</span><span class="p">,</span>
<a name="line-5674"></a>            <span class="mh">0x10000055</span><span class="p">:</span> <span class="s1">'CameraFrameHeight'</span><span class="p">,</span>
<a name="line-5675"></a>            <span class="mh">0x10000056</span><span class="p">:</span> <span class="s1">'CameraOffsetX'</span><span class="p">,</span>
<a name="line-5676"></a>            <span class="mh">0x10000057</span><span class="p">:</span> <span class="s1">'CameraOffsetY'</span><span class="p">,</span>
<a name="line-5677"></a>            <span class="mh">0x10000059</span><span class="p">:</span> <span class="s1">'RtBinning'</span><span class="p">,</span>
<a name="line-5678"></a>            <span class="mh">0x1000005a</span><span class="p">:</span> <span class="s1">'RtFrameWidth'</span><span class="p">,</span>
<a name="line-5679"></a>            <span class="mh">0x1000005b</span><span class="p">:</span> <span class="s1">'RtFrameHeight'</span><span class="p">,</span>
<a name="line-5680"></a>            <span class="mh">0x1000005c</span><span class="p">:</span> <span class="s1">'RtRegionWidth'</span><span class="p">,</span>
<a name="line-5681"></a>            <span class="mh">0x1000005d</span><span class="p">:</span> <span class="s1">'RtRegionHeight'</span><span class="p">,</span>
<a name="line-5682"></a>            <span class="mh">0x1000005e</span><span class="p">:</span> <span class="s1">'RtOffsetX'</span><span class="p">,</span>
<a name="line-5683"></a>            <span class="mh">0x1000005f</span><span class="p">:</span> <span class="s1">'RtOffsetY'</span><span class="p">,</span>
<a name="line-5684"></a>            <span class="mh">0x10000060</span><span class="p">:</span> <span class="s1">'RtZoom'</span><span class="p">,</span>
<a name="line-5685"></a>            <span class="mh">0x10000061</span><span class="p">:</span> <span class="s1">'RtLinePeriod'</span><span class="p">,</span>
<a name="line-5686"></a>            <span class="mh">0x10000062</span><span class="p">:</span> <span class="s1">'Prescan'</span><span class="p">,</span>
<a name="line-5687"></a>            <span class="mh">0x10000063</span><span class="p">:</span> <span class="s1">'ScanDirectionZ'</span><span class="p">,</span>
<a name="line-5688"></a>            <span class="c1"># Track</span>
<a name="line-5689"></a>            <span class="mh">0x40000001</span><span class="p">:</span> <span class="s1">'MultiplexType'</span><span class="p">,</span>  <span class="c1"># 0 After Line; 1 After Frame</span>
<a name="line-5690"></a>            <span class="mh">0x40000002</span><span class="p">:</span> <span class="s1">'MultiplexOrder'</span><span class="p">,</span>
<a name="line-5691"></a>            <span class="mh">0x40000003</span><span class="p">:</span> <span class="s1">'SamplingMode'</span><span class="p">,</span>  <span class="c1"># 0 Sample; 1 Line Avg; 2 Frame Avg</span>
<a name="line-5692"></a>            <span class="mh">0x40000004</span><span class="p">:</span> <span class="s1">'SamplingMethod'</span><span class="p">,</span>  <span class="c1"># 1 Mean; 2 Sum</span>
<a name="line-5693"></a>            <span class="mh">0x40000005</span><span class="p">:</span> <span class="s1">'SamplingNumber'</span><span class="p">,</span>
<a name="line-5694"></a>            <span class="mh">0x40000006</span><span class="p">:</span> <span class="s1">'Acquire'</span><span class="p">,</span>
<a name="line-5695"></a>            <span class="mh">0x40000007</span><span class="p">:</span> <span class="s1">'SampleObservationTime'</span><span class="p">,</span>
<a name="line-5696"></a>            <span class="mh">0x4000000b</span><span class="p">:</span> <span class="s1">'TimeBetweenStacks'</span><span class="p">,</span>
<a name="line-5697"></a>            <span class="mh">0x4000000c</span><span class="p">:</span> <span class="s1">'Name'</span><span class="p">,</span>
<a name="line-5698"></a>            <span class="mh">0x4000000d</span><span class="p">:</span> <span class="s1">'Collimator1Name'</span><span class="p">,</span>
<a name="line-5699"></a>            <span class="mh">0x4000000e</span><span class="p">:</span> <span class="s1">'Collimator1Position'</span><span class="p">,</span>
<a name="line-5700"></a>            <span class="mh">0x4000000f</span><span class="p">:</span> <span class="s1">'Collimator2Name'</span><span class="p">,</span>
<a name="line-5701"></a>            <span class="mh">0x40000010</span><span class="p">:</span> <span class="s1">'Collimator2Position'</span><span class="p">,</span>
<a name="line-5702"></a>            <span class="mh">0x40000011</span><span class="p">:</span> <span class="s1">'IsBleachTrack'</span><span class="p">,</span>
<a name="line-5703"></a>            <span class="mh">0x40000012</span><span class="p">:</span> <span class="s1">'IsBleachAfterScanNumber'</span><span class="p">,</span>
<a name="line-5704"></a>            <span class="mh">0x40000013</span><span class="p">:</span> <span class="s1">'BleachScanNumber'</span><span class="p">,</span>
<a name="line-5705"></a>            <span class="mh">0x40000014</span><span class="p">:</span> <span class="s1">'TriggerIn'</span><span class="p">,</span>
<a name="line-5706"></a>            <span class="mh">0x40000015</span><span class="p">:</span> <span class="s1">'TriggerOut'</span><span class="p">,</span>
<a name="line-5707"></a>            <span class="mh">0x40000016</span><span class="p">:</span> <span class="s1">'IsRatioTrack'</span><span class="p">,</span>
<a name="line-5708"></a>            <span class="mh">0x40000017</span><span class="p">:</span> <span class="s1">'BleachCount'</span><span class="p">,</span>
<a name="line-5709"></a>            <span class="mh">0x40000018</span><span class="p">:</span> <span class="s1">'SpiCenterWavelength'</span><span class="p">,</span>
<a name="line-5710"></a>            <span class="mh">0x40000019</span><span class="p">:</span> <span class="s1">'PixelTime'</span><span class="p">,</span>
<a name="line-5711"></a>            <span class="mh">0x40000021</span><span class="p">:</span> <span class="s1">'CondensorFrontlens'</span><span class="p">,</span>
<a name="line-5712"></a>            <span class="mh">0x40000023</span><span class="p">:</span> <span class="s1">'FieldStopValue'</span><span class="p">,</span>
<a name="line-5713"></a>            <span class="mh">0x40000024</span><span class="p">:</span> <span class="s1">'IdCondensorAperture'</span><span class="p">,</span>
<a name="line-5714"></a>            <span class="mh">0x40000025</span><span class="p">:</span> <span class="s1">'CondensorAperture'</span><span class="p">,</span>
<a name="line-5715"></a>            <span class="mh">0x40000026</span><span class="p">:</span> <span class="s1">'IdCondensorRevolver'</span><span class="p">,</span>
<a name="line-5716"></a>            <span class="mh">0x40000027</span><span class="p">:</span> <span class="s1">'CondensorFilter'</span><span class="p">,</span>
<a name="line-5717"></a>            <span class="mh">0x40000028</span><span class="p">:</span> <span class="s1">'IdTransmissionFilter1'</span><span class="p">,</span>
<a name="line-5718"></a>            <span class="mh">0x40000029</span><span class="p">:</span> <span class="s1">'IdTransmission1'</span><span class="p">,</span>
<a name="line-5719"></a>            <span class="mh">0x40000030</span><span class="p">:</span> <span class="s1">'IdTransmissionFilter2'</span><span class="p">,</span>
<a name="line-5720"></a>            <span class="mh">0x40000031</span><span class="p">:</span> <span class="s1">'IdTransmission2'</span><span class="p">,</span>
<a name="line-5721"></a>            <span class="mh">0x40000032</span><span class="p">:</span> <span class="s1">'RepeatBleach'</span><span class="p">,</span>
<a name="line-5722"></a>            <span class="mh">0x40000033</span><span class="p">:</span> <span class="s1">'EnableSpotBleachPos'</span><span class="p">,</span>
<a name="line-5723"></a>            <span class="mh">0x40000034</span><span class="p">:</span> <span class="s1">'SpotBleachPosx'</span><span class="p">,</span>
<a name="line-5724"></a>            <span class="mh">0x40000035</span><span class="p">:</span> <span class="s1">'SpotBleachPosy'</span><span class="p">,</span>
<a name="line-5725"></a>            <span class="mh">0x40000036</span><span class="p">:</span> <span class="s1">'SpotBleachPosz'</span><span class="p">,</span>
<a name="line-5726"></a>            <span class="mh">0x40000037</span><span class="p">:</span> <span class="s1">'IdTubelens'</span><span class="p">,</span>
<a name="line-5727"></a>            <span class="mh">0x40000038</span><span class="p">:</span> <span class="s1">'IdTubelensPosition'</span><span class="p">,</span>
<a name="line-5728"></a>            <span class="mh">0x40000039</span><span class="p">:</span> <span class="s1">'TransmittedLight'</span><span class="p">,</span>
<a name="line-5729"></a>            <span class="mh">0x4000003a</span><span class="p">:</span> <span class="s1">'ReflectedLight'</span><span class="p">,</span>
<a name="line-5730"></a>            <span class="mh">0x4000003b</span><span class="p">:</span> <span class="s1">'SimultanGrabAndBleach'</span><span class="p">,</span>
<a name="line-5731"></a>            <span class="mh">0x4000003c</span><span class="p">:</span> <span class="s1">'BleachPixelTime'</span><span class="p">,</span>
<a name="line-5732"></a>            <span class="c1"># Laser</span>
<a name="line-5733"></a>            <span class="mh">0x50000001</span><span class="p">:</span> <span class="s1">'Name'</span><span class="p">,</span>
<a name="line-5734"></a>            <span class="mh">0x50000002</span><span class="p">:</span> <span class="s1">'Acquire'</span><span class="p">,</span>
<a name="line-5735"></a>            <span class="mh">0x50000003</span><span class="p">:</span> <span class="s1">'Power'</span><span class="p">,</span>
<a name="line-5736"></a>            <span class="c1"># DetectionChannel</span>
<a name="line-5737"></a>            <span class="mh">0x70000001</span><span class="p">:</span> <span class="s1">'IntegrationMode'</span><span class="p">,</span>
<a name="line-5738"></a>            <span class="mh">0x70000002</span><span class="p">:</span> <span class="s1">'SpecialMode'</span><span class="p">,</span>
<a name="line-5739"></a>            <span class="mh">0x70000003</span><span class="p">:</span> <span class="s1">'DetectorGainFirst'</span><span class="p">,</span>
<a name="line-5740"></a>            <span class="mh">0x70000004</span><span class="p">:</span> <span class="s1">'DetectorGainLast'</span><span class="p">,</span>
<a name="line-5741"></a>            <span class="mh">0x70000005</span><span class="p">:</span> <span class="s1">'AmplifierGainFirst'</span><span class="p">,</span>
<a name="line-5742"></a>            <span class="mh">0x70000006</span><span class="p">:</span> <span class="s1">'AmplifierGainLast'</span><span class="p">,</span>
<a name="line-5743"></a>            <span class="mh">0x70000007</span><span class="p">:</span> <span class="s1">'AmplifierOffsFirst'</span><span class="p">,</span>
<a name="line-5744"></a>            <span class="mh">0x70000008</span><span class="p">:</span> <span class="s1">'AmplifierOffsLast'</span><span class="p">,</span>
<a name="line-5745"></a>            <span class="mh">0x70000009</span><span class="p">:</span> <span class="s1">'PinholeDiameter'</span><span class="p">,</span>
<a name="line-5746"></a>            <span class="mh">0x7000000a</span><span class="p">:</span> <span class="s1">'CountingTrigger'</span><span class="p">,</span>
<a name="line-5747"></a>            <span class="mh">0x7000000b</span><span class="p">:</span> <span class="s1">'Acquire'</span><span class="p">,</span>
<a name="line-5748"></a>            <span class="mh">0x7000000c</span><span class="p">:</span> <span class="s1">'PointDetectorName'</span><span class="p">,</span>
<a name="line-5749"></a>            <span class="mh">0x7000000d</span><span class="p">:</span> <span class="s1">'AmplifierName'</span><span class="p">,</span>
<a name="line-5750"></a>            <span class="mh">0x7000000e</span><span class="p">:</span> <span class="s1">'PinholeName'</span><span class="p">,</span>
<a name="line-5751"></a>            <span class="mh">0x7000000f</span><span class="p">:</span> <span class="s1">'FilterSetName'</span><span class="p">,</span>
<a name="line-5752"></a>            <span class="mh">0x70000010</span><span class="p">:</span> <span class="s1">'FilterName'</span><span class="p">,</span>
<a name="line-5753"></a>            <span class="mh">0x70000013</span><span class="p">:</span> <span class="s1">'IntegratorName'</span><span class="p">,</span>
<a name="line-5754"></a>            <span class="mh">0x70000014</span><span class="p">:</span> <span class="s1">'ChannelName'</span><span class="p">,</span>
<a name="line-5755"></a>            <span class="mh">0x70000015</span><span class="p">:</span> <span class="s1">'DetectorGainBc1'</span><span class="p">,</span>
<a name="line-5756"></a>            <span class="mh">0x70000016</span><span class="p">:</span> <span class="s1">'DetectorGainBc2'</span><span class="p">,</span>
<a name="line-5757"></a>            <span class="mh">0x70000017</span><span class="p">:</span> <span class="s1">'AmplifierGainBc1'</span><span class="p">,</span>
<a name="line-5758"></a>            <span class="mh">0x70000018</span><span class="p">:</span> <span class="s1">'AmplifierGainBc2'</span><span class="p">,</span>
<a name="line-5759"></a>            <span class="mh">0x70000019</span><span class="p">:</span> <span class="s1">'AmplifierOffsetBc1'</span><span class="p">,</span>
<a name="line-5760"></a>            <span class="mh">0x70000020</span><span class="p">:</span> <span class="s1">'AmplifierOffsetBc2'</span><span class="p">,</span>
<a name="line-5761"></a>            <span class="mh">0x70000021</span><span class="p">:</span> <span class="s1">'SpectralScanChannels'</span><span class="p">,</span>
<a name="line-5762"></a>            <span class="mh">0x70000022</span><span class="p">:</span> <span class="s1">'SpiWavelengthStart'</span><span class="p">,</span>
<a name="line-5763"></a>            <span class="mh">0x70000023</span><span class="p">:</span> <span class="s1">'SpiWavelengthStop'</span><span class="p">,</span>
<a name="line-5764"></a>            <span class="mh">0x70000026</span><span class="p">:</span> <span class="s1">'DyeName'</span><span class="p">,</span>
<a name="line-5765"></a>            <span class="mh">0x70000027</span><span class="p">:</span> <span class="s1">'DyeFolder'</span><span class="p">,</span>
<a name="line-5766"></a>            <span class="c1"># IlluminationChannel</span>
<a name="line-5767"></a>            <span class="mh">0x90000001</span><span class="p">:</span> <span class="s1">'Name'</span><span class="p">,</span>
<a name="line-5768"></a>            <span class="mh">0x90000002</span><span class="p">:</span> <span class="s1">'Power'</span><span class="p">,</span>
<a name="line-5769"></a>            <span class="mh">0x90000003</span><span class="p">:</span> <span class="s1">'Wavelength'</span><span class="p">,</span>
<a name="line-5770"></a>            <span class="mh">0x90000004</span><span class="p">:</span> <span class="s1">'Aquire'</span><span class="p">,</span>
<a name="line-5771"></a>            <span class="mh">0x90000005</span><span class="p">:</span> <span class="s1">'DetchannelName'</span><span class="p">,</span>
<a name="line-5772"></a>            <span class="mh">0x90000006</span><span class="p">:</span> <span class="s1">'PowerBc1'</span><span class="p">,</span>
<a name="line-5773"></a>            <span class="mh">0x90000007</span><span class="p">:</span> <span class="s1">'PowerBc2'</span><span class="p">,</span>
<a name="line-5774"></a>            <span class="c1"># BeamSplitter</span>
<a name="line-5775"></a>            <span class="mh">0xb0000001</span><span class="p">:</span> <span class="s1">'FilterSet'</span><span class="p">,</span>
<a name="line-5776"></a>            <span class="mh">0xb0000002</span><span class="p">:</span> <span class="s1">'Filter'</span><span class="p">,</span>
<a name="line-5777"></a>            <span class="mh">0xb0000003</span><span class="p">:</span> <span class="s1">'Name'</span><span class="p">,</span>
<a name="line-5778"></a>            <span class="c1"># DataChannel</span>
<a name="line-5779"></a>            <span class="mh">0xd0000001</span><span class="p">:</span> <span class="s1">'Name'</span><span class="p">,</span>
<a name="line-5780"></a>            <span class="mh">0xd0000003</span><span class="p">:</span> <span class="s1">'Acquire'</span><span class="p">,</span>
<a name="line-5781"></a>            <span class="mh">0xd0000004</span><span class="p">:</span> <span class="s1">'Color'</span><span class="p">,</span>
<a name="line-5782"></a>            <span class="mh">0xd0000005</span><span class="p">:</span> <span class="s1">'SampleType'</span><span class="p">,</span>
<a name="line-5783"></a>            <span class="mh">0xd0000006</span><span class="p">:</span> <span class="s1">'BitsPerSample'</span><span class="p">,</span>
<a name="line-5784"></a>            <span class="mh">0xd0000007</span><span class="p">:</span> <span class="s1">'RatioType'</span><span class="p">,</span>
<a name="line-5785"></a>            <span class="mh">0xd0000008</span><span class="p">:</span> <span class="s1">'RatioTrack1'</span><span class="p">,</span>
<a name="line-5786"></a>            <span class="mh">0xd0000009</span><span class="p">:</span> <span class="s1">'RatioTrack2'</span><span class="p">,</span>
<a name="line-5787"></a>            <span class="mh">0xd000000a</span><span class="p">:</span> <span class="s1">'RatioChannel1'</span><span class="p">,</span>
<a name="line-5788"></a>            <span class="mh">0xd000000b</span><span class="p">:</span> <span class="s1">'RatioChannel2'</span><span class="p">,</span>
<a name="line-5789"></a>            <span class="mh">0xd000000c</span><span class="p">:</span> <span class="s1">'RatioConst1'</span><span class="p">,</span>
<a name="line-5790"></a>            <span class="mh">0xd000000d</span><span class="p">:</span> <span class="s1">'RatioConst2'</span><span class="p">,</span>
<a name="line-5791"></a>            <span class="mh">0xd000000e</span><span class="p">:</span> <span class="s1">'RatioConst3'</span><span class="p">,</span>
<a name="line-5792"></a>            <span class="mh">0xd000000f</span><span class="p">:</span> <span class="s1">'RatioConst4'</span><span class="p">,</span>
<a name="line-5793"></a>            <span class="mh">0xd0000010</span><span class="p">:</span> <span class="s1">'RatioConst5'</span><span class="p">,</span>
<a name="line-5794"></a>            <span class="mh">0xd0000011</span><span class="p">:</span> <span class="s1">'RatioConst6'</span><span class="p">,</span>
<a name="line-5795"></a>            <span class="mh">0xd0000012</span><span class="p">:</span> <span class="s1">'RatioFirstImages1'</span><span class="p">,</span>
<a name="line-5796"></a>            <span class="mh">0xd0000013</span><span class="p">:</span> <span class="s1">'RatioFirstImages2'</span><span class="p">,</span>
<a name="line-5797"></a>            <span class="mh">0xd0000014</span><span class="p">:</span> <span class="s1">'DyeName'</span><span class="p">,</span>
<a name="line-5798"></a>            <span class="mh">0xd0000015</span><span class="p">:</span> <span class="s1">'DyeFolder'</span><span class="p">,</span>
<a name="line-5799"></a>            <span class="mh">0xd0000016</span><span class="p">:</span> <span class="s1">'Spectrum'</span><span class="p">,</span>
<a name="line-5800"></a>            <span class="mh">0xd0000017</span><span class="p">:</span> <span class="s1">'Acquire'</span><span class="p">,</span>
<a name="line-5801"></a>            <span class="c1"># Timer</span>
<a name="line-5802"></a>            <span class="mh">0x12000001</span><span class="p">:</span> <span class="s1">'Name'</span><span class="p">,</span>
<a name="line-5803"></a>            <span class="mh">0x12000002</span><span class="p">:</span> <span class="s1">'Description'</span><span class="p">,</span>
<a name="line-5804"></a>            <span class="mh">0x12000003</span><span class="p">:</span> <span class="s1">'Interval'</span><span class="p">,</span>
<a name="line-5805"></a>            <span class="mh">0x12000004</span><span class="p">:</span> <span class="s1">'TriggerIn'</span><span class="p">,</span>
<a name="line-5806"></a>            <span class="mh">0x12000005</span><span class="p">:</span> <span class="s1">'TriggerOut'</span><span class="p">,</span>
<a name="line-5807"></a>            <span class="mh">0x12000006</span><span class="p">:</span> <span class="s1">'ActivationTime'</span><span class="p">,</span>
<a name="line-5808"></a>            <span class="mh">0x12000007</span><span class="p">:</span> <span class="s1">'ActivationNumber'</span><span class="p">,</span>
<a name="line-5809"></a>            <span class="c1"># Marker</span>
<a name="line-5810"></a>            <span class="mh">0x14000001</span><span class="p">:</span> <span class="s1">'Name'</span><span class="p">,</span>
<a name="line-5811"></a>            <span class="mh">0x14000002</span><span class="p">:</span> <span class="s1">'Description'</span><span class="p">,</span>
<a name="line-5812"></a>            <span class="mh">0x14000003</span><span class="p">:</span> <span class="s1">'TriggerIn'</span><span class="p">,</span>
<a name="line-5813"></a>            <span class="mh">0x14000004</span><span class="p">:</span> <span class="s1">'TriggerOut'</span><span class="p">,</span>
<a name="line-5814"></a>        <span class="p">}</span>
<a name="line-5815"></a>
<a name="line-5816"></a>    <span class="k">def</span> <span class="nf">NIH_IMAGE_HEADER</span><span class="p">():</span>
<a name="line-5817"></a>        <span class="k">return</span> <span class="p">[</span>
<a name="line-5818"></a>            <span class="p">(</span><span class="s1">'FileID'</span><span class="p">,</span> <span class="s1">'a8'</span><span class="p">),</span>
<a name="line-5819"></a>            <span class="p">(</span><span class="s1">'nLines'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5820"></a>            <span class="p">(</span><span class="s1">'PixelsPerLine'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5821"></a>            <span class="p">(</span><span class="s1">'Version'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5822"></a>            <span class="p">(</span><span class="s1">'OldLutMode'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5823"></a>            <span class="p">(</span><span class="s1">'OldnColors'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5824"></a>            <span class="p">(</span><span class="s1">'Colors'</span><span class="p">,</span> <span class="s1">'u1'</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">32</span><span class="p">)),</span>
<a name="line-5825"></a>            <span class="p">(</span><span class="s1">'OldColorStart'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5826"></a>            <span class="p">(</span><span class="s1">'ColorWidth'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5827"></a>            <span class="p">(</span><span class="s1">'ExtraColors'</span><span class="p">,</span> <span class="s1">'u2'</span><span class="p">,</span> <span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">)),</span>
<a name="line-5828"></a>            <span class="p">(</span><span class="s1">'nExtraColors'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5829"></a>            <span class="p">(</span><span class="s1">'ForegroundIndex'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5830"></a>            <span class="p">(</span><span class="s1">'BackgroundIndex'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5831"></a>            <span class="p">(</span><span class="s1">'XScale'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-5832"></a>            <span class="p">(</span><span class="s1">'Unused2'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5833"></a>            <span class="p">(</span><span class="s1">'Unused3'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5834"></a>            <span class="p">(</span><span class="s1">'UnitsID'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>  <span class="c1"># NIH_UNITS_TYPE</span>
<a name="line-5835"></a>            <span class="p">(</span><span class="s1">'p1'</span><span class="p">,</span> <span class="p">[(</span><span class="s1">'x'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span> <span class="p">(</span><span class="s1">'y'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">)]),</span>
<a name="line-5836"></a>            <span class="p">(</span><span class="s1">'p2'</span><span class="p">,</span> <span class="p">[(</span><span class="s1">'x'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span> <span class="p">(</span><span class="s1">'y'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">)]),</span>
<a name="line-5837"></a>            <span class="p">(</span><span class="s1">'CurveFitType'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>  <span class="c1"># NIH_CURVEFIT_TYPE</span>
<a name="line-5838"></a>            <span class="p">(</span><span class="s1">'nCoefficients'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5839"></a>            <span class="p">(</span><span class="s1">'Coeff'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span>
<a name="line-5840"></a>            <span class="p">(</span><span class="s1">'UMsize'</span><span class="p">,</span> <span class="s1">'u1'</span><span class="p">),</span>
<a name="line-5841"></a>            <span class="p">(</span><span class="s1">'UM'</span><span class="p">,</span> <span class="s1">'a15'</span><span class="p">),</span>
<a name="line-5842"></a>            <span class="p">(</span><span class="s1">'UnusedBoolean'</span><span class="p">,</span> <span class="s1">'u1'</span><span class="p">),</span>
<a name="line-5843"></a>            <span class="p">(</span><span class="s1">'BinaryPic'</span><span class="p">,</span> <span class="s1">'b1'</span><span class="p">),</span>
<a name="line-5844"></a>            <span class="p">(</span><span class="s1">'SliceStart'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5845"></a>            <span class="p">(</span><span class="s1">'SliceEnd'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5846"></a>            <span class="p">(</span><span class="s1">'ScaleMagnification'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5847"></a>            <span class="p">(</span><span class="s1">'nSlices'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5848"></a>            <span class="p">(</span><span class="s1">'SliceSpacing'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5849"></a>            <span class="p">(</span><span class="s1">'CurrentSlice'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5850"></a>            <span class="p">(</span><span class="s1">'FrameInterval'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5851"></a>            <span class="p">(</span><span class="s1">'PixelAspectRatio'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5852"></a>            <span class="p">(</span><span class="s1">'ColorStart'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5853"></a>            <span class="p">(</span><span class="s1">'ColorEnd'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5854"></a>            <span class="p">(</span><span class="s1">'nColors'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-5855"></a>            <span class="p">(</span><span class="s1">'Fill1'</span><span class="p">,</span> <span class="s1">'3u2'</span><span class="p">),</span>
<a name="line-5856"></a>            <span class="p">(</span><span class="s1">'Fill2'</span><span class="p">,</span> <span class="s1">'3u2'</span><span class="p">),</span>
<a name="line-5857"></a>            <span class="p">(</span><span class="s1">'Table'</span><span class="p">,</span> <span class="s1">'u1'</span><span class="p">),</span>  <span class="c1"># NIH_COLORTABLE_TYPE</span>
<a name="line-5858"></a>            <span class="p">(</span><span class="s1">'LutMode'</span><span class="p">,</span> <span class="s1">'u1'</span><span class="p">),</span>  <span class="c1"># NIH_LUTMODE_TYPE</span>
<a name="line-5859"></a>            <span class="p">(</span><span class="s1">'InvertedTable'</span><span class="p">,</span> <span class="s1">'b1'</span><span class="p">),</span>
<a name="line-5860"></a>            <span class="p">(</span><span class="s1">'ZeroClip'</span><span class="p">,</span> <span class="s1">'b1'</span><span class="p">),</span>
<a name="line-5861"></a>            <span class="p">(</span><span class="s1">'XUnitSize'</span><span class="p">,</span> <span class="s1">'u1'</span><span class="p">),</span>
<a name="line-5862"></a>            <span class="p">(</span><span class="s1">'XUnit'</span><span class="p">,</span> <span class="s1">'a11'</span><span class="p">),</span>
<a name="line-5863"></a>            <span class="p">(</span><span class="s1">'StackType'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>  <span class="c1"># NIH_STACKTYPE_TYPE</span>
<a name="line-5864"></a>            <span class="c1"># ('UnusedBytes', 'u1', 200)</span>
<a name="line-5865"></a>        <span class="p">]</span>
<a name="line-5866"></a>
<a name="line-5867"></a>    <span class="k">def</span> <span class="nf">NIH_COLORTABLE_TYPE</span><span class="p">():</span>
<a name="line-5868"></a>        <span class="k">return</span> <span class="p">(</span><span class="s1">'CustomTable'</span><span class="p">,</span> <span class="s1">'AppleDefault'</span><span class="p">,</span> <span class="s1">'Pseudo20'</span><span class="p">,</span> <span class="s1">'Pseudo32'</span><span class="p">,</span>
<a name="line-5869"></a>                <span class="s1">'Rainbow'</span><span class="p">,</span> <span class="s1">'Fire1'</span><span class="p">,</span> <span class="s1">'Fire2'</span><span class="p">,</span> <span class="s1">'Ice'</span><span class="p">,</span> <span class="s1">'Grays'</span><span class="p">,</span> <span class="s1">'Spectrum'</span><span class="p">)</span>
<a name="line-5870"></a>
<a name="line-5871"></a>    <span class="k">def</span> <span class="nf">NIH_LUTMODE_TYPE</span><span class="p">():</span>
<a name="line-5872"></a>        <span class="k">return</span> <span class="p">(</span><span class="s1">'PseudoColor'</span><span class="p">,</span> <span class="s1">'OldAppleDefault'</span><span class="p">,</span> <span class="s1">'OldSpectrum'</span><span class="p">,</span> <span class="s1">'GrayScale'</span><span class="p">,</span>
<a name="line-5873"></a>                <span class="s1">'ColorLut'</span><span class="p">,</span> <span class="s1">'CustomGrayscale'</span><span class="p">)</span>
<a name="line-5874"></a>
<a name="line-5875"></a>    <span class="k">def</span> <span class="nf">NIH_CURVEFIT_TYPE</span><span class="p">():</span>
<a name="line-5876"></a>        <span class="k">return</span> <span class="p">(</span><span class="s1">'StraightLine'</span><span class="p">,</span> <span class="s1">'Poly2'</span><span class="p">,</span> <span class="s1">'Poly3'</span><span class="p">,</span> <span class="s1">'Poly4'</span><span class="p">,</span> <span class="s1">'Poly5'</span><span class="p">,</span> <span class="s1">'ExpoFit'</span><span class="p">,</span>
<a name="line-5877"></a>                <span class="s1">'PowerFit'</span><span class="p">,</span> <span class="s1">'LogFit'</span><span class="p">,</span> <span class="s1">'RodbardFit'</span><span class="p">,</span> <span class="s1">'SpareFit1'</span><span class="p">,</span>
<a name="line-5878"></a>                <span class="s1">'Uncalibrated'</span><span class="p">,</span> <span class="s1">'UncalibratedOD'</span><span class="p">)</span>
<a name="line-5879"></a>
<a name="line-5880"></a>    <span class="k">def</span> <span class="nf">NIH_UNITS_TYPE</span><span class="p">():</span>
<a name="line-5881"></a>        <span class="k">return</span> <span class="p">(</span><span class="s1">'Nanometers'</span><span class="p">,</span> <span class="s1">'Micrometers'</span><span class="p">,</span> <span class="s1">'Millimeters'</span><span class="p">,</span> <span class="s1">'Centimeters'</span><span class="p">,</span>
<a name="line-5882"></a>                <span class="s1">'Meters'</span><span class="p">,</span> <span class="s1">'Kilometers'</span><span class="p">,</span> <span class="s1">'Inches'</span><span class="p">,</span> <span class="s1">'Feet'</span><span class="p">,</span> <span class="s1">'Miles'</span><span class="p">,</span> <span class="s1">'Pixels'</span><span class="p">,</span>
<a name="line-5883"></a>                <span class="s1">'OtherUnits'</span><span class="p">)</span>
<a name="line-5884"></a>
<a name="line-5885"></a>    <span class="k">def</span> <span class="nf">NIH_STACKTYPE_TYPE</span><span class="p">():</span>
<a name="line-5886"></a>        <span class="k">return</span> <span class="p">(</span><span class="s1">'VolumeStack'</span><span class="p">,</span> <span class="s1">'RGBStack'</span><span class="p">,</span> <span class="s1">'MovieStack'</span><span class="p">,</span> <span class="s1">'HSVStack'</span><span class="p">)</span>
<a name="line-5887"></a>
<a name="line-5888"></a>    <span class="k">def</span> <span class="nf">TVIPS_HEADER_V1</span><span class="p">():</span>
<a name="line-5889"></a>        <span class="c1"># TVIPS TemData structure from EMMENU Help file</span>
<a name="line-5890"></a>        <span class="k">return</span> <span class="p">[</span>
<a name="line-5891"></a>            <span class="p">(</span><span class="s1">'Version'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5892"></a>            <span class="p">(</span><span class="s1">'CommentV1'</span><span class="p">,</span> <span class="s1">'a80'</span><span class="p">),</span>
<a name="line-5893"></a>            <span class="p">(</span><span class="s1">'HighTension'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5894"></a>            <span class="p">(</span><span class="s1">'SphericalAberration'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5895"></a>            <span class="p">(</span><span class="s1">'IlluminationAperture'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5896"></a>            <span class="p">(</span><span class="s1">'Magnification'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5897"></a>            <span class="p">(</span><span class="s1">'PostMagnification'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5898"></a>            <span class="p">(</span><span class="s1">'FocalLength'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5899"></a>            <span class="p">(</span><span class="s1">'Defocus'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5900"></a>            <span class="p">(</span><span class="s1">'Astigmatism'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5901"></a>            <span class="p">(</span><span class="s1">'AstigmatismDirection'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5902"></a>            <span class="p">(</span><span class="s1">'BiprismVoltage'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5903"></a>            <span class="p">(</span><span class="s1">'SpecimenTiltAngle'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5904"></a>            <span class="p">(</span><span class="s1">'SpecimenTiltDirection'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5905"></a>            <span class="p">(</span><span class="s1">'IlluminationTiltDirection'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5906"></a>            <span class="p">(</span><span class="s1">'IlluminationTiltAngle'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5907"></a>            <span class="p">(</span><span class="s1">'ImageMode'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5908"></a>            <span class="p">(</span><span class="s1">'EnergySpread'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5909"></a>            <span class="p">(</span><span class="s1">'ChromaticAberration'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5910"></a>            <span class="p">(</span><span class="s1">'ShutterType'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5911"></a>            <span class="p">(</span><span class="s1">'DefocusSpread'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5912"></a>            <span class="p">(</span><span class="s1">'CcdNumber'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5913"></a>            <span class="p">(</span><span class="s1">'CcdSize'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5914"></a>            <span class="p">(</span><span class="s1">'OffsetXV1'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5915"></a>            <span class="p">(</span><span class="s1">'OffsetYV1'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5916"></a>            <span class="p">(</span><span class="s1">'PhysicalPixelSize'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5917"></a>            <span class="p">(</span><span class="s1">'Binning'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5918"></a>            <span class="p">(</span><span class="s1">'ReadoutSpeed'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5919"></a>            <span class="p">(</span><span class="s1">'GainV1'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5920"></a>            <span class="p">(</span><span class="s1">'SensitivityV1'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5921"></a>            <span class="p">(</span><span class="s1">'ExposureTimeV1'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5922"></a>            <span class="p">(</span><span class="s1">'FlatCorrected'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5923"></a>            <span class="p">(</span><span class="s1">'DeadPxCorrected'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5924"></a>            <span class="p">(</span><span class="s1">'ImageMean'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5925"></a>            <span class="p">(</span><span class="s1">'ImageStd'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5926"></a>            <span class="p">(</span><span class="s1">'DisplacementX'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5927"></a>            <span class="p">(</span><span class="s1">'DisplacementY'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5928"></a>            <span class="p">(</span><span class="s1">'DateV1'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5929"></a>            <span class="p">(</span><span class="s1">'TimeV1'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5930"></a>            <span class="p">(</span><span class="s1">'ImageMin'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5931"></a>            <span class="p">(</span><span class="s1">'ImageMax'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5932"></a>            <span class="p">(</span><span class="s1">'ImageStatisticsQuality'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5933"></a>        <span class="p">]</span>
<a name="line-5934"></a>
<a name="line-5935"></a>    <span class="k">def</span> <span class="nf">TVIPS_HEADER_V2</span><span class="p">():</span>
<a name="line-5936"></a>        <span class="k">return</span> <span class="p">[</span>
<a name="line-5937"></a>            <span class="p">(</span><span class="s1">'ImageName'</span><span class="p">,</span> <span class="s1">'V160'</span><span class="p">),</span>  <span class="c1"># utf16</span>
<a name="line-5938"></a>            <span class="p">(</span><span class="s1">'ImageFolder'</span><span class="p">,</span> <span class="s1">'V160'</span><span class="p">),</span>
<a name="line-5939"></a>            <span class="p">(</span><span class="s1">'ImageSizeX'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5940"></a>            <span class="p">(</span><span class="s1">'ImageSizeY'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5941"></a>            <span class="p">(</span><span class="s1">'ImageSizeZ'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5942"></a>            <span class="p">(</span><span class="s1">'ImageSizeE'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5943"></a>            <span class="p">(</span><span class="s1">'ImageDataType'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5944"></a>            <span class="p">(</span><span class="s1">'Date'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5945"></a>            <span class="p">(</span><span class="s1">'Time'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5946"></a>            <span class="p">(</span><span class="s1">'Comment'</span><span class="p">,</span> <span class="s1">'V1024'</span><span class="p">),</span>
<a name="line-5947"></a>            <span class="p">(</span><span class="s1">'ImageHistory'</span><span class="p">,</span> <span class="s1">'V1024'</span><span class="p">),</span>
<a name="line-5948"></a>            <span class="p">(</span><span class="s1">'Scaling'</span><span class="p">,</span> <span class="s1">'16f4'</span><span class="p">),</span>
<a name="line-5949"></a>            <span class="p">(</span><span class="s1">'ImageStatistics'</span><span class="p">,</span> <span class="s1">'16c16'</span><span class="p">),</span>
<a name="line-5950"></a>            <span class="p">(</span><span class="s1">'ImageType'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5951"></a>            <span class="p">(</span><span class="s1">'ImageDisplaType'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5952"></a>            <span class="p">(</span><span class="s1">'PixelSizeX'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>  <span class="c1"># distance between two px in x, [nm]</span>
<a name="line-5953"></a>            <span class="p">(</span><span class="s1">'PixelSizeY'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>  <span class="c1"># distance between two px in y, [nm]</span>
<a name="line-5954"></a>            <span class="p">(</span><span class="s1">'ImageDistanceZ'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5955"></a>            <span class="p">(</span><span class="s1">'ImageDistanceE'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5956"></a>            <span class="p">(</span><span class="s1">'ImageMisc'</span><span class="p">,</span> <span class="s1">'32f4'</span><span class="p">),</span>
<a name="line-5957"></a>            <span class="p">(</span><span class="s1">'TemType'</span><span class="p">,</span> <span class="s1">'V160'</span><span class="p">),</span>
<a name="line-5958"></a>            <span class="p">(</span><span class="s1">'TemHighTension'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5959"></a>            <span class="p">(</span><span class="s1">'TemAberrations'</span><span class="p">,</span> <span class="s1">'32f4'</span><span class="p">),</span>
<a name="line-5960"></a>            <span class="p">(</span><span class="s1">'TemEnergy'</span><span class="p">,</span> <span class="s1">'32f4'</span><span class="p">),</span>
<a name="line-5961"></a>            <span class="p">(</span><span class="s1">'TemMode'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5962"></a>            <span class="p">(</span><span class="s1">'TemMagnification'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5963"></a>            <span class="p">(</span><span class="s1">'TemMagnificationCorrection'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5964"></a>            <span class="p">(</span><span class="s1">'PostMagnification'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5965"></a>            <span class="p">(</span><span class="s1">'TemStageType'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5966"></a>            <span class="p">(</span><span class="s1">'TemStagePosition'</span><span class="p">,</span> <span class="s1">'5f4'</span><span class="p">),</span>  <span class="c1"># x, y, z, a, b</span>
<a name="line-5967"></a>            <span class="p">(</span><span class="s1">'TemImageShift'</span><span class="p">,</span> <span class="s1">'2f4'</span><span class="p">),</span>
<a name="line-5968"></a>            <span class="p">(</span><span class="s1">'TemBeamShift'</span><span class="p">,</span> <span class="s1">'2f4'</span><span class="p">),</span>
<a name="line-5969"></a>            <span class="p">(</span><span class="s1">'TemBeamTilt'</span><span class="p">,</span> <span class="s1">'2f4'</span><span class="p">),</span>
<a name="line-5970"></a>            <span class="p">(</span><span class="s1">'TilingParameters'</span><span class="p">,</span> <span class="s1">'7f4'</span><span class="p">),</span>  <span class="c1"># 0: tiling? 1:x 2:y 3: max x</span>
<a name="line-5971"></a>                                          <span class="c1"># 4: max y 5: overlap x 6: overlap y</span>
<a name="line-5972"></a>            <span class="p">(</span><span class="s1">'TemIllumination'</span><span class="p">,</span> <span class="s1">'3f4'</span><span class="p">),</span>  <span class="c1"># 0: spotsize 1: intensity</span>
<a name="line-5973"></a>            <span class="p">(</span><span class="s1">'TemShutter'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5974"></a>            <span class="p">(</span><span class="s1">'TemMisc'</span><span class="p">,</span> <span class="s1">'32f4'</span><span class="p">),</span>
<a name="line-5975"></a>            <span class="p">(</span><span class="s1">'CameraType'</span><span class="p">,</span> <span class="s1">'V160'</span><span class="p">),</span>
<a name="line-5976"></a>            <span class="p">(</span><span class="s1">'PhysicalPixelSizeX'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5977"></a>            <span class="p">(</span><span class="s1">'PhysicalPixelSizeY'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5978"></a>            <span class="p">(</span><span class="s1">'OffsetX'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5979"></a>            <span class="p">(</span><span class="s1">'OffsetY'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5980"></a>            <span class="p">(</span><span class="s1">'BinningX'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5981"></a>            <span class="p">(</span><span class="s1">'BinningY'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5982"></a>            <span class="p">(</span><span class="s1">'ExposureTime'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5983"></a>            <span class="p">(</span><span class="s1">'Gain'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5984"></a>            <span class="p">(</span><span class="s1">'ReadoutRate'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5985"></a>            <span class="p">(</span><span class="s1">'FlatfieldDescription'</span><span class="p">,</span> <span class="s1">'V160'</span><span class="p">),</span>
<a name="line-5986"></a>            <span class="p">(</span><span class="s1">'Sensitivity'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5987"></a>            <span class="p">(</span><span class="s1">'Dose'</span><span class="p">,</span> <span class="s1">'f4'</span><span class="p">),</span>
<a name="line-5988"></a>            <span class="p">(</span><span class="s1">'CamMisc'</span><span class="p">,</span> <span class="s1">'32f4'</span><span class="p">),</span>
<a name="line-5989"></a>            <span class="p">(</span><span class="s1">'FeiMicroscopeInformation'</span><span class="p">,</span> <span class="s1">'V1024'</span><span class="p">),</span>
<a name="line-5990"></a>            <span class="p">(</span><span class="s1">'FeiSpecimenInformation'</span><span class="p">,</span> <span class="s1">'V1024'</span><span class="p">),</span>
<a name="line-5991"></a>            <span class="p">(</span><span class="s1">'Magic'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-5992"></a>        <span class="p">]</span>
<a name="line-5993"></a>
<a name="line-5994"></a>    <span class="k">def</span> <span class="nf">MM_HEADER</span><span class="p">():</span>
<a name="line-5995"></a>        <span class="c1"># Olympus FluoView MM_Header</span>
<a name="line-5996"></a>        <span class="n">MM_DIMENSION</span> <span class="o">=</span> <span class="p">[</span>
<a name="line-5997"></a>            <span class="p">(</span><span class="s1">'Name'</span><span class="p">,</span> <span class="s1">'a16'</span><span class="p">),</span>
<a name="line-5998"></a>            <span class="p">(</span><span class="s1">'Size'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-5999"></a>            <span class="p">(</span><span class="s1">'Origin'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-6000"></a>            <span class="p">(</span><span class="s1">'Resolution'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-6001"></a>            <span class="p">(</span><span class="s1">'Unit'</span><span class="p">,</span> <span class="s1">'a64'</span><span class="p">)]</span>
<a name="line-6002"></a>        <span class="k">return</span> <span class="p">[</span>
<a name="line-6003"></a>            <span class="p">(</span><span class="s1">'HeaderFlag'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-6004"></a>            <span class="p">(</span><span class="s1">'ImageType'</span><span class="p">,</span> <span class="s1">'u1'</span><span class="p">),</span>
<a name="line-6005"></a>            <span class="p">(</span><span class="s1">'ImageName'</span><span class="p">,</span> <span class="s1">'a257'</span><span class="p">),</span>
<a name="line-6006"></a>            <span class="p">(</span><span class="s1">'OffsetData'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-6007"></a>            <span class="p">(</span><span class="s1">'PaletteSize'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-6008"></a>            <span class="p">(</span><span class="s1">'OffsetPalette0'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-6009"></a>            <span class="p">(</span><span class="s1">'OffsetPalette1'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-6010"></a>            <span class="p">(</span><span class="s1">'CommentSize'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-6011"></a>            <span class="p">(</span><span class="s1">'OffsetComment'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-6012"></a>            <span class="p">(</span><span class="s1">'Dimensions'</span><span class="p">,</span> <span class="n">MM_DIMENSION</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span>
<a name="line-6013"></a>            <span class="p">(</span><span class="s1">'OffsetPosition'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-6014"></a>            <span class="p">(</span><span class="s1">'MapType'</span><span class="p">,</span> <span class="s1">'i2'</span><span class="p">),</span>
<a name="line-6015"></a>            <span class="p">(</span><span class="s1">'MapMin'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-6016"></a>            <span class="p">(</span><span class="s1">'MapMax'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-6017"></a>            <span class="p">(</span><span class="s1">'MinValue'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-6018"></a>            <span class="p">(</span><span class="s1">'MaxValue'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-6019"></a>            <span class="p">(</span><span class="s1">'OffsetMap'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-6020"></a>            <span class="p">(</span><span class="s1">'Gamma'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-6021"></a>            <span class="p">(</span><span class="s1">'Offset'</span><span class="p">,</span> <span class="s1">'f8'</span><span class="p">),</span>
<a name="line-6022"></a>            <span class="p">(</span><span class="s1">'GrayChannel'</span><span class="p">,</span> <span class="n">MM_DIMENSION</span><span class="p">),</span>
<a name="line-6023"></a>            <span class="p">(</span><span class="s1">'OffsetThumbnail'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-6024"></a>            <span class="p">(</span><span class="s1">'VoiceField'</span><span class="p">,</span> <span class="s1">'i4'</span><span class="p">),</span>
<a name="line-6025"></a>            <span class="p">(</span><span class="s1">'OffsetVoiceField'</span><span class="p">,</span> <span class="s1">'u4'</span><span class="p">),</span>
<a name="line-6026"></a>        <span class="p">]</span>
<a name="line-6027"></a>
<a name="line-6028"></a>    <span class="k">def</span> <span class="nf">MM_DIMENSIONS</span><span class="p">():</span>
<a name="line-6029"></a>        <span class="c1"># Map FluoView MM_Header.Dimensions to axes characters</span>
<a name="line-6030"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-6031"></a>            <span class="s1">'X'</span><span class="p">:</span> <span class="s1">'X'</span><span class="p">,</span>
<a name="line-6032"></a>            <span class="s1">'Y'</span><span class="p">:</span> <span class="s1">'Y'</span><span class="p">,</span>
<a name="line-6033"></a>            <span class="s1">'Z'</span><span class="p">:</span> <span class="s1">'Z'</span><span class="p">,</span>
<a name="line-6034"></a>            <span class="s1">'T'</span><span class="p">:</span> <span class="s1">'T'</span><span class="p">,</span>
<a name="line-6035"></a>            <span class="s1">'CH'</span><span class="p">:</span> <span class="s1">'C'</span><span class="p">,</span>
<a name="line-6036"></a>            <span class="s1">'WAVELENGTH'</span><span class="p">:</span> <span class="s1">'C'</span><span class="p">,</span>
<a name="line-6037"></a>            <span class="s1">'TIME'</span><span class="p">:</span> <span class="s1">'T'</span><span class="p">,</span>
<a name="line-6038"></a>            <span class="s1">'XY'</span><span class="p">:</span> <span class="s1">'R'</span><span class="p">,</span>
<a name="line-6039"></a>            <span class="s1">'EVENT'</span><span class="p">:</span> <span class="s1">'V'</span><span class="p">,</span>
<a name="line-6040"></a>            <span class="s1">'EXPOSURE'</span><span class="p">:</span> <span class="s1">'L'</span><span class="p">,</span>
<a name="line-6041"></a>        <span class="p">}</span>
<a name="line-6042"></a>
<a name="line-6043"></a>    <span class="k">def</span> <span class="nf">UIC_TAGS</span><span class="p">():</span>
<a name="line-6044"></a>        <span class="c1"># Map Universal Imaging Corporation MetaMorph internal tag ids to</span>
<a name="line-6045"></a>        <span class="c1"># name and type</span>
<a name="line-6046"></a>        <span class="kn">from</span> <span class="nn">fractions</span> <span class="kn">import</span> <span class="n">Fraction</span>
<a name="line-6047"></a>
<a name="line-6048"></a>        <span class="k">return</span> <span class="p">[</span>
<a name="line-6049"></a>            <span class="p">(</span><span class="s1">'AutoScale'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6050"></a>            <span class="p">(</span><span class="s1">'MinScale'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6051"></a>            <span class="p">(</span><span class="s1">'MaxScale'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6052"></a>            <span class="p">(</span><span class="s1">'SpatialCalibration'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6053"></a>            <span class="p">(</span><span class="s1">'XCalibration'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6054"></a>            <span class="p">(</span><span class="s1">'YCalibration'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6055"></a>            <span class="p">(</span><span class="s1">'CalibrationUnits'</span><span class="p">,</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6056"></a>            <span class="p">(</span><span class="s1">'Name'</span><span class="p">,</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6057"></a>            <span class="p">(</span><span class="s1">'ThreshState'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6058"></a>            <span class="p">(</span><span class="s1">'ThreshStateRed'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6059"></a>            <span class="p">(</span><span class="s1">'tagid_10'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>  <span class="c1"># undefined</span>
<a name="line-6060"></a>            <span class="p">(</span><span class="s1">'ThreshStateGreen'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6061"></a>            <span class="p">(</span><span class="s1">'ThreshStateBlue'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6062"></a>            <span class="p">(</span><span class="s1">'ThreshStateLo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6063"></a>            <span class="p">(</span><span class="s1">'ThreshStateHi'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6064"></a>            <span class="p">(</span><span class="s1">'Zoom'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6065"></a>            <span class="p">(</span><span class="s1">'CreateTime'</span><span class="p">,</span> <span class="n">julian_datetime</span><span class="p">),</span>
<a name="line-6066"></a>            <span class="p">(</span><span class="s1">'LastSavedTime'</span><span class="p">,</span> <span class="n">julian_datetime</span><span class="p">),</span>
<a name="line-6067"></a>            <span class="p">(</span><span class="s1">'currentBuffer'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6068"></a>            <span class="p">(</span><span class="s1">'grayFit'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6069"></a>            <span class="p">(</span><span class="s1">'grayPointCount'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6070"></a>            <span class="p">(</span><span class="s1">'grayX'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6071"></a>            <span class="p">(</span><span class="s1">'grayY'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6072"></a>            <span class="p">(</span><span class="s1">'grayMin'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6073"></a>            <span class="p">(</span><span class="s1">'grayMax'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6074"></a>            <span class="p">(</span><span class="s1">'grayUnitName'</span><span class="p">,</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6075"></a>            <span class="p">(</span><span class="s1">'StandardLUT'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6076"></a>            <span class="p">(</span><span class="s1">'wavelength'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6077"></a>            <span class="p">(</span><span class="s1">'StagePosition'</span><span class="p">,</span> <span class="s1">'(</span><span class="si">%i</span><span class="s1">,2,2)u4'</span><span class="p">),</span>  <span class="c1"># N xy positions as fract</span>
<a name="line-6078"></a>            <span class="p">(</span><span class="s1">'CameraChipOffset'</span><span class="p">,</span> <span class="s1">'(</span><span class="si">%i</span><span class="s1">,2,2)u4'</span><span class="p">),</span>  <span class="c1"># N xy offsets as fract</span>
<a name="line-6079"></a>            <span class="p">(</span><span class="s1">'OverlayMask'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6080"></a>            <span class="p">(</span><span class="s1">'OverlayCompress'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6081"></a>            <span class="p">(</span><span class="s1">'Overlay'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6082"></a>            <span class="p">(</span><span class="s1">'SpecialOverlayMask'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6083"></a>            <span class="p">(</span><span class="s1">'SpecialOverlayCompress'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6084"></a>            <span class="p">(</span><span class="s1">'SpecialOverlay'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6085"></a>            <span class="p">(</span><span class="s1">'ImageProperty'</span><span class="p">,</span> <span class="n">read_uic_image_property</span><span class="p">),</span>
<a name="line-6086"></a>            <span class="p">(</span><span class="s1">'StageLabel'</span><span class="p">,</span> <span class="s1">'</span><span class="si">%i</span><span class="s1">p'</span><span class="p">),</span>  <span class="c1"># N str</span>
<a name="line-6087"></a>            <span class="p">(</span><span class="s1">'AutoScaleLoInfo'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6088"></a>            <span class="p">(</span><span class="s1">'AutoScaleHiInfo'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6089"></a>            <span class="p">(</span><span class="s1">'AbsoluteZ'</span><span class="p">,</span> <span class="s1">'(</span><span class="si">%i</span><span class="s1">,2)u4'</span><span class="p">),</span>  <span class="c1"># N fractions</span>
<a name="line-6090"></a>            <span class="p">(</span><span class="s1">'AbsoluteZValid'</span><span class="p">,</span> <span class="s1">'(</span><span class="si">%i</span><span class="s1">,)u4'</span><span class="p">),</span>  <span class="c1"># N long</span>
<a name="line-6091"></a>            <span class="p">(</span><span class="s1">'Gamma'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">),</span>  <span class="c1"># 'I' uses offset</span>
<a name="line-6092"></a>            <span class="p">(</span><span class="s1">'GammaRed'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">),</span>
<a name="line-6093"></a>            <span class="p">(</span><span class="s1">'GammaGreen'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">),</span>
<a name="line-6094"></a>            <span class="p">(</span><span class="s1">'GammaBlue'</span><span class="p">,</span> <span class="s1">'I'</span><span class="p">),</span>
<a name="line-6095"></a>            <span class="p">(</span><span class="s1">'CameraBin'</span><span class="p">,</span> <span class="s1">'2I'</span><span class="p">),</span>
<a name="line-6096"></a>            <span class="p">(</span><span class="s1">'NewLUT'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6097"></a>            <span class="p">(</span><span class="s1">'ImagePropertyEx'</span><span class="p">,</span> <span class="bp">None</span><span class="p">),</span>
<a name="line-6098"></a>            <span class="p">(</span><span class="s1">'PlaneProperty'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6099"></a>            <span class="p">(</span><span class="s1">'UserLutTable'</span><span class="p">,</span> <span class="s1">'(256,3)u1'</span><span class="p">),</span>
<a name="line-6100"></a>            <span class="p">(</span><span class="s1">'RedAutoScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6101"></a>            <span class="p">(</span><span class="s1">'RedAutoScaleLoInfo'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6102"></a>            <span class="p">(</span><span class="s1">'RedAutoScaleHiInfo'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6103"></a>            <span class="p">(</span><span class="s1">'RedMinScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6104"></a>            <span class="p">(</span><span class="s1">'RedMaxScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6105"></a>            <span class="p">(</span><span class="s1">'GreenAutoScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6106"></a>            <span class="p">(</span><span class="s1">'GreenAutoScaleLoInfo'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6107"></a>            <span class="p">(</span><span class="s1">'GreenAutoScaleHiInfo'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6108"></a>            <span class="p">(</span><span class="s1">'GreenMinScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6109"></a>            <span class="p">(</span><span class="s1">'GreenMaxScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6110"></a>            <span class="p">(</span><span class="s1">'BlueAutoScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6111"></a>            <span class="p">(</span><span class="s1">'BlueAutoScaleLoInfo'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6112"></a>            <span class="p">(</span><span class="s1">'BlueAutoScaleHiInfo'</span><span class="p">,</span> <span class="n">Fraction</span><span class="p">),</span>
<a name="line-6113"></a>            <span class="p">(</span><span class="s1">'BlueMinScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6114"></a>            <span class="p">(</span><span class="s1">'BlueMaxScaleInfo'</span><span class="p">,</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6115"></a>            <span class="c1"># ('OverlayPlaneColor', read_uic_overlay_plane_color),</span>
<a name="line-6116"></a>        <span class="p">]</span>
<a name="line-6117"></a>
<a name="line-6118"></a>    <span class="k">def</span> <span class="nf">PILATUS_HEADER</span><span class="p">():</span>
<a name="line-6119"></a>        <span class="c1"># PILATUS CBF Header Specification, Version 1.4</span>
<a name="line-6120"></a>        <span class="c1"># Map key to [value_indices], type</span>
<a name="line-6121"></a>        <span class="k">return</span> <span class="p">{</span>
<a name="line-6122"></a>            <span class="s1">'Detector'</span><span class="p">:</span> <span class="p">([</span><span class="nb">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="bp">None</span><span class="p">)],</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6123"></a>            <span class="s1">'Pixel_size'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6124"></a>            <span class="s1">'Silicon'</span><span class="p">:</span> <span class="p">([</span><span class="mi">3</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6125"></a>            <span class="s1">'Exposure_time'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6126"></a>            <span class="s1">'Exposure_period'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6127"></a>            <span class="s1">'Tau'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6128"></a>            <span class="s1">'Count_cutoff'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6129"></a>            <span class="s1">'Threshold_setting'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6130"></a>            <span class="s1">'Gain_setting'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6131"></a>            <span class="s1">'N_excluded_pixels'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6132"></a>            <span class="s1">'Excluded_pixels'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6133"></a>            <span class="s1">'Flat_field'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6134"></a>            <span class="s1">'Trim_file'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6135"></a>            <span class="s1">'Image_path'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6136"></a>            <span class="c1"># optional</span>
<a name="line-6137"></a>            <span class="s1">'Wavelength'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6138"></a>            <span class="s1">'Energy_range'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6139"></a>            <span class="s1">'Detector_distance'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6140"></a>            <span class="s1">'Detector_Voffset'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6141"></a>            <span class="s1">'Beam_xy'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6142"></a>            <span class="s1">'Flux'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6143"></a>            <span class="s1">'Filter_transmission'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6144"></a>            <span class="s1">'Start_angle'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6145"></a>            <span class="s1">'Angle_increment'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6146"></a>            <span class="s1">'Detector_2theta'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6147"></a>            <span class="s1">'Polarization'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6148"></a>            <span class="s1">'Alpha'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6149"></a>            <span class="s1">'Kappa'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6150"></a>            <span class="s1">'Phi'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6151"></a>            <span class="s1">'Phi_increment'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6152"></a>            <span class="s1">'Chi'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6153"></a>            <span class="s1">'Chi_increment'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6154"></a>            <span class="s1">'Oscillation_axis'</span><span class="p">:</span> <span class="p">([</span><span class="nb">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="bp">None</span><span class="p">)],</span> <span class="nb">str</span><span class="p">),</span>
<a name="line-6155"></a>            <span class="s1">'N_oscillations'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">int</span><span class="p">),</span>
<a name="line-6156"></a>            <span class="s1">'Start_position'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6157"></a>            <span class="s1">'Position_increment'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6158"></a>            <span class="s1">'Shutter_time'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6159"></a>            <span class="s1">'Omega'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">),</span>
<a name="line-6160"></a>            <span class="s1">'Omega_increment'</span><span class="p">:</span> <span class="p">([</span><span class="mi">1</span><span class="p">],</span> <span class="nb">float</span><span class="p">)</span>
<a name="line-6161"></a>        <span class="p">}</span>
<a name="line-6162"></a>
<a name="line-6163"></a>    <span class="k">def</span> <span class="nf">REVERSE_BITORDER_BYTES</span><span class="p">():</span>
<a name="line-6164"></a>        <span class="c1"># Bytes with reversed bitorder</span>
<a name="line-6165"></a>        <span class="k">return</span> <span class="p">(</span>
<a name="line-6166"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\x00\x80</span><span class="s1">@</span><span class="se">\xc0</span><span class="s1"> </span><span class="se">\xa0</span><span class="s1">`</span><span class="se">\xe0\x10\x90</span><span class="s1">P</span><span class="se">\xd0</span><span class="s1">0</span><span class="se">\xb0</span><span class="s1">p</span><span class="se">\xf0\x08\x88</span><span class="s1">H</span><span class="se">\xc8</span><span class="s1">('</span>
<a name="line-6167"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\xa8</span><span class="s1">h</span><span class="se">\xe8\x18\x98</span><span class="s1">X</span><span class="se">\xd8</span><span class="s1">8</span><span class="se">\xb8</span><span class="s1">x</span><span class="se">\xf8\x04\x84</span><span class="s1">D</span><span class="se">\xc4</span><span class="s1">$</span><span class="se">\xa4</span><span class="s1">d</span><span class="se">\xe4\x14</span><span class="s1">'</span>
<a name="line-6168"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\x94</span><span class="s1">T</span><span class="se">\xd4</span><span class="s1">4</span><span class="se">\xb4</span><span class="s1">t</span><span class="se">\xf4\x0c\x8c</span><span class="s1">L</span><span class="se">\xcc</span><span class="s1">,</span><span class="se">\xac</span><span class="s1">l</span><span class="se">\xec\x1c\x9c\\\xdc</span><span class="s1">&lt;</span><span class="se">\xbc</span><span class="s1">|'</span>
<a name="line-6169"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\xfc\x02\x82</span><span class="s1">B</span><span class="se">\xc2</span><span class="s1">"</span><span class="se">\xa2</span><span class="s1">b</span><span class="se">\xe2\x12\x92</span><span class="s1">R</span><span class="se">\xd2</span><span class="s1">2</span><span class="se">\xb2</span><span class="s1">r</span><span class="se">\xf2\n\x8a</span><span class="s1">J</span><span class="se">\xca</span><span class="s1">*'</span>
<a name="line-6170"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\xaa</span><span class="s1">j</span><span class="se">\xea\x1a\x9a</span><span class="s1">Z</span><span class="se">\xda</span><span class="s1">:</span><span class="se">\xba</span><span class="s1">z</span><span class="se">\xfa\x06\x86</span><span class="s1">F</span><span class="se">\xc6</span><span class="s1">&amp;</span><span class="se">\xa6</span><span class="s1">f</span><span class="se">\xe6\x16</span><span class="s1">'</span>
<a name="line-6171"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\x96</span><span class="s1">V</span><span class="se">\xd6</span><span class="s1">6</span><span class="se">\xb6</span><span class="s1">v</span><span class="se">\xf6\x0e\x8e</span><span class="s1">N</span><span class="se">\xce</span><span class="s1">.</span><span class="se">\xae</span><span class="s1">n</span><span class="se">\xee\x1e\x9e</span><span class="s1">^</span><span class="se">\xde</span><span class="s1">&gt;</span><span class="se">\xbe</span><span class="s1">~'</span>
<a name="line-6172"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\xfe\x01\x81</span><span class="s1">A</span><span class="se">\xc1</span><span class="s1">!</span><span class="se">\xa1</span><span class="s1">a</span><span class="se">\xe1\x11\x91</span><span class="s1">Q</span><span class="se">\xd1</span><span class="s1">1</span><span class="se">\xb1</span><span class="s1">q</span><span class="se">\xf1\t\x89</span><span class="s1">I</span><span class="se">\xc9</span><span class="s1">)'</span>
<a name="line-6173"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\xa9</span><span class="s1">i</span><span class="se">\xe9\x19\x99</span><span class="s1">Y</span><span class="se">\xd9</span><span class="s1">9</span><span class="se">\xb9</span><span class="s1">y</span><span class="se">\xf9\x05\x85</span><span class="s1">E</span><span class="se">\xc5</span><span class="s1">%</span><span class="se">\xa5</span><span class="s1">e</span><span class="se">\xe5\x15</span><span class="s1">'</span>
<a name="line-6174"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\x95</span><span class="s1">U</span><span class="se">\xd5</span><span class="s1">5</span><span class="se">\xb5</span><span class="s1">u</span><span class="se">\xf5\r\x8d</span><span class="s1">M</span><span class="se">\xcd</span><span class="s1">-</span><span class="se">\xad</span><span class="s1">m</span><span class="se">\xed\x1d\x9d</span><span class="s1">]</span><span class="se">\xdd</span><span class="s1">=</span><span class="se">\xbd</span><span class="s1">}'</span>
<a name="line-6175"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\xfd\x03\x83</span><span class="s1">C</span><span class="se">\xc3</span><span class="s1">#</span><span class="se">\xa3</span><span class="s1">c</span><span class="se">\xe3\x13\x93</span><span class="s1">S</span><span class="se">\xd3</span><span class="s1">3</span><span class="se">\xb3</span><span class="s1">s</span><span class="se">\xf3\x0b\x8b</span><span class="s1">K'</span>
<a name="line-6176"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\xcb</span><span class="s1">+</span><span class="se">\xab</span><span class="s1">k</span><span class="se">\xeb\x1b\x9b</span><span class="s1">[</span><span class="se">\xdb</span><span class="s1">;</span><span class="se">\xbb</span><span class="s1">{</span><span class="se">\xfb\x07\x87</span><span class="s1">G</span><span class="se">\xc7\'\xa7</span><span class="s1">g</span><span class="se">\xe7</span><span class="s1">'</span>
<a name="line-6177"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\x17\x97</span><span class="s1">W</span><span class="se">\xd7</span><span class="s1">7</span><span class="se">\xb7</span><span class="s1">w</span><span class="se">\xf7\x0f\x8f</span><span class="s1">O</span><span class="se">\xcf</span><span class="s1">/</span><span class="se">\xaf</span><span class="s1">o</span><span class="se">\xef\x1f\x9f</span><span class="s1">_'</span>
<a name="line-6178"></a>            <span class="sa">b</span><span class="s1">'</span><span class="se">\xdf</span><span class="s1">?</span><span class="se">\xbf\x7f\xff</span><span class="s1">'</span><span class="p">)</span>
<a name="line-6179"></a>
<a name="line-6180"></a>    <span class="k">def</span> <span class="nf">REVERSE_BITORDER_ARRAY</span><span class="p">():</span>
<a name="line-6181"></a>        <span class="c1"># Numpy array of bytes with reversed bitorder</span>
<a name="line-6182"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">REVERSE_BITORDER_BYTES</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="s1">'uint8'</span><span class="p">)</span>
<a name="line-6183"></a>
<a name="line-6184"></a>    <span class="k">def</span> <span class="nf">ALLOCATIONGRANULARITY</span><span class="p">():</span>
<a name="line-6185"></a>        <span class="c1"># alignment for writing contiguous data to TIFF</span>
<a name="line-6186"></a>        <span class="kn">import</span> <span class="nn">mmap</span>  <span class="c1"># delayed import</span>
<a name="line-6187"></a>        <span class="k">return</span> <span class="n">mmap</span><span class="o">.</span><span class="n">ALLOCATIONGRANULARITY</span>
<a name="line-6188"></a>
<a name="line-6189"></a>    <span class="c1"># Max line length of printed output</span>
<a name="line-6190"></a>    <span class="n">PRINT_LINE_WIDTH</span> <span class="o">=</span> <span class="mi">100</span>
<a name="line-6191"></a>
<a name="line-6192"></a>    <span class="c1"># Max number of lines to print</span>
<a name="line-6193"></a>    <span class="n">PRINT_MAX_LINES</span> <span class="o">=</span> <span class="mi">512</span>
<a name="line-6194"></a>
<a name="line-6195"></a>
<a name="line-6196"></a><span class="k">def</span> <span class="nf">read_tags</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">,</span> <span class="n">tagnames</span><span class="p">,</span>
<a name="line-6197"></a>              <span class="n">customtags</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">maxifds</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-6198"></a>    <span class="sd">"""Read tags from chain of IFDs and return as list of dicts.</span>
<a name="line-6199"></a>
<a name="line-6200"></a><span class="sd">    The file handle position must be at a valid IFD header.</span>
<a name="line-6201"></a>
<a name="line-6202"></a><span class="sd">    """</span>
<a name="line-6203"></a>    <span class="k">if</span> <span class="n">offsetsize</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
<a name="line-6204"></a>        <span class="n">offsetformat</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'I'</span>
<a name="line-6205"></a>        <span class="n">tagnosize</span> <span class="o">=</span> <span class="mi">2</span>
<a name="line-6206"></a>        <span class="n">tagnoformat</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'H'</span>
<a name="line-6207"></a>        <span class="n">tagsize</span> <span class="o">=</span> <span class="mi">12</span>
<a name="line-6208"></a>        <span class="n">tagformat1</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'HH'</span>
<a name="line-6209"></a>        <span class="n">tagformat2</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'I4s'</span>
<a name="line-6210"></a>    <span class="k">elif</span> <span class="n">offsetsize</span> <span class="o">==</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-6211"></a>        <span class="n">offsetformat</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'Q'</span>
<a name="line-6212"></a>        <span class="n">tagnosize</span> <span class="o">=</span> <span class="mi">8</span>
<a name="line-6213"></a>        <span class="n">tagnoformat</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'Q'</span>
<a name="line-6214"></a>        <span class="n">tagsize</span> <span class="o">=</span> <span class="mi">20</span>
<a name="line-6215"></a>        <span class="n">tagformat1</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'HH'</span>
<a name="line-6216"></a>        <span class="n">tagformat2</span> <span class="o">=</span> <span class="n">byteorder</span><span class="o">+</span><span class="s1">'Q8s'</span>
<a name="line-6217"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-6218"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid offset size"</span><span class="p">)</span>
<a name="line-6219"></a>
<a name="line-6220"></a>    <span class="k">if</span> <span class="n">customtags</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-6221"></a>        <span class="n">customtags</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6222"></a>    <span class="k">if</span> <span class="n">maxifds</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-6223"></a>        <span class="n">maxifds</span> <span class="o">=</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span>
<a name="line-6224"></a>
<a name="line-6225"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-6226"></a>    <span class="n">unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span>
<a name="line-6227"></a>    <span class="n">offset</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-6228"></a>    <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">maxifds</span><span class="p">:</span>
<a name="line-6229"></a>        <span class="c1"># loop over IFDs</span>
<a name="line-6230"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-6231"></a>            <span class="n">tagno</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">tagnoformat</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">tagnosize</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6232"></a>            <span class="k">if</span> <span class="n">tagno</span> <span class="o">&gt;</span> <span class="mi">4096</span><span class="p">:</span>
<a name="line-6233"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"suspicious number of tags"</span><span class="p">)</span>
<a name="line-6234"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-6235"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"corrupted tag list at offset </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="n">offset</span><span class="p">)</span>
<a name="line-6236"></a>            <span class="k">break</span>
<a name="line-6237"></a>
<a name="line-6238"></a>        <span class="n">tags</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6239"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">tagsize</span> <span class="o">*</span> <span class="n">tagno</span><span class="p">)</span>
<a name="line-6240"></a>        <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-6241"></a>        <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-6242"></a>        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tagno</span><span class="p">):</span>
<a name="line-6243"></a>            <span class="n">code</span><span class="p">,</span> <span class="n">type_</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">tagformat1</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="n">index</span><span class="p">:</span><span class="n">index</span><span class="o">+</span><span class="mi">4</span><span class="p">])</span>
<a name="line-6244"></a>            <span class="n">count</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">tagformat2</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="n">index</span><span class="o">+</span><span class="mi">4</span><span class="p">:</span><span class="n">index</span><span class="o">+</span><span class="n">tagsize</span><span class="p">])</span>
<a name="line-6245"></a>            <span class="n">index</span> <span class="o">+=</span> <span class="n">tagsize</span>
<a name="line-6246"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">tagnames</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">code</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="n">code</span><span class="p">))</span>
<a name="line-6247"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-6248"></a>                <span class="n">dtype</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">DATA_FORMATS</span><span class="p">[</span><span class="n">type_</span><span class="p">]</span>
<a name="line-6249"></a>            <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
<a name="line-6250"></a>                <span class="k">raise</span> <span class="n">TiffTag</span><span class="o">.</span><span class="n">Error</span><span class="p">(</span><span class="s2">"unknown tag data type </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="n">type_</span><span class="p">)</span>
<a name="line-6251"></a>
<a name="line-6252"></a>            <span class="n">fmt</span> <span class="o">=</span> <span class="s1">'</span><span class="si">%s%i%s</span><span class="s1">'</span> <span class="o">%</span> <span class="p">(</span><span class="n">byteorder</span><span class="p">,</span> <span class="n">count</span> <span class="o">*</span> <span class="nb">int</span><span class="p">(</span><span class="n">dtype</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="n">dtype</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-6253"></a>            <span class="n">size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">calcsize</span><span class="p">(</span><span class="n">fmt</span><span class="p">)</span>
<a name="line-6254"></a>            <span class="k">if</span> <span class="n">size</span> <span class="o">&gt;</span> <span class="n">offsetsize</span> <span class="ow">or</span> <span class="n">code</span> <span class="ow">in</span> <span class="n">customtags</span><span class="p">:</span>
<a name="line-6255"></a>                <span class="n">offset</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">value</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6256"></a>                <span class="k">if</span> <span class="n">offset</span> <span class="o">&lt;</span> <span class="mi">8</span> <span class="ow">or</span> <span class="n">offset</span> <span class="o">&gt;</span> <span class="n">fh</span><span class="o">.</span><span class="n">size</span> <span class="o">-</span> <span class="n">size</span><span class="p">:</span>
<a name="line-6257"></a>                    <span class="k">raise</span> <span class="n">TiffTag</span><span class="o">.</span><span class="n">Error</span><span class="p">(</span><span class="s2">"invalid tag value offset"</span><span class="p">)</span>
<a name="line-6258"></a>                <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset</span><span class="p">)</span>
<a name="line-6259"></a>                <span class="k">if</span> <span class="n">code</span> <span class="ow">in</span> <span class="n">customtags</span><span class="p">:</span>
<a name="line-6260"></a>                    <span class="n">readfunc</span> <span class="o">=</span> <span class="n">customtags</span><span class="p">[</span><span class="n">code</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6261"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="n">readfunc</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">)</span>
<a name="line-6262"></a>                <span class="k">elif</span> <span class="n">code</span> <span class="ow">in</span> <span class="n">tagnames</span> <span class="ow">or</span> <span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'s'</span><span class="p">:</span>
<a name="line-6263"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">fmt</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">))</span>
<a name="line-6264"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-6265"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="n">read_numpy</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">)</span>
<a name="line-6266"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-6267"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">fmt</span><span class="p">,</span> <span class="n">value</span><span class="p">[:</span><span class="n">size</span><span class="p">])</span>
<a name="line-6268"></a>
<a name="line-6269"></a>            <span class="k">if</span> <span class="n">code</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">customtags</span> <span class="ow">and</span> <span class="n">code</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TAG_TUPLE</span><span class="p">:</span>
<a name="line-6270"></a>                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-6271"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6272"></a>            <span class="k">if</span> <span class="n">type_</span> <span class="o">!=</span> <span class="mi">7</span> <span class="ow">and</span> <span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'s'</span> <span class="ow">and</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">):</span>
<a name="line-6273"></a>                <span class="c1"># TIFF ASCII fields can contain multiple strings,</span>
<a name="line-6274"></a>                <span class="c1">#   each terminated with a NUL</span>
<a name="line-6275"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">stripascii</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
<a name="line-6276"></a>
<a name="line-6277"></a>            <span class="n">tags</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-6278"></a>
<a name="line-6279"></a>        <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">tags</span><span class="p">)</span>
<a name="line-6280"></a>        <span class="c1"># read offset to next page</span>
<a name="line-6281"></a>        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>
<a name="line-6282"></a>        <span class="n">offset</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">offsetformat</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">offsetsize</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6283"></a>        <span class="k">if</span> <span class="n">offset</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-6284"></a>            <span class="k">break</span>
<a name="line-6285"></a>        <span class="k">if</span> <span class="n">offset</span> <span class="o">&gt;=</span> <span class="n">fh</span><span class="o">.</span><span class="n">size</span><span class="p">:</span>
<a name="line-6286"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid page offset (</span><span class="si">%i</span><span class="s2">)"</span> <span class="o">%</span> <span class="n">offset</span><span class="p">)</span>
<a name="line-6287"></a>            <span class="k">break</span>
<a name="line-6288"></a>        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset</span><span class="p">)</span>
<a name="line-6289"></a>
<a name="line-6290"></a>    <span class="k">if</span> <span class="n">maxifds</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-6291"></a>        <span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6292"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6293"></a>
<a name="line-6294"></a>
<a name="line-6295"></a><span class="k">def</span> <span class="nf">read_exif_ifd</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6296"></a>    <span class="sd">"""Read EXIF tags from file and return as dict."""</span>
<a name="line-6297"></a>    <span class="n">tags</span> <span class="o">=</span> <span class="n">read_tags</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">,</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">EXIF_TAGS</span><span class="p">,</span> <span class="n">maxifds</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<a name="line-6298"></a>    <span class="k">if</span> <span class="s1">'ExifVersion'</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">:</span>
<a name="line-6299"></a>        <span class="n">tags</span><span class="p">[</span><span class="s1">'ExifVersion'</span><span class="p">]</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">tags</span><span class="p">[</span><span class="s1">'ExifVersion'</span><span class="p">])</span>
<a name="line-6300"></a>    <span class="k">return</span> <span class="n">tags</span>
<a name="line-6301"></a>
<a name="line-6302"></a>
<a name="line-6303"></a><span class="k">def</span> <span class="nf">read_gps_ifd</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6304"></a>    <span class="sd">"""Read GPS tags from file and return as dict."""</span>
<a name="line-6305"></a>    <span class="k">return</span> <span class="n">read_tags</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">,</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">GPS_TAGS</span><span class="p">,</span> <span class="n">maxifds</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<a name="line-6306"></a>
<a name="line-6307"></a>
<a name="line-6308"></a><span class="k">def</span> <span class="nf">read_interoperability_ifd</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6309"></a>    <span class="sd">"""Read Interoperability tags from file and return as dict."""</span>
<a name="line-6310"></a>    <span class="n">tag_names</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">:</span> <span class="s1">'InteroperabilityIndex'</span><span class="p">}</span>
<a name="line-6311"></a>    <span class="k">return</span> <span class="n">read_tags</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">,</span> <span class="n">tag_names</span><span class="p">,</span> <span class="n">maxifds</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<a name="line-6312"></a>
<a name="line-6313"></a>
<a name="line-6314"></a><span class="k">def</span> <span class="nf">read_bytes</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6315"></a>    <span class="sd">"""Read tag data from file and return as byte string."""</span>
<a name="line-6316"></a>    <span class="n">dtype</span> <span class="o">=</span> <span class="s1">'b'</span> <span class="k">if</span> <span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'s'</span> <span class="k">else</span> <span class="n">byteorder</span><span class="o">+</span><span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6317"></a>    <span class="k">return</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span><span class="o">.</span><span class="n">tostring</span><span class="p">()</span>
<a name="line-6318"></a>
<a name="line-6319"></a>
<a name="line-6320"></a><span class="k">def</span> <span class="nf">read_utf8</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6321"></a>    <span class="sd">"""Read tag data from file and return as unicode string."""</span>
<a name="line-6322"></a>    <span class="k">return</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">count</span><span class="p">)</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">'utf-8'</span><span class="p">)</span>
<a name="line-6323"></a>
<a name="line-6324"></a>
<a name="line-6325"></a><span class="k">def</span> <span class="nf">read_numpy</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6326"></a>    <span class="sd">"""Read tag data from file and return as numpy array."""</span>
<a name="line-6327"></a>    <span class="n">dtype</span> <span class="o">=</span> <span class="s1">'b'</span> <span class="k">if</span> <span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'s'</span> <span class="k">else</span> <span class="n">byteorder</span><span class="o">+</span><span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6328"></a>    <span class="k">return</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">)</span>
<a name="line-6329"></a>
<a name="line-6330"></a>
<a name="line-6331"></a><span class="k">def</span> <span class="nf">read_colormap</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6332"></a>    <span class="sd">"""Read ColorMap data from file and return as numpy array."""</span>
<a name="line-6333"></a>    <span class="n">cmap</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="n">dtype</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="n">count</span><span class="p">)</span>
<a name="line-6334"></a>    <span class="n">cmap</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-6335"></a>    <span class="k">return</span> <span class="n">cmap</span>
<a name="line-6336"></a>
<a name="line-6337"></a>
<a name="line-6338"></a><span class="k">def</span> <span class="nf">read_json</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6339"></a>    <span class="sd">"""Read JSON tag data from file and return as object."""</span>
<a name="line-6340"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
<a name="line-6341"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-6342"></a>        <span class="k">return</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="nb">unicode</span><span class="p">(</span><span class="n">stripnull</span><span class="p">(</span><span class="n">data</span><span class="p">),</span> <span class="s1">'utf-8'</span><span class="p">))</span>
<a name="line-6343"></a>    <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-6344"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid JSON '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="n">data</span><span class="p">)</span>
<a name="line-6345"></a>
<a name="line-6346"></a>
<a name="line-6347"></a><span class="k">def</span> <span class="nf">read_mm_header</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6348"></a>    <span class="sd">"""Read FluoView mm_header tag from file and return as dict."""</span>
<a name="line-6349"></a>    <span class="n">mmh</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_record</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">MM_HEADER</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-6350"></a>    <span class="n">mmh</span> <span class="o">=</span> <span class="n">recarray2dict</span><span class="p">(</span><span class="n">mmh</span><span class="p">)</span>
<a name="line-6351"></a>    <span class="n">mmh</span><span class="p">[</span><span class="s1">'Dimensions'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span>
<a name="line-6352"></a>        <span class="p">(</span><span class="n">bytes2str</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">.</span><span class="n">strip</span><span class="p">(),</span> <span class="n">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">d</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">d</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
<a name="line-6353"></a>        <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="n">mmh</span><span class="p">[</span><span class="s1">'Dimensions'</span><span class="p">]]</span>
<a name="line-6354"></a>    <span class="n">d</span> <span class="o">=</span> <span class="n">mmh</span><span class="p">[</span><span class="s1">'GrayChannel'</span><span class="p">]</span>
<a name="line-6355"></a>    <span class="n">mmh</span><span class="p">[</span><span class="s1">'GrayChannel'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span>
<a name="line-6356"></a>        <span class="n">bytes2str</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">.</span><span class="n">strip</span><span class="p">(),</span> <span class="n">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">d</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">d</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">d</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
<a name="line-6357"></a>    <span class="k">return</span> <span class="n">mmh</span>
<a name="line-6358"></a>
<a name="line-6359"></a>
<a name="line-6360"></a><span class="k">def</span> <span class="nf">read_mm_stamp</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6361"></a>    <span class="sd">"""Read FluoView mm_stamp tag from file and return as numpy.ndarray."""</span>
<a name="line-6362"></a>    <span class="k">return</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="s1">'f8'</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span>
<a name="line-6363"></a>
<a name="line-6364"></a>
<a name="line-6365"></a><span class="k">def</span> <span class="nf">read_uic1tag</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">,</span> <span class="n">planecount</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-6366"></a>    <span class="sd">"""Read MetaMorph STK UIC1Tag from file and return as dict.</span>
<a name="line-6367"></a>
<a name="line-6368"></a><span class="sd">    Return empty dictionary if planecount is unknown.</span>
<a name="line-6369"></a>
<a name="line-6370"></a><span class="sd">    """</span>
<a name="line-6371"></a>    <span class="k">assert</span> <span class="n">dtype</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'2I'</span><span class="p">,</span> <span class="s1">'1I'</span><span class="p">)</span> <span class="ow">and</span> <span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'&lt;'</span>
<a name="line-6372"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6373"></a>    <span class="k">if</span> <span class="n">dtype</span> <span class="o">==</span> <span class="s1">'2I'</span><span class="p">:</span>
<a name="line-6374"></a>        <span class="c1"># pre MetaMorph 2.5 (not tested)</span>
<a name="line-6375"></a>        <span class="n">values</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="s1">'&lt;u4'</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">count</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">count</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-6376"></a>        <span class="n">result</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'ZDistance'</span><span class="p">:</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]}</span>
<a name="line-6377"></a>    <span class="k">elif</span> <span class="n">planecount</span><span class="p">:</span>
<a name="line-6378"></a>        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">count</span><span class="p">):</span>
<a name="line-6379"></a>            <span class="n">tagid</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;I'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6380"></a>            <span class="k">if</span> <span class="n">tagid</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">28</span><span class="p">,</span> <span class="mi">29</span><span class="p">,</span> <span class="mi">37</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">41</span><span class="p">):</span>
<a name="line-6381"></a>                <span class="c1"># silently skip unexpected tags</span>
<a name="line-6382"></a>                <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<a name="line-6383"></a>                <span class="k">continue</span>
<a name="line-6384"></a>            <span class="n">name</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">read_uic_tag</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">tagid</span><span class="p">,</span> <span class="n">planecount</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-6385"></a>            <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-6386"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6387"></a>
<a name="line-6388"></a>
<a name="line-6389"></a><span class="k">def</span> <span class="nf">read_uic2tag</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">planecount</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6390"></a>    <span class="sd">"""Read MetaMorph STK UIC2Tag from file and return as dict."""</span>
<a name="line-6391"></a>    <span class="k">assert</span> <span class="n">dtype</span> <span class="o">==</span> <span class="s1">'2I'</span> <span class="ow">and</span> <span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'&lt;'</span>
<a name="line-6392"></a>    <span class="n">values</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="s1">'&lt;u4'</span><span class="p">,</span> <span class="mi">6</span><span class="o">*</span><span class="n">planecount</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">planecount</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
<a name="line-6393"></a>    <span class="k">return</span> <span class="p">{</span>
<a name="line-6394"></a>        <span class="s1">'ZDistance'</span><span class="p">:</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">],</span>
<a name="line-6395"></a>        <span class="s1">'DateCreated'</span><span class="p">:</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">2</span><span class="p">],</span>  <span class="c1"># julian days</span>
<a name="line-6396"></a>        <span class="s1">'TimeCreated'</span><span class="p">:</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">3</span><span class="p">],</span>  <span class="c1"># milliseconds</span>
<a name="line-6397"></a>        <span class="s1">'DateModified'</span><span class="p">:</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">4</span><span class="p">],</span>  <span class="c1"># julian days</span>
<a name="line-6398"></a>        <span class="s1">'TimeModified'</span><span class="p">:</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">5</span><span class="p">]}</span>  <span class="c1"># milliseconds</span>
<a name="line-6399"></a>
<a name="line-6400"></a>
<a name="line-6401"></a><span class="k">def</span> <span class="nf">read_uic3tag</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">planecount</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6402"></a>    <span class="sd">"""Read MetaMorph STK UIC3Tag from file and return as dict."""</span>
<a name="line-6403"></a>    <span class="k">assert</span> <span class="n">dtype</span> <span class="o">==</span> <span class="s1">'2I'</span> <span class="ow">and</span> <span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'&lt;'</span>
<a name="line-6404"></a>    <span class="n">values</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="s1">'&lt;u4'</span><span class="p">,</span> <span class="mi">2</span><span class="o">*</span><span class="n">planecount</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">planecount</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-6405"></a>    <span class="k">return</span> <span class="p">{</span><span class="s1">'Wavelengths'</span><span class="p">:</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">values</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]}</span>
<a name="line-6406"></a>
<a name="line-6407"></a>
<a name="line-6408"></a><span class="k">def</span> <span class="nf">read_uic4tag</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">planecount</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6409"></a>    <span class="sd">"""Read MetaMorph STK UIC4Tag from file and return as dict."""</span>
<a name="line-6410"></a>    <span class="k">assert</span> <span class="n">dtype</span> <span class="o">==</span> <span class="s1">'1I'</span> <span class="ow">and</span> <span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'&lt;'</span>
<a name="line-6411"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6412"></a>    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-6413"></a>        <span class="n">tagid</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;H'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">2</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6414"></a>        <span class="k">if</span> <span class="n">tagid</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-6415"></a>            <span class="k">break</span>
<a name="line-6416"></a>        <span class="n">name</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">read_uic_tag</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">tagid</span><span class="p">,</span> <span class="n">planecount</span><span class="p">,</span> <span class="n">offset</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<a name="line-6417"></a>        <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-6418"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6419"></a>
<a name="line-6420"></a>
<a name="line-6421"></a><span class="k">def</span> <span class="nf">read_uic_tag</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">tagid</span><span class="p">,</span> <span class="n">planecount</span><span class="p">,</span> <span class="n">offset</span><span class="p">):</span>
<a name="line-6422"></a>    <span class="sd">"""Read a single UIC tag value from file and return tag name and value.</span>
<a name="line-6423"></a>
<a name="line-6424"></a><span class="sd">    UIC1Tags use an offset.</span>
<a name="line-6425"></a>
<a name="line-6426"></a><span class="sd">    """</span>
<a name="line-6427"></a>    <span class="k">def</span> <span class="nf">read_int</span><span class="p">(</span><span class="n">count</span><span class="o">=</span><span class="mi">1</span><span class="p">):</span>
<a name="line-6428"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;</span><span class="si">%i</span><span class="s1">I'</span> <span class="o">%</span> <span class="n">count</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="o">*</span><span class="n">count</span><span class="p">))</span>
<a name="line-6429"></a>        <span class="k">return</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">if</span> <span class="n">count</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">else</span> <span class="n">value</span>
<a name="line-6430"></a>
<a name="line-6431"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-6432"></a>        <span class="n">name</span><span class="p">,</span> <span class="n">dtype</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">UIC_TAGS</span><span class="p">[</span><span class="n">tagid</span><span class="p">]</span>
<a name="line-6433"></a>    <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-6434"></a>        <span class="c1"># unknown tag</span>
<a name="line-6435"></a>        <span class="k">return</span> <span class="s1">'_TagId</span><span class="si">%i</span><span class="s1">'</span> <span class="o">%</span> <span class="n">tagid</span><span class="p">,</span> <span class="n">read_int</span><span class="p">()</span>
<a name="line-6436"></a>
<a name="line-6437"></a>    <span class="n">Fraction</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">UIC_TAGS</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6438"></a>
<a name="line-6439"></a>    <span class="k">if</span> <span class="n">offset</span><span class="p">:</span>
<a name="line-6440"></a>        <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-6441"></a>        <span class="k">if</span> <span class="n">dtype</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="bp">None</span><span class="p">):</span>
<a name="line-6442"></a>            <span class="n">off</span> <span class="o">=</span> <span class="n">read_int</span><span class="p">()</span>
<a name="line-6443"></a>            <span class="k">if</span> <span class="n">off</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-6444"></a>                <span class="k">if</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="nb">str</span><span class="p">:</span>
<a name="line-6445"></a>                    <span class="k">return</span> <span class="n">name</span><span class="p">,</span> <span class="s1">''</span>
<a name="line-6446"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid offset for uic tag '</span><span class="si">%s</span><span class="s2">': </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span>
<a name="line-6447"></a>                              <span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">off</span><span class="p">))</span>
<a name="line-6448"></a>                <span class="k">return</span> <span class="n">name</span><span class="p">,</span> <span class="n">off</span>
<a name="line-6449"></a>            <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">off</span><span class="p">)</span>
<a name="line-6450"></a>
<a name="line-6451"></a>    <span class="k">if</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-6452"></a>        <span class="c1"># skip</span>
<a name="line-6453"></a>        <span class="n">name</span> <span class="o">=</span> <span class="s1">'_'</span> <span class="o">+</span> <span class="n">name</span>
<a name="line-6454"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">read_int</span><span class="p">()</span>
<a name="line-6455"></a>    <span class="k">elif</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="nb">int</span><span class="p">:</span>
<a name="line-6456"></a>        <span class="c1"># int</span>
<a name="line-6457"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">read_int</span><span class="p">()</span>
<a name="line-6458"></a>    <span class="k">elif</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="n">Fraction</span><span class="p">:</span>
<a name="line-6459"></a>        <span class="c1"># fraction</span>
<a name="line-6460"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">read_int</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<a name="line-6461"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6462"></a>    <span class="k">elif</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="n">julian_datetime</span><span class="p">:</span>
<a name="line-6463"></a>        <span class="c1"># datetime</span>
<a name="line-6464"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">julian_datetime</span><span class="p">(</span><span class="o">*</span><span class="n">read_int</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
<a name="line-6465"></a>    <span class="k">elif</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="n">read_uic_image_property</span><span class="p">:</span>
<a name="line-6466"></a>        <span class="c1"># ImagePropertyEx</span>
<a name="line-6467"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">read_uic_image_property</span><span class="p">(</span><span class="n">fh</span><span class="p">)</span>
<a name="line-6468"></a>    <span class="k">elif</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="nb">str</span><span class="p">:</span>
<a name="line-6469"></a>        <span class="c1"># pascal string</span>
<a name="line-6470"></a>        <span class="n">size</span> <span class="o">=</span> <span class="n">read_int</span><span class="p">()</span>
<a name="line-6471"></a>        <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">**</span><span class="mi">10</span><span class="p">:</span>
<a name="line-6472"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'</span><span class="si">%i</span><span class="s1">s'</span> <span class="o">%</span> <span class="n">size</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">))[</span><span class="mi">0</span><span class="p">][:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6473"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">stripnull</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
<a name="line-6474"></a>        <span class="k">elif</span> <span class="n">offset</span><span class="p">:</span>
<a name="line-6475"></a>            <span class="n">value</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-6476"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"corrupt string in uic tag '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="n">name</span><span class="p">)</span>
<a name="line-6477"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-6478"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid string size </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="n">size</span><span class="p">)</span>
<a name="line-6479"></a>    <span class="k">elif</span> <span class="n">dtype</span> <span class="o">==</span> <span class="s1">'</span><span class="si">%i</span><span class="s1">p'</span><span class="p">:</span>
<a name="line-6480"></a>        <span class="c1"># sequence of pascal strings</span>
<a name="line-6481"></a>        <span class="n">value</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-6482"></a>        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">planecount</span><span class="p">):</span>
<a name="line-6483"></a>            <span class="n">size</span> <span class="o">=</span> <span class="n">read_int</span><span class="p">()</span>
<a name="line-6484"></a>            <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">**</span><span class="mi">10</span><span class="p">:</span>
<a name="line-6485"></a>                <span class="n">string</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'</span><span class="si">%i</span><span class="s1">s'</span> <span class="o">%</span> <span class="n">size</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">))[</span><span class="mi">0</span><span class="p">][:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6486"></a>                <span class="n">string</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">stripnull</span><span class="p">(</span><span class="n">string</span><span class="p">))</span>
<a name="line-6487"></a>                <span class="n">value</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
<a name="line-6488"></a>            <span class="k">elif</span> <span class="n">offset</span><span class="p">:</span>
<a name="line-6489"></a>                <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"corrupt string in uic tag '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="n">name</span><span class="p">)</span>
<a name="line-6490"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-6491"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid string size </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="n">size</span><span class="p">)</span>
<a name="line-6492"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-6493"></a>        <span class="c1"># struct or numpy type</span>
<a name="line-6494"></a>        <span class="n">dtype</span> <span class="o">=</span> <span class="s1">'&lt;'</span> <span class="o">+</span> <span class="n">dtype</span>
<a name="line-6495"></a>        <span class="k">if</span> <span class="s1">'</span><span class="si">%i</span><span class="s1">'</span> <span class="ow">in</span> <span class="n">dtype</span><span class="p">:</span>
<a name="line-6496"></a>            <span class="n">dtype</span> <span class="o">=</span> <span class="n">dtype</span> <span class="o">%</span> <span class="n">planecount</span>
<a name="line-6497"></a>        <span class="k">if</span> <span class="s1">'('</span> <span class="ow">in</span> <span class="n">dtype</span><span class="p">:</span>
<a name="line-6498"></a>            <span class="c1"># numpy type</span>
<a name="line-6499"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="n">dtype</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6500"></a>            <span class="k">if</span> <span class="n">value</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-6501"></a>                <span class="c1"># assume fractions</span>
<a name="line-6502"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">value</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
<a name="line-6503"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-6504"></a>            <span class="c1"># struct format</span>
<a name="line-6505"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">dtype</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">calcsize</span><span class="p">(</span><span class="n">dtype</span><span class="p">)))</span>
<a name="line-6506"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-6507"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6508"></a>
<a name="line-6509"></a>    <span class="k">if</span> <span class="n">offset</span><span class="p">:</span>
<a name="line-6510"></a>        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span>
<a name="line-6511"></a>
<a name="line-6512"></a>    <span class="k">return</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span>
<a name="line-6513"></a>
<a name="line-6514"></a>
<a name="line-6515"></a><span class="k">def</span> <span class="nf">read_uic_image_property</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6516"></a>    <span class="sd">"""Read UIC ImagePropertyEx tag from file and return as dict."""</span>
<a name="line-6517"></a>    <span class="c1"># TODO: test this</span>
<a name="line-6518"></a>    <span class="n">size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'B'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">1</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6519"></a>    <span class="n">name</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'</span><span class="si">%i</span><span class="s1">s'</span> <span class="o">%</span> <span class="n">size</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">))[</span><span class="mi">0</span><span class="p">][:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6520"></a>    <span class="n">flags</span><span class="p">,</span> <span class="n">prop</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;IB'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
<a name="line-6521"></a>    <span class="k">if</span> <span class="n">prop</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-6522"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'II'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
<a name="line-6523"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="n">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6524"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-6525"></a>        <span class="n">size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'B'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">1</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6526"></a>        <span class="n">value</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'</span><span class="si">%i</span><span class="s1">s'</span> <span class="o">%</span> <span class="n">size</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6527"></a>    <span class="k">return</span> <span class="nb">dict</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span> <span class="n">flags</span><span class="o">=</span><span class="n">flags</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="n">value</span><span class="p">)</span>
<a name="line-6528"></a>
<a name="line-6529"></a>
<a name="line-6530"></a><span class="k">def</span> <span class="nf">read_cz_lsminfo</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6531"></a>    <span class="sd">"""Read CZ_LSMINFO tag from file and return as dict."""</span>
<a name="line-6532"></a>    <span class="k">assert</span> <span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'&lt;'</span>
<a name="line-6533"></a>    <span class="n">magic_number</span><span class="p">,</span> <span class="n">structure_size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;II'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
<a name="line-6534"></a>    <span class="k">if</span> <span class="n">magic_number</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">50350412</span><span class="p">,</span> <span class="mi">67127628</span><span class="p">):</span>
<a name="line-6535"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid CZ_LSMINFO structure"</span><span class="p">)</span>
<a name="line-6536"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="o">-</span><span class="mi">8</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-6537"></a>
<a name="line-6538"></a>    <span class="k">if</span> <span class="n">structure_size</span> <span class="o">&lt;</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO</span><span class="p">)</span><span class="o">.</span><span class="n">itemsize</span><span class="p">:</span>
<a name="line-6539"></a>        <span class="c1"># adjust structure according to structure_size</span>
<a name="line-6540"></a>        <span class="n">lsminfo</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-6541"></a>        <span class="n">size</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-6542"></a>        <span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">dtype</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO</span><span class="p">:</span>
<a name="line-6543"></a>            <span class="n">size</span> <span class="o">+=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span><span class="o">.</span><span class="n">itemsize</span>
<a name="line-6544"></a>            <span class="k">if</span> <span class="n">size</span> <span class="o">&gt;</span> <span class="n">structure_size</span><span class="p">:</span>
<a name="line-6545"></a>                <span class="k">break</span>
<a name="line-6546"></a>            <span class="n">lsminfo</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">name</span><span class="p">,</span> <span class="n">dtype</span><span class="p">))</span>
<a name="line-6547"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-6548"></a>        <span class="n">lsminfo</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO</span>
<a name="line-6549"></a>
<a name="line-6550"></a>    <span class="n">lsminfo</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_record</span><span class="p">(</span><span class="n">lsminfo</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-6551"></a>    <span class="n">lsminfo</span> <span class="o">=</span> <span class="n">recarray2dict</span><span class="p">(</span><span class="n">lsminfo</span><span class="p">)</span>
<a name="line-6552"></a>
<a name="line-6553"></a>    <span class="c1"># read LSM info subrecords at offsets</span>
<a name="line-6554"></a>    <span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">reader</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO_READERS</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
<a name="line-6555"></a>        <span class="k">if</span> <span class="n">reader</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-6556"></a>            <span class="k">continue</span>
<a name="line-6557"></a>        <span class="n">offset</span> <span class="o">=</span> <span class="n">lsminfo</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">'Offset'</span> <span class="o">+</span> <span class="n">name</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<a name="line-6558"></a>        <span class="k">if</span> <span class="n">offset</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-6559"></a>            <span class="k">continue</span>
<a name="line-6560"></a>        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offset</span><span class="p">)</span>
<a name="line-6561"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-6562"></a>            <span class="n">lsminfo</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">reader</span><span class="p">(</span><span class="n">fh</span><span class="p">)</span>
<a name="line-6563"></a>        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-6564"></a>            <span class="k">pass</span>
<a name="line-6565"></a>    <span class="k">return</span> <span class="n">lsminfo</span>
<a name="line-6566"></a>
<a name="line-6567"></a>
<a name="line-6568"></a><span class="k">def</span> <span class="nf">read_lsm_floatpairs</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6569"></a>    <span class="sd">"""Read LSM sequence of float pairs from file and return as list."""</span>
<a name="line-6570"></a>    <span class="n">size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;i'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6571"></a>    <span class="k">return</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="s1">'&lt;2f8'</span><span class="p">,</span> <span class="n">count</span><span class="o">=</span><span class="n">size</span><span class="p">)</span>
<a name="line-6572"></a>
<a name="line-6573"></a>
<a name="line-6574"></a><span class="k">def</span> <span class="nf">read_lsm_positions</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6575"></a>    <span class="sd">"""Read LSM positions from file and return as list."""</span>
<a name="line-6576"></a>    <span class="n">size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;I'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6577"></a>    <span class="k">return</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="s1">'&lt;2f8'</span><span class="p">,</span> <span class="n">count</span><span class="o">=</span><span class="n">size</span><span class="p">)</span>
<a name="line-6578"></a>
<a name="line-6579"></a>
<a name="line-6580"></a><span class="k">def</span> <span class="nf">read_lsm_timestamps</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6581"></a>    <span class="sd">"""Read LSM time stamps from file and return as list."""</span>
<a name="line-6582"></a>    <span class="n">size</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;ii'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
<a name="line-6583"></a>    <span class="k">if</span> <span class="n">size</span> <span class="o">!=</span> <span class="p">(</span><span class="mi">8</span> <span class="o">+</span> <span class="mi">8</span> <span class="o">*</span> <span class="n">count</span><span class="p">):</span>
<a name="line-6584"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid LSM TimeStamps block"</span><span class="p">)</span>
<a name="line-6585"></a>        <span class="k">return</span> <span class="p">[]</span>
<a name="line-6586"></a>    <span class="c1"># return struct.unpack('&lt;%dd' % count, fh.read(8*count))</span>
<a name="line-6587"></a>    <span class="k">return</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="s1">'&lt;f8'</span><span class="p">,</span> <span class="n">count</span><span class="o">=</span><span class="n">count</span><span class="p">)</span>
<a name="line-6588"></a>
<a name="line-6589"></a>
<a name="line-6590"></a><span class="k">def</span> <span class="nf">read_lsm_eventlist</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6591"></a>    <span class="sd">"""Read LSM events from file and return as list of (time, type, text)."""</span>
<a name="line-6592"></a>    <span class="n">count</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;II'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">))[</span><span class="mi">1</span><span class="p">]</span>
<a name="line-6593"></a>    <span class="n">events</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-6594"></a>    <span class="k">while</span> <span class="n">count</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-6595"></a>        <span class="n">esize</span><span class="p">,</span> <span class="n">etime</span><span class="p">,</span> <span class="n">etype</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;IdI'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">16</span><span class="p">))</span>
<a name="line-6596"></a>        <span class="n">etext</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">stripnull</span><span class="p">(</span><span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">esize</span> <span class="o">-</span> <span class="mi">16</span><span class="p">)))</span>
<a name="line-6597"></a>        <span class="n">events</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">etime</span><span class="p">,</span> <span class="n">etype</span><span class="p">,</span> <span class="n">etext</span><span class="p">))</span>
<a name="line-6598"></a>        <span class="n">count</span> <span class="o">-=</span> <span class="mi">1</span>
<a name="line-6599"></a>    <span class="k">return</span> <span class="n">events</span>
<a name="line-6600"></a>
<a name="line-6601"></a>
<a name="line-6602"></a><span class="k">def</span> <span class="nf">read_lsm_channelcolors</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6603"></a>    <span class="sd">"""Read LSM ChannelColors structure from file and return as dict."""</span>
<a name="line-6604"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'Mono'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span> <span class="s1">'Colors'</span><span class="p">:</span> <span class="p">[],</span> <span class="s1">'ColorNames'</span><span class="p">:</span> <span class="p">[]}</span>
<a name="line-6605"></a>    <span class="n">pos</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">tell</span><span class="p">()</span>
<a name="line-6606"></a>    <span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="n">ncolors</span><span class="p">,</span> <span class="n">nnames</span><span class="p">,</span>
<a name="line-6607"></a>     <span class="n">coffset</span><span class="p">,</span> <span class="n">noffset</span><span class="p">,</span> <span class="n">mono</span><span class="p">)</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;IIIIII'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">24</span><span class="p">))</span>
<a name="line-6608"></a>    <span class="k">if</span> <span class="n">ncolors</span> <span class="o">!=</span> <span class="n">nnames</span><span class="p">:</span>
<a name="line-6609"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid LSM ChannelColors structure"</span><span class="p">)</span>
<a name="line-6610"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-6611"></a>    <span class="n">result</span><span class="p">[</span><span class="s1">'Mono'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">bool</span><span class="p">(</span><span class="n">mono</span><span class="p">)</span>
<a name="line-6612"></a>    <span class="c1"># Colors</span>
<a name="line-6613"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span> <span class="o">+</span> <span class="n">coffset</span><span class="p">)</span>
<a name="line-6614"></a>    <span class="n">colors</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_array</span><span class="p">(</span><span class="s1">'uint8'</span><span class="p">,</span> <span class="n">count</span><span class="o">=</span><span class="n">ncolors</span><span class="o">*</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">((</span><span class="n">ncolors</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
<a name="line-6615"></a>    <span class="n">result</span><span class="p">[</span><span class="s1">'Colors'</span><span class="p">]</span> <span class="o">=</span> <span class="n">colors</span><span class="o">.</span><span class="n">tolist</span><span class="p">()</span>
<a name="line-6616"></a>    <span class="c1"># ColorNames</span>
<a name="line-6617"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">pos</span> <span class="o">+</span> <span class="n">noffset</span><span class="p">)</span>
<a name="line-6618"></a>    <span class="nb">buffer</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span> <span class="o">-</span> <span class="n">noffset</span><span class="p">)</span>
<a name="line-6619"></a>    <span class="n">names</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-6620"></a>    <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="nb">buffer</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">:</span>
<a name="line-6621"></a>        <span class="n">size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;I'</span><span class="p">,</span> <span class="nb">buffer</span><span class="p">[:</span><span class="mi">4</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6622"></a>        <span class="n">names</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">bytes2str</span><span class="p">(</span><span class="nb">buffer</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">3</span><span class="o">+</span><span class="n">size</span><span class="p">]))</span>
<a name="line-6623"></a>        <span class="nb">buffer</span> <span class="o">=</span> <span class="nb">buffer</span><span class="p">[</span><span class="mi">4</span><span class="o">+</span><span class="n">size</span><span class="p">:]</span>
<a name="line-6624"></a>    <span class="n">result</span><span class="p">[</span><span class="s1">'ColorNames'</span><span class="p">]</span> <span class="o">=</span> <span class="n">names</span>
<a name="line-6625"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6626"></a>
<a name="line-6627"></a>
<a name="line-6628"></a><span class="k">def</span> <span class="nf">read_lsm_scaninfo</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6629"></a>    <span class="sd">"""Read LSM ScanInfo structure from file and return as dict."""</span>
<a name="line-6630"></a>    <span class="n">block</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6631"></a>    <span class="n">blocks</span> <span class="o">=</span> <span class="p">[</span><span class="n">block</span><span class="p">]</span>
<a name="line-6632"></a>    <span class="n">unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span>
<a name="line-6633"></a>    <span class="k">if</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;I'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="mh">0x10000000</span><span class="p">:</span>
<a name="line-6634"></a>        <span class="c1"># not a Recording sub block</span>
<a name="line-6635"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid LSM ScanInfo structure"</span><span class="p">)</span>
<a name="line-6636"></a>        <span class="k">return</span> <span class="n">block</span>
<a name="line-6637"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
<a name="line-6638"></a>    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-6639"></a>        <span class="n">entry</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;III'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">12</span><span class="p">))</span>
<a name="line-6640"></a>        <span class="k">if</span> <span class="n">dtype</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-6641"></a>            <span class="c1"># ascii</span>
<a name="line-6642"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">stripnull</span><span class="p">(</span><span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size</span><span class="p">)))</span>
<a name="line-6643"></a>        <span class="k">elif</span> <span class="n">dtype</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
<a name="line-6644"></a>            <span class="c1"># long</span>
<a name="line-6645"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;i'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6646"></a>        <span class="k">elif</span> <span class="n">dtype</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
<a name="line-6647"></a>            <span class="c1"># rational</span>
<a name="line-6648"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;d'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6649"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-6650"></a>            <span class="n">value</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-6651"></a>        <span class="k">if</span> <span class="n">entry</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO_SCANINFO_ARRAYS</span><span class="p">:</span>
<a name="line-6652"></a>            <span class="n">blocks</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">block</span><span class="p">)</span>
<a name="line-6653"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO_SCANINFO_ARRAYS</span><span class="p">[</span><span class="n">entry</span><span class="p">]</span>
<a name="line-6654"></a>            <span class="n">newobj</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-6655"></a>            <span class="n">block</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">newobj</span>
<a name="line-6656"></a>            <span class="n">block</span> <span class="o">=</span> <span class="n">newobj</span>
<a name="line-6657"></a>        <span class="k">elif</span> <span class="n">entry</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO_SCANINFO_STRUCTS</span><span class="p">:</span>
<a name="line-6658"></a>            <span class="n">blocks</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">block</span><span class="p">)</span>
<a name="line-6659"></a>            <span class="n">newobj</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6660"></a>            <span class="n">block</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">newobj</span><span class="p">)</span>
<a name="line-6661"></a>            <span class="n">block</span> <span class="o">=</span> <span class="n">newobj</span>
<a name="line-6662"></a>        <span class="k">elif</span> <span class="n">entry</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO_SCANINFO_ATTRIBUTES</span><span class="p">:</span>
<a name="line-6663"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">CZ_LSMINFO_SCANINFO_ATTRIBUTES</span><span class="p">[</span><span class="n">entry</span><span class="p">]</span>
<a name="line-6664"></a>            <span class="n">block</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-6665"></a>        <span class="k">elif</span> <span class="n">entry</span> <span class="o">==</span> <span class="mh">0xffffffff</span><span class="p">:</span>
<a name="line-6666"></a>            <span class="c1"># end sub block</span>
<a name="line-6667"></a>            <span class="n">block</span> <span class="o">=</span> <span class="n">blocks</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
<a name="line-6668"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-6669"></a>            <span class="c1"># unknown entry</span>
<a name="line-6670"></a>            <span class="n">block</span><span class="p">[</span><span class="s2">"Entry0x</span><span class="si">%x</span><span class="s2">"</span> <span class="o">%</span> <span class="n">entry</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-6671"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">blocks</span><span class="p">:</span>
<a name="line-6672"></a>            <span class="k">break</span>
<a name="line-6673"></a>    <span class="k">return</span> <span class="n">block</span>
<a name="line-6674"></a>
<a name="line-6675"></a>
<a name="line-6676"></a><span class="k">def</span> <span class="nf">read_tvips_header</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6677"></a>    <span class="sd">"""Read TVIPS EM-MENU headers and return as dict."""</span>
<a name="line-6678"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6679"></a>    <span class="n">header</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_record</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">TVIPS_HEADER_V1</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-6680"></a>    <span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">typestr</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TVIPS_HEADER_V1</span><span class="p">:</span>
<a name="line-6681"></a>        <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">header</span><span class="p">[</span><span class="n">name</span><span class="p">]</span><span class="o">.</span><span class="n">tolist</span><span class="p">()</span>
<a name="line-6682"></a>    <span class="k">if</span> <span class="n">header</span><span class="p">[</span><span class="s1">'Version'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-6683"></a>        <span class="n">header</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_record</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">TVIPS_HEADER_V2</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-6684"></a>        <span class="k">if</span> <span class="n">header</span><span class="p">[</span><span class="s1">'Magic'</span><span class="p">]</span> <span class="o">!=</span> <span class="nb">int</span><span class="p">(</span><span class="mh">0xaaaaaaaa</span><span class="p">):</span>
<a name="line-6685"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid TVIPS v2 magic number"</span><span class="p">)</span>
<a name="line-6686"></a>            <span class="k">return</span> <span class="p">{}</span>
<a name="line-6687"></a>        <span class="c1"># decode utf16 strings</span>
<a name="line-6688"></a>        <span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">typestr</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">TVIPS_HEADER_V2</span><span class="p">:</span>
<a name="line-6689"></a>            <span class="k">if</span> <span class="n">typestr</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">'V'</span><span class="p">):</span>
<a name="line-6690"></a>                <span class="n">s</span> <span class="o">=</span> <span class="n">header</span><span class="p">[</span><span class="n">name</span><span class="p">]</span><span class="o">.</span><span class="n">tostring</span><span class="p">()</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">'utf16'</span><span class="p">,</span> <span class="n">errors</span><span class="o">=</span><span class="s1">'ignore'</span><span class="p">)</span>
<a name="line-6691"></a>                <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">stripnull</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="s1">'</span><span class="se">\0</span><span class="s1">'</span><span class="p">)</span>
<a name="line-6692"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-6693"></a>                <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">header</span><span class="p">[</span><span class="n">name</span><span class="p">]</span><span class="o">.</span><span class="n">tolist</span><span class="p">()</span>
<a name="line-6694"></a>        <span class="c1"># convert nm to m</span>
<a name="line-6695"></a>        <span class="k">for</span> <span class="n">axis</span> <span class="ow">in</span> <span class="s1">'XY'</span><span class="p">:</span>
<a name="line-6696"></a>            <span class="n">header</span><span class="p">[</span><span class="s1">'PhysicalPixelSize'</span> <span class="o">+</span> <span class="n">axis</span><span class="p">]</span> <span class="o">/=</span> <span class="mf">1e9</span>
<a name="line-6697"></a>            <span class="n">header</span><span class="p">[</span><span class="s1">'PixelSize'</span> <span class="o">+</span> <span class="n">axis</span><span class="p">]</span> <span class="o">/=</span> <span class="mf">1e9</span>
<a name="line-6698"></a>    <span class="k">elif</span> <span class="n">header</span><span class="o">.</span><span class="n">version</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-6699"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"unknown TVIPS header version"</span><span class="p">)</span>
<a name="line-6700"></a>        <span class="k">return</span> <span class="p">{}</span>
<a name="line-6701"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6702"></a>
<a name="line-6703"></a>
<a name="line-6704"></a><span class="k">def</span> <span class="nf">read_fei_metadata</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6705"></a>    <span class="sd">"""Read FEI SFEG/HELIOS headers and return as dict."""</span>
<a name="line-6706"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6707"></a>    <span class="n">section</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6708"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">count</span><span class="p">))</span>
<a name="line-6709"></a>    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">data</span><span class="o">.</span><span class="n">splitlines</span><span class="p">():</span>
<a name="line-6710"></a>        <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-6711"></a>        <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">'['</span><span class="p">):</span>
<a name="line-6712"></a>            <span class="n">section</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6713"></a>            <span class="n">result</span><span class="p">[</span><span class="n">line</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">section</span>
<a name="line-6714"></a>            <span class="k">continue</span>
<a name="line-6715"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-6716"></a>            <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'='</span><span class="p">)</span>
<a name="line-6717"></a>        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-6718"></a>            <span class="k">continue</span>
<a name="line-6719"></a>        <span class="n">section</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-6720"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6721"></a>
<a name="line-6722"></a>
<a name="line-6723"></a><span class="k">def</span> <span class="nf">read_cz_sem</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6724"></a>    <span class="sd">"""Read Zeiss SEM tag and return as dict."""</span>
<a name="line-6725"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{</span><span class="s1">''</span><span class="p">:</span> <span class="p">()}</span>
<a name="line-6726"></a>    <span class="n">key</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-6727"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">count</span><span class="p">))</span>
<a name="line-6728"></a>    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">data</span><span class="o">.</span><span class="n">splitlines</span><span class="p">():</span>
<a name="line-6729"></a>        <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">isupper</span><span class="p">():</span>
<a name="line-6730"></a>            <span class="n">key</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
<a name="line-6731"></a>        <span class="k">elif</span> <span class="n">key</span><span class="p">:</span>
<a name="line-6732"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-6733"></a>                <span class="n">name</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'='</span><span class="p">)</span>
<a name="line-6734"></a>            <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-6735"></a>                <span class="k">continue</span>
<a name="line-6736"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-6737"></a>            <span class="n">unit</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-6738"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-6739"></a>                <span class="n">v</span><span class="p">,</span> <span class="n">u</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
<a name="line-6740"></a>                <span class="n">number</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">))</span>
<a name="line-6741"></a>                <span class="k">if</span> <span class="n">number</span> <span class="o">!=</span> <span class="n">v</span><span class="p">:</span>
<a name="line-6742"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="n">number</span>
<a name="line-6743"></a>                    <span class="n">unit</span> <span class="o">=</span> <span class="n">u</span>
<a name="line-6744"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-6745"></a>                <span class="n">number</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">))</span>
<a name="line-6746"></a>                <span class="k">if</span> <span class="n">number</span> <span class="o">!=</span> <span class="n">value</span><span class="p">:</span>
<a name="line-6747"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="n">number</span>
<a name="line-6748"></a>                <span class="k">if</span> <span class="n">value</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'No'</span><span class="p">,</span> <span class="s1">'Off'</span><span class="p">):</span>
<a name="line-6749"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-6750"></a>                <span class="k">elif</span> <span class="n">value</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'Yes'</span><span class="p">,</span> <span class="s1">'On'</span><span class="p">):</span>
<a name="line-6751"></a>                    <span class="n">value</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-6752"></a>            <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">name</span><span class="o">.</span><span class="n">strip</span><span class="p">(),</span> <span class="n">value</span><span class="p">)</span>
<a name="line-6753"></a>            <span class="k">if</span> <span class="n">unit</span><span class="p">:</span>
<a name="line-6754"></a>                <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">+=</span> <span class="p">(</span><span class="n">unit</span><span class="p">,)</span>
<a name="line-6755"></a>            <span class="n">key</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-6756"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-6757"></a>            <span class="n">result</span><span class="p">[</span><span class="s1">''</span><span class="p">]</span> <span class="o">+=</span> <span class="p">(</span><span class="n">astype</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">)),)</span>
<a name="line-6758"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6759"></a>
<a name="line-6760"></a>
<a name="line-6761"></a><span class="k">def</span> <span class="nf">read_nih_image_header</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="n">offsetsize</span><span class="p">):</span>
<a name="line-6762"></a>    <span class="sd">"""Read NIH_IMAGE_HEADER tag from file and return as dict."""</span>
<a name="line-6763"></a>    <span class="n">a</span> <span class="o">=</span> <span class="n">fh</span><span class="o">.</span><span class="n">read_record</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">NIH_IMAGE_HEADER</span><span class="p">,</span> <span class="n">byteorder</span><span class="o">=</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-6764"></a>    <span class="n">a</span> <span class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">newbyteorder</span><span class="p">(</span><span class="n">byteorder</span><span class="p">)</span>
<a name="line-6765"></a>    <span class="n">a</span> <span class="o">=</span> <span class="n">recarray2dict</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<a name="line-6766"></a>    <span class="n">a</span><span class="p">[</span><span class="s1">'XUnit'</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="s1">'XUnit'</span><span class="p">][:</span><span class="n">a</span><span class="p">[</span><span class="s1">'XUnitSize'</span><span class="p">]]</span>
<a name="line-6767"></a>    <span class="n">a</span><span class="p">[</span><span class="s1">'UM'</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="s1">'UM'</span><span class="p">][:</span><span class="n">a</span><span class="p">[</span><span class="s1">'UMsize'</span><span class="p">]]</span>
<a name="line-6768"></a>    <span class="k">return</span> <span class="n">a</span>
<a name="line-6769"></a>
<a name="line-6770"></a>
<a name="line-6771"></a><span class="k">def</span> <span class="nf">read_scanimage_metadata</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6772"></a>    <span class="sd">"""Read ScanImage BigTIFF v3 static and ROI metadata from open file.</span>
<a name="line-6773"></a>
<a name="line-6774"></a><span class="sd">    Return non-varying frame data as dict and ROI group data as JSON.</span>
<a name="line-6775"></a>
<a name="line-6776"></a><span class="sd">    The settings can be used to read image data and metadata without parsing</span>
<a name="line-6777"></a><span class="sd">    the TIFF file.</span>
<a name="line-6778"></a>
<a name="line-6779"></a><span class="sd">    Raise ValueError if file does not contain valid ScanImage v3 metadata.</span>
<a name="line-6780"></a>
<a name="line-6781"></a><span class="sd">    """</span>
<a name="line-6782"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<a name="line-6783"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-6784"></a>        <span class="n">byteorder</span><span class="p">,</span> <span class="n">version</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;2sH'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span>
<a name="line-6785"></a>        <span class="k">if</span> <span class="n">byteorder</span> <span class="o">!=</span> <span class="sa">b</span><span class="s1">'II'</span> <span class="ow">or</span> <span class="n">version</span> <span class="o">!=</span> <span class="mi">43</span><span class="p">:</span>
<a name="line-6786"></a>            <span class="k">raise</span> <span class="ne">Exception</span>
<a name="line-6787"></a>        <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span>
<a name="line-6788"></a>        <span class="n">magic</span><span class="p">,</span> <span class="n">version</span><span class="p">,</span> <span class="n">size0</span><span class="p">,</span> <span class="n">size1</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">'&lt;IIII'</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">16</span><span class="p">))</span>
<a name="line-6789"></a>        <span class="k">if</span> <span class="n">magic</span> <span class="o">!=</span> <span class="mi">117637889</span> <span class="ow">or</span> <span class="n">version</span> <span class="o">!=</span> <span class="mi">3</span><span class="p">:</span>
<a name="line-6790"></a>            <span class="k">raise</span> <span class="ne">Exception</span>
<a name="line-6791"></a>    <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-6792"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a ScanImage BigTIFF v3 file"</span><span class="p">)</span>
<a name="line-6793"></a>
<a name="line-6794"></a>    <span class="n">frame_data</span> <span class="o">=</span> <span class="n">matlabstr2py</span><span class="p">(</span><span class="n">bytes2str</span><span class="p">(</span><span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">size0</span><span class="p">)[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]))</span>
<a name="line-6795"></a>    <span class="n">roi_data</span> <span class="o">=</span> <span class="n">read_json</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="s1">'&lt;'</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">size1</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-6796"></a>    <span class="k">return</span> <span class="n">frame_data</span><span class="p">,</span> <span class="n">roi_data</span>
<a name="line-6797"></a>
<a name="line-6798"></a>
<a name="line-6799"></a><span class="k">def</span> <span class="nf">read_micromanager_metadata</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6800"></a>    <span class="sd">"""Read MicroManager non-TIFF settings from open file and return as dict.</span>
<a name="line-6801"></a>
<a name="line-6802"></a><span class="sd">    The settings can be used to read image data without parsing the TIFF file.</span>
<a name="line-6803"></a>
<a name="line-6804"></a><span class="sd">    Raise ValueError if the file does not contain valid MicroManager metadata.</span>
<a name="line-6805"></a>
<a name="line-6806"></a><span class="sd">    """</span>
<a name="line-6807"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<a name="line-6808"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-6809"></a>        <span class="n">byteorder</span> <span class="o">=</span> <span class="p">{</span><span class="sa">b</span><span class="s1">'II'</span><span class="p">:</span> <span class="s1">'&lt;'</span><span class="p">,</span> <span class="sa">b</span><span class="s1">'MM'</span><span class="p">:</span> <span class="s1">'&gt;'</span><span class="p">}[</span><span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">2</span><span class="p">)]</span>
<a name="line-6810"></a>    <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-6811"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a MicroManager TIFF file"</span><span class="p">)</span>
<a name="line-6812"></a>
<a name="line-6813"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6814"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
<a name="line-6815"></a>    <span class="p">(</span><span class="n">index_header</span><span class="p">,</span> <span class="n">index_offset</span><span class="p">,</span> <span class="n">display_header</span><span class="p">,</span> <span class="n">display_offset</span><span class="p">,</span>
<a name="line-6816"></a>     <span class="n">comments_header</span><span class="p">,</span> <span class="n">comments_offset</span><span class="p">,</span> <span class="n">summary_header</span><span class="p">,</span> <span class="n">summary_length</span>
<a name="line-6817"></a>     <span class="p">)</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span> <span class="o">+</span> <span class="s2">"IIIIIIII"</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">32</span><span class="p">))</span>
<a name="line-6818"></a>
<a name="line-6819"></a>    <span class="k">if</span> <span class="n">summary_header</span> <span class="o">!=</span> <span class="mi">2355492</span><span class="p">:</span>
<a name="line-6820"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid MicroManager summary header"</span><span class="p">)</span>
<a name="line-6821"></a>    <span class="n">result</span><span class="p">[</span><span class="s1">'Summary'</span><span class="p">]</span> <span class="o">=</span> <span class="n">read_json</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">summary_length</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-6822"></a>
<a name="line-6823"></a>    <span class="k">if</span> <span class="n">index_header</span> <span class="o">!=</span> <span class="mi">54773648</span><span class="p">:</span>
<a name="line-6824"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid MicroManager index header"</span><span class="p">)</span>
<a name="line-6825"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">index_offset</span><span class="p">)</span>
<a name="line-6826"></a>    <span class="n">header</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span> <span class="o">+</span> <span class="s2">"II"</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
<a name="line-6827"></a>    <span class="k">if</span> <span class="n">header</span> <span class="o">!=</span> <span class="mi">3453623</span><span class="p">:</span>
<a name="line-6828"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid MicroManager index header"</span><span class="p">)</span>
<a name="line-6829"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span> <span class="o">+</span> <span class="s2">"IIIII"</span><span class="o">*</span><span class="n">count</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">20</span><span class="o">*</span><span class="n">count</span><span class="p">))</span>
<a name="line-6830"></a>    <span class="n">result</span><span class="p">[</span><span class="s1">'IndexMap'</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'Channel'</span><span class="p">:</span> <span class="n">data</span><span class="p">[::</span><span class="mi">5</span><span class="p">],</span>
<a name="line-6831"></a>                          <span class="s1">'Slice'</span><span class="p">:</span> <span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">::</span><span class="mi">5</span><span class="p">],</span>
<a name="line-6832"></a>                          <span class="s1">'Frame'</span><span class="p">:</span> <span class="n">data</span><span class="p">[</span><span class="mi">2</span><span class="p">::</span><span class="mi">5</span><span class="p">],</span>
<a name="line-6833"></a>                          <span class="s1">'Position'</span><span class="p">:</span> <span class="n">data</span><span class="p">[</span><span class="mi">3</span><span class="p">::</span><span class="mi">5</span><span class="p">],</span>
<a name="line-6834"></a>                          <span class="s1">'Offset'</span><span class="p">:</span> <span class="n">data</span><span class="p">[</span><span class="mi">4</span><span class="p">::</span><span class="mi">5</span><span class="p">]}</span>
<a name="line-6835"></a>
<a name="line-6836"></a>    <span class="k">if</span> <span class="n">display_header</span> <span class="o">!=</span> <span class="mi">483765892</span><span class="p">:</span>
<a name="line-6837"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid MicroManager display header"</span><span class="p">)</span>
<a name="line-6838"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">display_offset</span><span class="p">)</span>
<a name="line-6839"></a>    <span class="n">header</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span> <span class="o">+</span> <span class="s2">"II"</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
<a name="line-6840"></a>    <span class="k">if</span> <span class="n">header</span> <span class="o">!=</span> <span class="mi">347834724</span><span class="p">:</span>
<a name="line-6841"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid MicroManager display header"</span><span class="p">)</span>
<a name="line-6842"></a>    <span class="n">result</span><span class="p">[</span><span class="s1">'DisplaySettings'</span><span class="p">]</span> <span class="o">=</span> <span class="n">read_json</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-6843"></a>
<a name="line-6844"></a>    <span class="k">if</span> <span class="n">comments_header</span> <span class="o">!=</span> <span class="mi">99384722</span><span class="p">:</span>
<a name="line-6845"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid MicroManager comments header"</span><span class="p">)</span>
<a name="line-6846"></a>    <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">comments_offset</span><span class="p">)</span>
<a name="line-6847"></a>    <span class="n">header</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span> <span class="o">+</span> <span class="s2">"II"</span><span class="p">,</span> <span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">8</span><span class="p">))</span>
<a name="line-6848"></a>    <span class="k">if</span> <span class="n">header</span> <span class="o">!=</span> <span class="mi">84720485</span><span class="p">:</span>
<a name="line-6849"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid MicroManager comments header"</span><span class="p">)</span>
<a name="line-6850"></a>    <span class="n">result</span><span class="p">[</span><span class="s1">'Comments'</span><span class="p">]</span> <span class="o">=</span> <span class="n">read_json</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">count</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-6851"></a>
<a name="line-6852"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6853"></a>
<a name="line-6854"></a>
<a name="line-6855"></a><span class="k">def</span> <span class="nf">read_metaseries_catalog</span><span class="p">(</span><span class="n">fh</span><span class="p">):</span>
<a name="line-6856"></a>    <span class="sd">"""Read MetaSeries non-TIFF hint catalog from file.</span>
<a name="line-6857"></a>
<a name="line-6858"></a><span class="sd">    Raise ValueError if the file does not contain a valid hint catalog.</span>
<a name="line-6859"></a>
<a name="line-6860"></a><span class="sd">    """</span>
<a name="line-6861"></a>    <span class="c1"># TODO: implement read_metaseries_catalog</span>
<a name="line-6862"></a>    <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">()</span>
<a name="line-6863"></a>
<a name="line-6864"></a>
<a name="line-6865"></a><span class="k">def</span> <span class="nf">imagej_metadata</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">bytecounts</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">):</span>
<a name="line-6866"></a>    <span class="sd">"""Return IJMetadata tag value as dict.</span>
<a name="line-6867"></a>
<a name="line-6868"></a><span class="sd">    The 'info' string can have multiple formats, e.g. OIF or ScanImage,</span>
<a name="line-6869"></a><span class="sd">    that might be parsed into dicts using the matlabstr2py or</span>
<a name="line-6870"></a><span class="sd">    oiffile.SettingsFile functions.</span>
<a name="line-6871"></a>
<a name="line-6872"></a><span class="sd">    """</span>
<a name="line-6873"></a>    <span class="k">def</span> <span class="nf">readstring</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">):</span>
<a name="line-6874"></a>        <span class="k">return</span> <span class="n">data</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">'utf-16'</span> <span class="o">+</span> <span class="p">{</span><span class="s1">'&gt;'</span><span class="p">:</span> <span class="s1">'be'</span><span class="p">,</span> <span class="s1">'&lt;'</span><span class="p">:</span> <span class="s1">'le'</span><span class="p">}[</span><span class="n">byteorder</span><span class="p">])</span>
<a name="line-6875"></a>
<a name="line-6876"></a>    <span class="k">def</span> <span class="nf">readdouble</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">):</span>
<a name="line-6877"></a>        <span class="k">return</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="p">(</span><span class="s1">'d'</span> <span class="o">*</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="o">//</span> <span class="mi">8</span><span class="p">)),</span> <span class="n">data</span><span class="p">)</span>
<a name="line-6878"></a>
<a name="line-6879"></a>    <span class="k">def</span> <span class="nf">readbytes</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">):</span>
<a name="line-6880"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="s1">'uint8'</span><span class="p">)</span>
<a name="line-6881"></a>
<a name="line-6882"></a>    <span class="n">metadata_types</span> <span class="o">=</span> <span class="p">{</span>  <span class="c1"># big endian</span>
<a name="line-6883"></a>        <span class="sa">b</span><span class="s1">'info'</span><span class="p">:</span> <span class="p">(</span><span class="s1">'Info'</span><span class="p">,</span> <span class="n">readstring</span><span class="p">),</span>
<a name="line-6884"></a>        <span class="sa">b</span><span class="s1">'labl'</span><span class="p">:</span> <span class="p">(</span><span class="s1">'Labels'</span><span class="p">,</span> <span class="n">readstring</span><span class="p">),</span>
<a name="line-6885"></a>        <span class="sa">b</span><span class="s1">'rang'</span><span class="p">:</span> <span class="p">(</span><span class="s1">'Ranges'</span><span class="p">,</span> <span class="n">readdouble</span><span class="p">),</span>
<a name="line-6886"></a>        <span class="sa">b</span><span class="s1">'luts'</span><span class="p">:</span> <span class="p">(</span><span class="s1">'LUTs'</span><span class="p">,</span> <span class="n">readbytes</span><span class="p">),</span>
<a name="line-6887"></a>        <span class="sa">b</span><span class="s1">'roi '</span><span class="p">:</span> <span class="p">(</span><span class="s1">'ROI'</span><span class="p">,</span> <span class="n">readbytes</span><span class="p">),</span>
<a name="line-6888"></a>        <span class="sa">b</span><span class="s1">'over'</span><span class="p">:</span> <span class="p">(</span><span class="s1">'Overlays'</span><span class="p">,</span> <span class="n">readbytes</span><span class="p">)}</span>
<a name="line-6889"></a>    <span class="n">metadata_types</span><span class="o">.</span><span class="n">update</span><span class="p">(</span>  <span class="c1"># little endian</span>
<a name="line-6890"></a>        <span class="nb">dict</span><span class="p">((</span><span class="n">k</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">metadata_types</span><span class="o">.</span><span class="n">items</span><span class="p">()))</span>
<a name="line-6891"></a>
<a name="line-6892"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">bytecounts</span><span class="p">:</span>
<a name="line-6893"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"no ImageJ metadata"</span><span class="p">)</span>
<a name="line-6894"></a>
<a name="line-6895"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">data</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="sa">b</span><span class="s1">'IJIJ'</span><span class="p">,</span> <span class="sa">b</span><span class="s1">'JIJI'</span><span class="p">):</span>
<a name="line-6896"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid ImageJ metadata"</span><span class="p">)</span>
<a name="line-6897"></a>
<a name="line-6898"></a>    <span class="n">header_size</span> <span class="o">=</span> <span class="n">bytecounts</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-6899"></a>    <span class="k">if</span> <span class="n">header_size</span> <span class="o">&lt;</span> <span class="mi">12</span> <span class="ow">or</span> <span class="n">header_size</span> <span class="o">&gt;</span> <span class="mi">804</span><span class="p">:</span>
<a name="line-6900"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid ImageJ metadata header size"</span><span class="p">)</span>
<a name="line-6901"></a>
<a name="line-6902"></a>    <span class="n">ntypes</span> <span class="o">=</span> <span class="p">(</span><span class="n">header_size</span> <span class="o">-</span> <span class="mi">4</span><span class="p">)</span> <span class="o">//</span> <span class="mi">8</span>
<a name="line-6903"></a>    <span class="n">header</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="n">byteorder</span><span class="o">+</span><span class="s1">'4sI'</span><span class="o">*</span><span class="n">ntypes</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">4</span><span class="o">+</span><span class="n">ntypes</span><span class="o">*</span><span class="mi">8</span><span class="p">])</span>
<a name="line-6904"></a>    <span class="n">pos</span> <span class="o">=</span> <span class="mi">4</span> <span class="o">+</span> <span class="n">ntypes</span> <span class="o">*</span> <span class="mi">8</span>
<a name="line-6905"></a>    <span class="n">counter</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-6906"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6907"></a>    <span class="k">for</span> <span class="n">mtype</span><span class="p">,</span> <span class="n">count</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">header</span><span class="p">[::</span><span class="mi">2</span><span class="p">],</span> <span class="n">header</span><span class="p">[</span><span class="mi">1</span><span class="p">::</span><span class="mi">2</span><span class="p">]):</span>
<a name="line-6908"></a>        <span class="n">values</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-6909"></a>        <span class="n">name</span><span class="p">,</span> <span class="n">func</span> <span class="o">=</span> <span class="n">metadata_types</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">mtype</span><span class="p">,</span> <span class="p">(</span><span class="n">bytes2str</span><span class="p">(</span><span class="n">mtype</span><span class="p">),</span> <span class="n">read_bytes</span><span class="p">))</span>
<a name="line-6910"></a>        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">count</span><span class="p">):</span>
<a name="line-6911"></a>            <span class="n">counter</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-6912"></a>            <span class="n">pos1</span> <span class="o">=</span> <span class="n">pos</span> <span class="o">+</span> <span class="n">bytecounts</span><span class="p">[</span><span class="n">counter</span><span class="p">]</span>
<a name="line-6913"></a>            <span class="n">values</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">func</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">pos</span><span class="p">:</span><span class="n">pos1</span><span class="p">],</span> <span class="n">byteorder</span><span class="p">))</span>
<a name="line-6914"></a>            <span class="n">pos</span> <span class="o">=</span> <span class="n">pos1</span>
<a name="line-6915"></a>        <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">if</span> <span class="n">count</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">else</span> <span class="n">values</span>
<a name="line-6916"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6917"></a>
<a name="line-6918"></a>
<a name="line-6919"></a><span class="k">def</span> <span class="nf">imagej_description_metadata</span><span class="p">(</span><span class="n">description</span><span class="p">):</span>
<a name="line-6920"></a>    <span class="sd">"""Return metatata from ImageJ image description as dict.</span>
<a name="line-6921"></a>
<a name="line-6922"></a><span class="sd">    Raise ValueError if not a valid ImageJ description.</span>
<a name="line-6923"></a>
<a name="line-6924"></a><span class="sd">    &gt;&gt;&gt; description = 'ImageJ=1.11a\\nimages=510\\nhyperstack=true\\n'</span>
<a name="line-6925"></a><span class="sd">    &gt;&gt;&gt; imagej_description_metadata(description)  # doctest: +SKIP</span>
<a name="line-6926"></a><span class="sd">    {'ImageJ': '1.11a', 'images': 510, 'hyperstack': True}</span>
<a name="line-6927"></a>
<a name="line-6928"></a><span class="sd">    """</span>
<a name="line-6929"></a>    <span class="k">def</span> <span class="nf">_bool</span><span class="p">(</span><span class="n">val</span><span class="p">):</span>
<a name="line-6930"></a>        <span class="k">return</span> <span class="p">{</span><span class="s1">'true'</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span> <span class="s1">'false'</span><span class="p">:</span> <span class="bp">False</span><span class="p">}[</span><span class="n">val</span><span class="o">.</span><span class="n">lower</span><span class="p">()]</span>
<a name="line-6931"></a>
<a name="line-6932"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-6933"></a>    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">description</span><span class="o">.</span><span class="n">splitlines</span><span class="p">():</span>
<a name="line-6934"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-6935"></a>            <span class="n">key</span><span class="p">,</span> <span class="n">val</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'='</span><span class="p">)</span>
<a name="line-6936"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-6937"></a>            <span class="k">continue</span>
<a name="line-6938"></a>        <span class="n">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-6939"></a>        <span class="n">val</span> <span class="o">=</span> <span class="n">val</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-6940"></a>        <span class="k">for</span> <span class="n">dtype</span> <span class="ow">in</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">,</span> <span class="n">_bool</span><span class="p">):</span>
<a name="line-6941"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-6942"></a>                <span class="n">val</span> <span class="o">=</span> <span class="n">dtype</span><span class="p">(</span><span class="n">val</span><span class="p">)</span>
<a name="line-6943"></a>                <span class="k">break</span>
<a name="line-6944"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-6945"></a>                <span class="k">pass</span>
<a name="line-6946"></a>        <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">val</span>
<a name="line-6947"></a>
<a name="line-6948"></a>    <span class="k">if</span> <span class="s1">'ImageJ'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
<a name="line-6949"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a ImageJ image description"</span><span class="p">)</span>
<a name="line-6950"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-6951"></a>
<a name="line-6952"></a>
<a name="line-6953"></a><span class="k">def</span> <span class="nf">imagej_description</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="n">rgb</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">colormaped</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">version</span><span class="o">=</span><span class="s1">'1.11a'</span><span class="p">,</span>
<a name="line-6954"></a>                       <span class="n">hyperstack</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">loop</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-6955"></a>    <span class="sd">"""Return ImageJ image description from data shape.</span>
<a name="line-6956"></a>
<a name="line-6957"></a><span class="sd">    ImageJ can handle up to 6 dimensions in order TZCYXS.</span>
<a name="line-6958"></a>
<a name="line-6959"></a><span class="sd">    &gt;&gt;&gt; imagej_description((51, 5, 2, 196, 171))  # doctest: +SKIP</span>
<a name="line-6960"></a><span class="sd">    ImageJ=1.11a</span>
<a name="line-6961"></a><span class="sd">    images=510</span>
<a name="line-6962"></a><span class="sd">    channels=2</span>
<a name="line-6963"></a><span class="sd">    slices=5</span>
<a name="line-6964"></a><span class="sd">    frames=51</span>
<a name="line-6965"></a><span class="sd">    hyperstack=true</span>
<a name="line-6966"></a><span class="sd">    mode=grayscale</span>
<a name="line-6967"></a><span class="sd">    loop=false</span>
<a name="line-6968"></a>
<a name="line-6969"></a><span class="sd">    """</span>
<a name="line-6970"></a>    <span class="k">if</span> <span class="n">colormaped</span><span class="p">:</span>
<a name="line-6971"></a>        <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">(</span><span class="s2">"ImageJ colormapping not supported"</span><span class="p">)</span>
<a name="line-6972"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="n">imagej_shape</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="n">rgb</span><span class="o">=</span><span class="n">rgb</span><span class="p">)</span>
<a name="line-6973"></a>    <span class="n">rgb</span> <span class="o">=</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<a name="line-6974"></a>
<a name="line-6975"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'ImageJ=</span><span class="si">%s</span><span class="s1">'</span> <span class="o">%</span> <span class="n">version</span><span class="p">]</span>
<a name="line-6976"></a>    <span class="n">append</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-6977"></a>    <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'images=</span><span class="si">%i</span><span class="s1">'</span> <span class="o">%</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">[:</span><span class="o">-</span><span class="mi">3</span><span class="p">]))</span>
<a name="line-6978"></a>    <span class="k">if</span> <span class="n">hyperstack</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-6979"></a>        <span class="n">hyperstack</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-6980"></a>        <span class="n">append</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'hyperstack=true'</span><span class="p">)</span>
<a name="line-6981"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-6982"></a>        <span class="n">append</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'hyperstack=</span><span class="si">%s</span><span class="s1">'</span> <span class="o">%</span> <span class="nb">bool</span><span class="p">(</span><span class="n">hyperstack</span><span class="p">))</span>
<a name="line-6983"></a>    <span class="k">if</span> <span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-6984"></a>        <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'channels=</span><span class="si">%i</span><span class="s1">'</span> <span class="o">%</span> <span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<a name="line-6985"></a>    <span class="k">if</span> <span class="n">mode</span> <span class="ow">is</span> <span class="bp">None</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">rgb</span><span class="p">:</span>
<a name="line-6986"></a>        <span class="n">mode</span> <span class="o">=</span> <span class="s1">'grayscale'</span>
<a name="line-6987"></a>    <span class="k">if</span> <span class="n">hyperstack</span> <span class="ow">and</span> <span class="n">mode</span><span class="p">:</span>
<a name="line-6988"></a>        <span class="n">append</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'mode=</span><span class="si">%s</span><span class="s1">'</span> <span class="o">%</span> <span class="n">mode</span><span class="p">)</span>
<a name="line-6989"></a>    <span class="k">if</span> <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-6990"></a>        <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'slices=</span><span class="si">%i</span><span class="s1">'</span> <span class="o">%</span> <span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-6991"></a>    <span class="k">if</span> <span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-6992"></a>        <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">"frames=</span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<a name="line-6993"></a>        <span class="k">if</span> <span class="n">loop</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-6994"></a>            <span class="n">append</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'loop=false'</span><span class="p">)</span>
<a name="line-6995"></a>    <span class="k">if</span> <span class="n">loop</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-6996"></a>        <span class="n">append</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'loop=</span><span class="si">%s</span><span class="s1">'</span> <span class="o">%</span> <span class="nb">bool</span><span class="p">(</span><span class="n">loop</span><span class="p">))</span>
<a name="line-6997"></a>    <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
<a name="line-6998"></a>        <span class="n">append</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">'</span><span class="si">%s</span><span class="s1">=</span><span class="si">%s</span><span class="s1">'</span> <span class="o">%</span> <span class="p">(</span><span class="n">key</span><span class="o">.</span><span class="n">lower</span><span class="p">(),</span> <span class="n">value</span><span class="p">))</span>
<a name="line-6999"></a>
<a name="line-7000"></a>    <span class="k">return</span> <span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">result</span> <span class="o">+</span> <span class="n">append</span> <span class="o">+</span> <span class="p">[</span><span class="s1">''</span><span class="p">])</span>
<a name="line-7001"></a>
<a name="line-7002"></a>
<a name="line-7003"></a><span class="k">def</span> <span class="nf">imagej_shape</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="n">rgb</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-7004"></a>    <span class="sd">"""Return shape normalized to 6D ImageJ hyperstack TZCYXS.</span>
<a name="line-7005"></a>
<a name="line-7006"></a><span class="sd">    Raise ValueError if not a valid ImageJ hyperstack shape.</span>
<a name="line-7007"></a>
<a name="line-7008"></a><span class="sd">    &gt;&gt;&gt; imagej_shape((2, 3, 4, 5, 3), False)</span>
<a name="line-7009"></a><span class="sd">    (2, 3, 4, 5, 3, 1)</span>
<a name="line-7010"></a>
<a name="line-7011"></a><span class="sd">    """</span>
<a name="line-7012"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">shape</span><span class="p">)</span>
<a name="line-7013"></a>    <span class="n">ndim</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-7014"></a>    <span class="k">if</span> <span class="mi">1</span> <span class="o">&gt;</span> <span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">6</span><span class="p">:</span>
<a name="line-7015"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid ImageJ hyperstack: not 2 to 6 dimensional"</span><span class="p">)</span>
<a name="line-7016"></a>    <span class="k">if</span> <span class="n">rgb</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-7017"></a>        <span class="n">rgb</span> <span class="o">=</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="ow">and</span> <span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">2</span>
<a name="line-7018"></a>    <span class="k">if</span> <span class="n">rgb</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-7019"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid ImageJ hyperstack: not a RGB image"</span><span class="p">)</span>
<a name="line-7020"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">rgb</span> <span class="ow">and</span> <span class="n">ndim</span> <span class="o">==</span> <span class="mi">6</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-7021"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid ImageJ hyperstack: not a non-RGB image"</span><span class="p">)</span>
<a name="line-7022"></a>    <span class="k">if</span> <span class="n">rgb</span> <span class="ow">or</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-7023"></a>        <span class="k">return</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="mi">6</span> <span class="o">-</span> <span class="n">ndim</span><span class="p">)</span> <span class="o">+</span> <span class="n">shape</span>
<a name="line-7024"></a>    <span class="k">return</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="mi">5</span> <span class="o">-</span> <span class="n">ndim</span><span class="p">)</span> <span class="o">+</span> <span class="n">shape</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span>
<a name="line-7025"></a>
<a name="line-7026"></a>
<a name="line-7027"></a><span class="k">def</span> <span class="nf">json_description</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="o">**</span><span class="n">metadata</span><span class="p">):</span>
<a name="line-7028"></a>    <span class="sd">"""Return JSON image description from data shape and other meta data.</span>
<a name="line-7029"></a>
<a name="line-7030"></a><span class="sd">    Return UTF-8 encoded JSON.</span>
<a name="line-7031"></a>
<a name="line-7032"></a><span class="sd">    &gt;&gt;&gt; json_description((256, 256, 3), axes='YXS')  # doctest: +SKIP</span>
<a name="line-7033"></a><span class="sd">    b'{"shape": [256, 256, 3], "axes": "YXS"}'</span>
<a name="line-7034"></a>
<a name="line-7035"></a><span class="sd">    """</span>
<a name="line-7036"></a>    <span class="n">metadata</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="n">shape</span><span class="p">)</span>
<a name="line-7037"></a>    <span class="k">return</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">metadata</span><span class="p">)</span>  <span class="c1"># .encode('utf-8')</span>
<a name="line-7038"></a>
<a name="line-7039"></a>
<a name="line-7040"></a><span class="k">def</span> <span class="nf">json_description_metadata</span><span class="p">(</span><span class="n">description</span><span class="p">):</span>
<a name="line-7041"></a>    <span class="sd">"""Return metatata from JSON formated image description as dict.</span>
<a name="line-7042"></a>
<a name="line-7043"></a><span class="sd">    Raise ValuError if description is of unknown format.</span>
<a name="line-7044"></a>
<a name="line-7045"></a><span class="sd">    &gt;&gt;&gt; description = '{"shape": [256, 256, 3], "axes": "YXS"}'</span>
<a name="line-7046"></a><span class="sd">    &gt;&gt;&gt; json_description_metadata(description)  # doctest: +SKIP</span>
<a name="line-7047"></a><span class="sd">    {'shape': [256, 256, 3], 'axes': 'YXS'}</span>
<a name="line-7048"></a><span class="sd">    &gt;&gt;&gt; json_description_metadata('shape=(256, 256, 3)')</span>
<a name="line-7049"></a><span class="sd">    {'shape': (256, 256, 3)}</span>
<a name="line-7050"></a>
<a name="line-7051"></a><span class="sd">    """</span>
<a name="line-7052"></a>    <span class="k">if</span> <span class="n">description</span><span class="p">[:</span><span class="mi">6</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'shape='</span><span class="p">:</span>
<a name="line-7053"></a>        <span class="c1"># old style 'shaped' description; not JSON</span>
<a name="line-7054"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">description</span><span class="p">[</span><span class="mi">7</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">','</span><span class="p">))</span>
<a name="line-7055"></a>        <span class="k">return</span> <span class="nb">dict</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="n">shape</span><span class="p">)</span>
<a name="line-7056"></a>    <span class="k">if</span> <span class="n">description</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'{'</span> <span class="ow">and</span> <span class="n">description</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">:]</span> <span class="o">==</span> <span class="s1">'}'</span><span class="p">:</span>
<a name="line-7057"></a>        <span class="c1"># JSON description</span>
<a name="line-7058"></a>        <span class="k">return</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
<a name="line-7059"></a>    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid JSON image description"</span><span class="p">,</span> <span class="n">description</span><span class="p">)</span>
<a name="line-7060"></a>
<a name="line-7061"></a>
<a name="line-7062"></a><span class="k">def</span> <span class="nf">fluoview_description_metadata</span><span class="p">(</span><span class="n">description</span><span class="p">,</span> <span class="n">ignoresections</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-7063"></a>    <span class="sd">"""Return metatata from FluoView image description as dict.</span>
<a name="line-7064"></a>
<a name="line-7065"></a><span class="sd">    The FluoView image description format is unspecified. Expect failures.</span>
<a name="line-7066"></a>
<a name="line-7067"></a><span class="sd">    &gt;&gt;&gt; descr = ('[Intensity Mapping]\\nMap Ch0: Range=00000 to 02047\\n'</span>
<a name="line-7068"></a><span class="sd">    ...          '[Intensity Mapping End]')</span>
<a name="line-7069"></a><span class="sd">    &gt;&gt;&gt; fluoview_description_metadata(descr)</span>
<a name="line-7070"></a><span class="sd">    {'Intensity Mapping': {'Map Ch0: Range': '00000 to 02047'}}</span>
<a name="line-7071"></a>
<a name="line-7072"></a><span class="sd">    """</span>
<a name="line-7073"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">description</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">'['</span><span class="p">):</span>
<a name="line-7074"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid FluoView image description"</span><span class="p">)</span>
<a name="line-7075"></a>    <span class="k">if</span> <span class="n">ignoresections</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-7076"></a>        <span class="n">ignoresections</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'Region Info (Fields)'</span><span class="p">,</span> <span class="s1">'Protocol Description'</span><span class="p">}</span>
<a name="line-7077"></a>
<a name="line-7078"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-7079"></a>    <span class="n">sections</span> <span class="o">=</span> <span class="p">[</span><span class="n">result</span><span class="p">]</span>
<a name="line-7080"></a>    <span class="n">comment</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-7081"></a>    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">description</span><span class="o">.</span><span class="n">splitlines</span><span class="p">():</span>
<a name="line-7082"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">comment</span><span class="p">:</span>
<a name="line-7083"></a>            <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-7084"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">line</span><span class="p">:</span>
<a name="line-7085"></a>            <span class="k">continue</span>
<a name="line-7086"></a>        <span class="k">if</span> <span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'['</span><span class="p">:</span>
<a name="line-7087"></a>            <span class="k">if</span> <span class="n">line</span><span class="p">[</span><span class="o">-</span><span class="mi">5</span><span class="p">:]</span> <span class="o">==</span> <span class="s1">' End]'</span><span class="p">:</span>
<a name="line-7088"></a>                <span class="c1"># close section</span>
<a name="line-7089"></a>                <span class="k">del</span> <span class="n">sections</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-7090"></a>                <span class="n">section</span> <span class="o">=</span> <span class="n">sections</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-7091"></a>                <span class="n">name</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">5</span><span class="p">]</span>
<a name="line-7092"></a>                <span class="k">if</span> <span class="n">comment</span><span class="p">:</span>
<a name="line-7093"></a>                    <span class="n">section</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">section</span><span class="p">[</span><span class="n">name</span><span class="p">])</span>
<a name="line-7094"></a>                <span class="k">if</span> <span class="n">name</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'LUT '</span><span class="p">:</span>
<a name="line-7095"></a>                    <span class="n">a</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">section</span><span class="p">[</span><span class="n">name</span><span class="p">],</span> <span class="n">dtype</span><span class="o">=</span><span class="s1">'uint8'</span><span class="p">)</span>
<a name="line-7096"></a>                    <span class="n">a</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span>
<a name="line-7097"></a>                    <span class="n">section</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span>
<a name="line-7098"></a>                <span class="k">continue</span>
<a name="line-7099"></a>            <span class="c1"># new section</span>
<a name="line-7100"></a>            <span class="n">comment</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-7101"></a>            <span class="n">name</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-7102"></a>            <span class="k">if</span> <span class="n">name</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'LUT '</span><span class="p">:</span>
<a name="line-7103"></a>                <span class="n">section</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7104"></a>            <span class="k">elif</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">ignoresections</span><span class="p">:</span>
<a name="line-7105"></a>                <span class="n">section</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7106"></a>                <span class="n">comment</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-7107"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-7108"></a>                <span class="n">section</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-7109"></a>            <span class="n">sections</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">section</span><span class="p">)</span>
<a name="line-7110"></a>            <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">section</span>
<a name="line-7111"></a>            <span class="k">continue</span>
<a name="line-7112"></a>        <span class="c1"># add entry</span>
<a name="line-7113"></a>        <span class="k">if</span> <span class="n">comment</span><span class="p">:</span>
<a name="line-7114"></a>            <span class="n">section</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
<a name="line-7115"></a>            <span class="k">continue</span>
<a name="line-7116"></a>        <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'='</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-7117"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">line</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-7118"></a>            <span class="n">section</span><span class="p">[</span><span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-7119"></a>            <span class="k">continue</span>
<a name="line-7120"></a>        <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">line</span>
<a name="line-7121"></a>        <span class="k">if</span> <span class="n">key</span><span class="p">[:</span><span class="mi">4</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'RGB '</span><span class="p">:</span>
<a name="line-7122"></a>            <span class="n">section</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">rgb</span><span class="p">)</span> <span class="k">for</span> <span class="n">rgb</span> <span class="ow">in</span> <span class="n">value</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
<a name="line-7123"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-7124"></a>            <span class="n">section</span><span class="p">[</span><span class="n">key</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
<a name="line-7125"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-7126"></a>
<a name="line-7127"></a>
<a name="line-7128"></a><span class="k">def</span> <span class="nf">pilatus_description_metadata</span><span class="p">(</span><span class="n">description</span><span class="p">):</span>
<a name="line-7129"></a>    <span class="sd">"""Return metatata from Pilatus image description as dict.</span>
<a name="line-7130"></a>
<a name="line-7131"></a><span class="sd">    Return metadata from Pilatus pixel array detectors by Dectris, created</span>
<a name="line-7132"></a><span class="sd">    by camserver or TVX software.</span>
<a name="line-7133"></a>
<a name="line-7134"></a><span class="sd">    &gt;&gt;&gt; pilatus_description_metadata('# Pixel_size 172e-6 m x 172e-6 m')</span>
<a name="line-7135"></a><span class="sd">    {'Pixel_size': (0.000172, 0.000172)}</span>
<a name="line-7136"></a>
<a name="line-7137"></a><span class="sd">    """</span>
<a name="line-7138"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-7139"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">description</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">'# '</span><span class="p">):</span>
<a name="line-7140"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-7141"></a>    <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="s1">'#:=,()'</span><span class="p">:</span>
<a name="line-7142"></a>        <span class="n">description</span> <span class="o">=</span> <span class="n">description</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="s1">' '</span><span class="p">)</span>
<a name="line-7143"></a>    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">description</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="p">):</span>
<a name="line-7144"></a>        <span class="k">if</span> <span class="n">line</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span> <span class="o">!=</span> <span class="s1">'  '</span><span class="p">:</span>
<a name="line-7145"></a>            <span class="k">continue</span>
<a name="line-7146"></a>        <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
<a name="line-7147"></a>        <span class="n">name</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-7148"></a>        <span class="k">if</span> <span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PILATUS_HEADER</span><span class="p">:</span>
<a name="line-7149"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-7150"></a>                <span class="n">result</span><span class="p">[</span><span class="s1">'DateTime'</span><span class="p">]</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">strptime</span><span class="p">(</span>
<a name="line-7151"></a>                    <span class="s1">' '</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">line</span><span class="p">),</span> <span class="s1">'%Y-%m-</span><span class="si">%d</span><span class="s1">T%H %M %S.</span><span class="si">%f</span><span class="s1">'</span><span class="p">)</span>
<a name="line-7152"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-7153"></a>                <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="s1">' '</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">line</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
<a name="line-7154"></a>            <span class="k">continue</span>
<a name="line-7155"></a>        <span class="n">indices</span><span class="p">,</span> <span class="n">dtype</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PILATUS_HEADER</span><span class="p">[</span><span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span>
<a name="line-7156"></a>        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">indices</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nb">slice</span><span class="p">):</span>
<a name="line-7157"></a>            <span class="c1"># assumes one slice</span>
<a name="line-7158"></a>            <span class="n">values</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="n">indices</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span>
<a name="line-7159"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-7160"></a>            <span class="n">values</span> <span class="o">=</span> <span class="p">[</span><span class="n">line</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">indices</span><span class="p">]</span>
<a name="line-7161"></a>        <span class="k">if</span> <span class="n">dtype</span> <span class="ow">is</span> <span class="nb">float</span> <span class="ow">and</span> <span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'not'</span><span class="p">:</span>
<a name="line-7162"></a>            <span class="n">values</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'NaN'</span><span class="p">]</span>
<a name="line-7163"></a>        <span class="n">values</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">dtype</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">values</span><span class="p">)</span>
<a name="line-7164"></a>        <span class="k">if</span> <span class="n">dtype</span> <span class="o">==</span> <span class="nb">str</span><span class="p">:</span>
<a name="line-7165"></a>            <span class="n">values</span> <span class="o">=</span> <span class="s1">' '</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">values</span><span class="p">)</span>
<a name="line-7166"></a>        <span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">values</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-7167"></a>            <span class="n">values</span> <span class="o">=</span> <span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-7168"></a>        <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">values</span>
<a name="line-7169"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-7170"></a>
<a name="line-7171"></a>
<a name="line-7172"></a><span class="k">def</span> <span class="nf">svs_description_metadata</span><span class="p">(</span><span class="n">description</span><span class="p">):</span>
<a name="line-7173"></a>    <span class="sd">"""Return metatata from Aperio image description as dict.</span>
<a name="line-7174"></a>
<a name="line-7175"></a><span class="sd">    The Aperio image description format is unspecified. Expect failures.</span>
<a name="line-7176"></a>
<a name="line-7177"></a><span class="sd">    &gt;&gt;&gt; svs_description_metadata('Aperio Image Library v1.0')</span>
<a name="line-7178"></a><span class="sd">    {'Aperio Image Library': 'v1.0'}</span>
<a name="line-7179"></a>
<a name="line-7180"></a><span class="sd">    """</span>
<a name="line-7181"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">description</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">'Aperio Image Library '</span><span class="p">):</span>
<a name="line-7182"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid Aperio image description"</span><span class="p">)</span>
<a name="line-7183"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-7184"></a>    <span class="n">lines</span> <span class="o">=</span> <span class="n">description</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="p">)</span>
<a name="line-7185"></a>    <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">rsplit</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>  <span class="c1"># 'Aperio Image Library'</span>
<a name="line-7186"></a>    <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-7187"></a>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">lines</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-7188"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-7189"></a>    <span class="n">items</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'|'</span><span class="p">)</span>
<a name="line-7190"></a>    <span class="n">result</span><span class="p">[</span><span class="s1">''</span><span class="p">]</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>  <span class="c1"># TODO: parse this?</span>
<a name="line-7191"></a>    <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">items</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
<a name="line-7192"></a>        <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">item</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">' = '</span><span class="p">)</span>
<a name="line-7193"></a>        <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
<a name="line-7194"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-7195"></a>
<a name="line-7196"></a>
<a name="line-7197"></a><span class="k">def</span> <span class="nf">stk_description_metadata</span><span class="p">(</span><span class="n">description</span><span class="p">):</span>
<a name="line-7198"></a>    <span class="sd">"""Return metadata from MetaMorph image description as list of dict.</span>
<a name="line-7199"></a>
<a name="line-7200"></a><span class="sd">    The MetaMorph image description format is unspecified. Expect failures.</span>
<a name="line-7201"></a>
<a name="line-7202"></a><span class="sd">    """</span>
<a name="line-7203"></a>    <span class="n">description</span> <span class="o">=</span> <span class="n">description</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-7204"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">description</span><span class="p">:</span>
<a name="line-7205"></a>        <span class="k">return</span> <span class="p">[]</span>
<a name="line-7206"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-7207"></a>        <span class="n">description</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
<a name="line-7208"></a>    <span class="k">except</span> <span class="ne">UnicodeDecodeError</span><span class="p">:</span>
<a name="line-7209"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"failed to parse MetaMorph image description"</span><span class="p">)</span>
<a name="line-7210"></a>        <span class="k">return</span> <span class="p">[]</span>
<a name="line-7211"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7212"></a>    <span class="k">for</span> <span class="n">plane</span> <span class="ow">in</span> <span class="n">description</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'</span><span class="se">\x00</span><span class="s1">'</span><span class="p">):</span>
<a name="line-7213"></a>        <span class="n">d</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-7214"></a>        <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">plane</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'</span><span class="se">\r\n</span><span class="s1">'</span><span class="p">):</span>
<a name="line-7215"></a>            <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">':'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-7216"></a>            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">line</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-7217"></a>                <span class="n">name</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">line</span>
<a name="line-7218"></a>                <span class="n">d</span><span class="p">[</span><span class="n">name</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
<a name="line-7219"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-7220"></a>                <span class="n">value</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-7221"></a>                <span class="k">if</span> <span class="n">value</span><span class="p">:</span>
<a name="line-7222"></a>                    <span class="k">if</span> <span class="s1">''</span> <span class="ow">in</span> <span class="n">d</span><span class="p">:</span>
<a name="line-7223"></a>                        <span class="n">d</span><span class="p">[</span><span class="s1">''</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-7224"></a>                    <span class="k">else</span><span class="p">:</span>
<a name="line-7225"></a>                        <span class="n">d</span><span class="p">[</span><span class="s1">''</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="n">value</span><span class="p">]</span>
<a name="line-7226"></a>        <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
<a name="line-7227"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-7228"></a>
<a name="line-7229"></a>
<a name="line-7230"></a><span class="k">def</span> <span class="nf">metaseries_description_metadata</span><span class="p">(</span><span class="n">description</span><span class="p">):</span>
<a name="line-7231"></a>    <span class="sd">"""Return metatata from MetaSeries image description as dict."""</span>
<a name="line-7232"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">description</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">'&lt;MetaData&gt;'</span><span class="p">):</span>
<a name="line-7233"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid MetaSeries image description"</span><span class="p">)</span>
<a name="line-7234"></a>
<a name="line-7235"></a>    <span class="kn">from</span> <span class="nn">xml.etree</span> <span class="kn">import</span> <span class="n">cElementTree</span> <span class="k">as</span> <span class="n">etree</span>  <span class="c1"># delayed import</span>
<a name="line-7236"></a>    <span class="n">root</span> <span class="o">=</span> <span class="n">etree</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
<a name="line-7237"></a>    <span class="n">types</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'float'</span><span class="p">:</span> <span class="nb">float</span><span class="p">,</span> <span class="s1">'int'</span><span class="p">:</span> <span class="nb">int</span><span class="p">,</span>
<a name="line-7238"></a>             <span class="s1">'bool'</span><span class="p">:</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">asbool</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="s1">'on'</span><span class="p">,</span> <span class="s1">'off'</span><span class="p">)}</span>
<a name="line-7239"></a>
<a name="line-7240"></a>    <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">result</span><span class="p">):</span>
<a name="line-7241"></a>        <span class="c1"># recursive</span>
<a name="line-7242"></a>        <span class="k">for</span> <span class="n">child</span> <span class="ow">in</span> <span class="n">root</span><span class="p">:</span>
<a name="line-7243"></a>            <span class="n">attrib</span> <span class="o">=</span> <span class="n">child</span><span class="o">.</span><span class="n">attrib</span>
<a name="line-7244"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">attrib</span><span class="p">:</span>
<a name="line-7245"></a>                <span class="n">result</span><span class="p">[</span><span class="n">child</span><span class="o">.</span><span class="n">tag</span><span class="p">]</span> <span class="o">=</span> <span class="n">parse</span><span class="p">(</span><span class="n">child</span><span class="p">,</span> <span class="p">{})</span>
<a name="line-7246"></a>                <span class="k">continue</span>
<a name="line-7247"></a>            <span class="k">if</span> <span class="s1">'id'</span> <span class="ow">in</span> <span class="n">attrib</span><span class="p">:</span>
<a name="line-7248"></a>                <span class="n">i</span> <span class="o">=</span> <span class="n">attrib</span><span class="p">[</span><span class="s1">'id'</span><span class="p">]</span>
<a name="line-7249"></a>                <span class="n">t</span> <span class="o">=</span> <span class="n">attrib</span><span class="p">[</span><span class="s1">'type'</span><span class="p">]</span>
<a name="line-7250"></a>                <span class="n">v</span> <span class="o">=</span> <span class="n">attrib</span><span class="p">[</span><span class="s1">'value'</span><span class="p">]</span>
<a name="line-7251"></a>                <span class="k">if</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">types</span><span class="p">:</span>
<a name="line-7252"></a>                    <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">types</span><span class="p">[</span><span class="n">t</span><span class="p">](</span><span class="n">v</span><span class="p">)</span>
<a name="line-7253"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-7254"></a>                    <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
<a name="line-7255"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-7256"></a>
<a name="line-7257"></a>    <span class="n">adict</span> <span class="o">=</span> <span class="n">parse</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="p">{})</span>
<a name="line-7258"></a>    <span class="k">if</span> <span class="s1">'Description'</span> <span class="ow">in</span> <span class="n">adict</span><span class="p">:</span>
<a name="line-7259"></a>        <span class="n">adict</span><span class="p">[</span><span class="s1">'Description'</span><span class="p">]</span> <span class="o">=</span> <span class="n">adict</span><span class="p">[</span><span class="s1">'Description'</span><span class="p">]</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'&amp;#13;&amp;#10;'</span><span class="p">,</span> <span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="p">)</span>
<a name="line-7260"></a>    <span class="k">return</span> <span class="n">adict</span>
<a name="line-7261"></a>
<a name="line-7262"></a>
<a name="line-7263"></a><span class="k">def</span> <span class="nf">scanimage_description_metadata</span><span class="p">(</span><span class="n">description</span><span class="p">):</span>
<a name="line-7264"></a>    <span class="sd">"""Return metatata from ScanImage image description as dict."""</span>
<a name="line-7265"></a>    <span class="k">return</span> <span class="n">matlabstr2py</span><span class="p">(</span><span class="n">description</span><span class="p">)</span>
<a name="line-7266"></a>
<a name="line-7267"></a>
<a name="line-7268"></a><span class="k">def</span> <span class="nf">scanimage_artist_metadata</span><span class="p">(</span><span class="n">artist</span><span class="p">):</span>
<a name="line-7269"></a>    <span class="sd">"""Return metatata from ScanImage artist tag as dict."""</span>
<a name="line-7270"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-7271"></a>        <span class="k">return</span> <span class="n">json</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">artist</span><span class="p">)</span>
<a name="line-7272"></a>    <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-7273"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"invalid JSON '</span><span class="si">%s</span><span class="s2">'"</span> <span class="o">%</span> <span class="n">artist</span><span class="p">)</span>
<a name="line-7274"></a>
<a name="line-7275"></a>
<a name="line-7276"></a><span class="k">def</span> <span class="nf">_replace_by</span><span class="p">(</span><span class="n">module_function</span><span class="p">,</span> <span class="n">package</span><span class="o">=</span><span class="n">__package__</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">prefix</span><span class="o">=</span><span class="s1">'_'</span><span class="p">):</span>
<a name="line-7277"></a>    <span class="sd">"""Try replace decorated function by module.function."""</span>
<a name="line-7278"></a>    <span class="k">def</span> <span class="nf">_warn</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">warn</span><span class="p">):</span>
<a name="line-7279"></a>        <span class="k">if</span> <span class="n">warn</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-7280"></a>            <span class="n">warn</span> <span class="o">=</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">  Functionality might be degraded or be slow.</span><span class="se">\n</span><span class="s2">"</span>
<a name="line-7281"></a>        <span class="k">elif</span> <span class="n">warn</span> <span class="ow">is</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-7282"></a>            <span class="n">warn</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-7283"></a>        <span class="k">elif</span> <span class="ow">not</span> <span class="n">warn</span><span class="p">:</span>
<a name="line-7284"></a>            <span class="k">return</span>
<a name="line-7285"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"</span><span class="si">%s%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">warn</span><span class="p">))</span>
<a name="line-7286"></a>
<a name="line-7287"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-7288"></a>        <span class="kn">from</span> <span class="nn">importlib</span> <span class="kn">import</span> <span class="n">import_module</span>
<a name="line-7289"></a>    <span class="k">except</span> <span class="ne">ImportError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-7290"></a>        <span class="n">_warn</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">warn</span><span class="p">)</span>
<a name="line-7291"></a>        <span class="k">return</span> <span class="n">identityfunc</span>
<a name="line-7292"></a>
<a name="line-7293"></a>    <span class="k">def</span> <span class="nf">decorate</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">module_function</span><span class="o">=</span><span class="n">module_function</span><span class="p">,</span> <span class="n">warn</span><span class="o">=</span><span class="n">warn</span><span class="p">):</span>
<a name="line-7294"></a>        <span class="n">module</span><span class="p">,</span> <span class="n">function</span> <span class="o">=</span> <span class="n">module_function</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'.'</span><span class="p">)</span>
<a name="line-7295"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-7296"></a>            <span class="k">if</span> <span class="n">package</span><span class="p">:</span>
<a name="line-7297"></a>                <span class="n">module</span> <span class="o">=</span> <span class="n">import_module</span><span class="p">(</span><span class="s1">'.'</span> <span class="o">+</span> <span class="n">module</span><span class="p">,</span> <span class="n">package</span><span class="o">=</span><span class="n">package</span><span class="p">)</span>
<a name="line-7298"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-7299"></a>                <span class="n">module</span> <span class="o">=</span> <span class="n">import_module</span><span class="p">(</span><span class="n">module</span><span class="p">)</span>
<a name="line-7300"></a>        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-7301"></a>            <span class="n">_warn</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">warn</span><span class="p">)</span>
<a name="line-7302"></a>            <span class="k">return</span> <span class="n">func</span>
<a name="line-7303"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-7304"></a>            <span class="n">func</span><span class="p">,</span> <span class="n">oldfunc</span> <span class="o">=</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">module</span><span class="p">,</span> <span class="n">function</span><span class="p">),</span> <span class="n">func</span>
<a name="line-7305"></a>        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-7306"></a>            <span class="n">_warn</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">warn</span><span class="p">)</span>
<a name="line-7307"></a>            <span class="k">return</span> <span class="n">func</span>
<a name="line-7308"></a>        <span class="nb">globals</span><span class="p">()[</span><span class="n">prefix</span> <span class="o">+</span> <span class="n">func</span><span class="o">.</span><span class="vm">__name__</span><span class="p">]</span> <span class="o">=</span> <span class="n">oldfunc</span>
<a name="line-7309"></a>        <span class="k">return</span> <span class="n">func</span>
<a name="line-7310"></a>
<a name="line-7311"></a>    <span class="k">return</span> <span class="n">decorate</span>
<a name="line-7312"></a>
<a name="line-7313"></a>
<a name="line-7314"></a><span class="k">def</span> <span class="nf">decode_floats</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
<a name="line-7315"></a>    <span class="sd">"""Decode floating point horizontal differencing.</span>
<a name="line-7316"></a>
<a name="line-7317"></a><span class="sd">    The TIFF predictor type 3 reorders the bytes of the image values and</span>
<a name="line-7318"></a><span class="sd">    applies horizontal byte differencing to improve compression of floating</span>
<a name="line-7319"></a><span class="sd">    point images. The ordering of interleaved color channels is preserved.</span>
<a name="line-7320"></a>
<a name="line-7321"></a><span class="sd">    Parameters</span>
<a name="line-7322"></a><span class="sd">    ----------</span>
<a name="line-7323"></a><span class="sd">    data : numpy.ndarray</span>
<a name="line-7324"></a><span class="sd">        The image to be decoded. The dtype must be a floating point.</span>
<a name="line-7325"></a><span class="sd">        The shape must include the number of contiguous samples per pixel</span>
<a name="line-7326"></a><span class="sd">        even if 1.</span>
<a name="line-7327"></a>
<a name="line-7328"></a><span class="sd">    """</span>
<a name="line-7329"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span>
<a name="line-7330"></a>    <span class="n">dtype</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-7331"></a>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
<a name="line-7332"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">'invalid data shape'</span><span class="p">)</span>
<a name="line-7333"></a>    <span class="k">if</span> <span class="n">dtype</span><span class="o">.</span><span class="n">char</span> <span class="ow">not</span> <span class="ow">in</span> <span class="s1">'dfe'</span><span class="p">:</span>
<a name="line-7334"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">'not a floating point image'</span><span class="p">)</span>
<a name="line-7335"></a>    <span class="n">littleendian</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'&lt;'</span> <span class="ow">or</span> <span class="p">(</span>
<a name="line-7336"></a>        <span class="n">sys</span><span class="o">.</span><span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'little'</span> <span class="ow">and</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'='</span><span class="p">)</span>
<a name="line-7337"></a>    <span class="c1"># undo horizontal byte differencing</span>
<a name="line-7338"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">view</span><span class="p">(</span><span class="s1">'uint8'</span><span class="p">)</span>
<a name="line-7339"></a>    <span class="n">data</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="n">shape</span><span class="p">[:</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">:]</span>
<a name="line-7340"></a>    <span class="n">numpy</span><span class="o">.</span><span class="n">cumsum</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">axis</span><span class="o">=-</span><span class="mi">2</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="s1">'uint8'</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">data</span><span class="p">)</span>
<a name="line-7341"></a>    <span class="c1"># reorder bytes</span>
<a name="line-7342"></a>    <span class="k">if</span> <span class="n">littleendian</span><span class="p">:</span>
<a name="line-7343"></a>        <span class="n">data</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="n">shape</span><span class="p">[:</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">:]</span>
<a name="line-7344"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">)</span>
<a name="line-7345"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-7346"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-7347"></a>    <span class="c1"># back to float</span>
<a name="line-7348"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">ascontiguousarray</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<a name="line-7349"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">view</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-7350"></a>    <span class="n">data</span><span class="o">.</span><span class="n">shape</span> <span class="o">=</span> <span class="n">shape</span>
<a name="line-7351"></a>    <span class="k">return</span> <span class="n">data</span>
<a name="line-7352"></a>
<a name="line-7353"></a>
<a name="line-7354"></a><span class="k">def</span> <span class="nf">decode_jpeg</span><span class="p">(</span><span class="n">encoded</span><span class="p">,</span> <span class="n">tables</span><span class="o">=</span><span class="sa">b</span><span class="s1">''</span><span class="p">,</span> <span class="n">photometric</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-7355"></a>                <span class="n">ycbcrsubsampling</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">ycbcrpositioning</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-7356"></a>    <span class="sd">"""Decode JPEG encoded byte string (using _czifile extension module)."""</span>
<a name="line-7357"></a>    <span class="kn">from</span> <span class="nn">czifile</span> <span class="kn">import</span> <span class="n">_czifile</span>
<a name="line-7358"></a>    <span class="n">image</span> <span class="o">=</span> <span class="n">_czifile</span><span class="o">.</span><span class="n">decode_jpeg</span><span class="p">(</span><span class="n">encoded</span><span class="p">,</span> <span class="n">tables</span><span class="p">)</span>
<a name="line-7359"></a>    <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">ycbcrsubsampling</span> <span class="ow">and</span> <span class="n">ycbcrpositioning</span><span class="p">:</span>
<a name="line-7360"></a>        <span class="c1"># TODO: convert YCbCr to RGB</span>
<a name="line-7361"></a>        <span class="k">pass</span>
<a name="line-7362"></a>    <span class="k">return</span> <span class="n">image</span><span class="o">.</span><span class="n">tostring</span><span class="p">()</span>
<a name="line-7363"></a>
<a name="line-7364"></a>
<a name="line-7365"></a><span class="nd">@_replace_by</span><span class="p">(</span><span class="s1">'_tifffile.decode_packbits'</span><span class="p">)</span>
<a name="line-7366"></a><span class="k">def</span> <span class="nf">decode_packbits</span><span class="p">(</span><span class="n">encoded</span><span class="p">):</span>
<a name="line-7367"></a>    <span class="sd">"""Decompress PackBits encoded byte string.</span>
<a name="line-7368"></a>
<a name="line-7369"></a><span class="sd">    PackBits is a simple byte-oriented run-length compression scheme.</span>
<a name="line-7370"></a>
<a name="line-7371"></a><span class="sd">    """</span>
<a name="line-7372"></a>    <span class="n">func</span> <span class="o">=</span> <span class="nb">ord</span> <span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'2'</span> <span class="k">else</span> <span class="n">identityfunc</span>
<a name="line-7373"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7374"></a>    <span class="n">result_extend</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">extend</span>
<a name="line-7375"></a>    <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-7376"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-7377"></a>        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-7378"></a>            <span class="n">n</span> <span class="o">=</span> <span class="n">func</span><span class="p">(</span><span class="n">encoded</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">+</span> <span class="mi">1</span>
<a name="line-7379"></a>            <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-7380"></a>            <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">129</span><span class="p">:</span>
<a name="line-7381"></a>                <span class="n">result_extend</span><span class="p">(</span><span class="n">encoded</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">i</span><span class="o">+</span><span class="n">n</span><span class="p">])</span>
<a name="line-7382"></a>                <span class="n">i</span> <span class="o">+=</span> <span class="n">n</span>
<a name="line-7383"></a>            <span class="k">elif</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="mi">129</span><span class="p">:</span>
<a name="line-7384"></a>                <span class="n">result_extend</span><span class="p">(</span><span class="n">encoded</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="mi">258</span><span class="o">-</span><span class="n">n</span><span class="p">))</span>
<a name="line-7385"></a>                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-7386"></a>    <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-7387"></a>        <span class="k">pass</span>
<a name="line-7388"></a>    <span class="k">return</span> <span class="sa">b</span><span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'2'</span> <span class="k">else</span> <span class="nb">bytes</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
<a name="line-7389"></a>
<a name="line-7390"></a>
<a name="line-7391"></a><span class="nd">@_replace_by</span><span class="p">(</span><span class="s1">'_tifffile.decode_lzw'</span><span class="p">)</span>
<a name="line-7392"></a><span class="k">def</span> <span class="nf">decode_lzw</span><span class="p">(</span><span class="n">encoded</span><span class="p">):</span>
<a name="line-7393"></a>    <span class="sd">"""Decompress LZW (Lempel-Ziv-Welch) encoded TIFF strip (byte string).</span>
<a name="line-7394"></a>
<a name="line-7395"></a><span class="sd">    The strip must begin with a CLEAR code and end with an EOI code.</span>
<a name="line-7396"></a>
<a name="line-7397"></a><span class="sd">    This is an implementation of the LZW decoding algorithm described in (1).</span>
<a name="line-7398"></a><span class="sd">    It is not compatible with old style LZW compressed files like quad-lzw.tif.</span>
<a name="line-7399"></a>
<a name="line-7400"></a><span class="sd">    """</span>
<a name="line-7401"></a>    <span class="n">len_encoded</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">encoded</span><span class="p">)</span>
<a name="line-7402"></a>    <span class="n">bitcount_max</span> <span class="o">=</span> <span class="n">len_encoded</span> <span class="o">*</span> <span class="mi">8</span>
<a name="line-7403"></a>    <span class="n">unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span>
<a name="line-7404"></a>
<a name="line-7405"></a>    <span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'2'</span><span class="p">:</span>
<a name="line-7406"></a>        <span class="n">newtable</span> <span class="o">=</span> <span class="p">[</span><span class="nb">chr</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">)]</span>
<a name="line-7407"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-7408"></a>        <span class="n">newtable</span> <span class="o">=</span> <span class="p">[</span><span class="nb">bytes</span><span class="p">([</span><span class="n">i</span><span class="p">])</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">256</span><span class="p">)]</span>
<a name="line-7409"></a>    <span class="n">newtable</span><span class="o">.</span><span class="n">extend</span><span class="p">((</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<a name="line-7410"></a>
<a name="line-7411"></a>    <span class="k">def</span> <span class="nf">next_code</span><span class="p">():</span>
<a name="line-7412"></a>        <span class="sd">"""Return integer of 'bitw' bits at 'bitcount' position in encoded."""</span>
<a name="line-7413"></a>        <span class="n">start</span> <span class="o">=</span> <span class="n">bitcount</span> <span class="o">//</span> <span class="mi">8</span>
<a name="line-7414"></a>        <span class="n">s</span> <span class="o">=</span> <span class="n">encoded</span><span class="p">[</span><span class="n">start</span><span class="p">:</span><span class="n">start</span><span class="o">+</span><span class="mi">4</span><span class="p">]</span>
<a name="line-7415"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-7416"></a>            <span class="n">code</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="s1">'&gt;I'</span><span class="p">,</span> <span class="n">s</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-7417"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-7418"></a>            <span class="n">code</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="s1">'&gt;I'</span><span class="p">,</span> <span class="n">s</span> <span class="o">+</span> <span class="sa">b</span><span class="s1">'</span><span class="se">\x00</span><span class="s1">'</span><span class="o">*</span><span class="p">(</span><span class="mi">4</span><span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-7419"></a>        <span class="n">code</span> <span class="o">&lt;&lt;=</span> <span class="n">bitcount</span> <span class="o">%</span> <span class="mi">8</span>
<a name="line-7420"></a>        <span class="n">code</span> <span class="o">&amp;=</span> <span class="n">mask</span>
<a name="line-7421"></a>        <span class="k">return</span> <span class="n">code</span> <span class="o">&gt;&gt;</span> <span class="n">shr</span>
<a name="line-7422"></a>
<a name="line-7423"></a>    <span class="n">switchbitch</span> <span class="o">=</span> <span class="p">{</span>  <span class="c1"># code: bit-width, shr-bits, bit-mask</span>
<a name="line-7424"></a>        <span class="mi">255</span><span class="p">:</span> <span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="mi">23</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="mi">9</span><span class="o">*</span><span class="s1">'1'</span><span class="o">+</span><span class="s1">'0'</span><span class="o">*</span><span class="mi">23</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span>
<a name="line-7425"></a>        <span class="mi">511</span><span class="p">:</span> <span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">22</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="mi">10</span><span class="o">*</span><span class="s1">'1'</span><span class="o">+</span><span class="s1">'0'</span><span class="o">*</span><span class="mi">22</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span>
<a name="line-7426"></a>        <span class="mi">1023</span><span class="p">:</span> <span class="p">(</span><span class="mi">11</span><span class="p">,</span> <span class="mi">21</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="mi">11</span><span class="o">*</span><span class="s1">'1'</span><span class="o">+</span><span class="s1">'0'</span><span class="o">*</span><span class="mi">21</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span>
<a name="line-7427"></a>        <span class="mi">2047</span><span class="p">:</span> <span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="mi">12</span><span class="o">*</span><span class="s1">'1'</span><span class="o">+</span><span class="s1">'0'</span><span class="o">*</span><span class="mi">20</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span> <span class="p">}</span>
<a name="line-7428"></a>    <span class="n">bitw</span><span class="p">,</span> <span class="n">shr</span><span class="p">,</span> <span class="n">mask</span> <span class="o">=</span> <span class="n">switchbitch</span><span class="p">[</span><span class="mi">255</span><span class="p">]</span>
<a name="line-7429"></a>    <span class="n">bitcount</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-7430"></a>
<a name="line-7431"></a>    <span class="k">if</span> <span class="n">len_encoded</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">:</span>
<a name="line-7432"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"strip must be at least 4 characters long"</span><span class="p">)</span>
<a name="line-7433"></a>
<a name="line-7434"></a>    <span class="k">if</span> <span class="n">next_code</span><span class="p">()</span> <span class="o">!=</span> <span class="mi">256</span><span class="p">:</span>
<a name="line-7435"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"strip must begin with CLEAR code"</span><span class="p">)</span>
<a name="line-7436"></a>
<a name="line-7437"></a>    <span class="n">code</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-7438"></a>    <span class="n">oldcode</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-7439"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7440"></a>    <span class="n">result_append</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="n">append</span>
<a name="line-7441"></a>    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-7442"></a>        <span class="n">code</span> <span class="o">=</span> <span class="n">next_code</span><span class="p">()</span>  <span class="c1"># ~5% faster when inlining this function</span>
<a name="line-7443"></a>        <span class="n">bitcount</span> <span class="o">+=</span> <span class="n">bitw</span>
<a name="line-7444"></a>        <span class="k">if</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">257</span> <span class="ow">or</span> <span class="n">bitcount</span> <span class="o">&gt;=</span> <span class="n">bitcount_max</span><span class="p">:</span>  <span class="c1"># EOI</span>
<a name="line-7445"></a>            <span class="k">break</span>
<a name="line-7446"></a>        <span class="k">if</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">256</span><span class="p">:</span>  <span class="c1"># CLEAR</span>
<a name="line-7447"></a>            <span class="n">table</span> <span class="o">=</span> <span class="n">newtable</span><span class="p">[:]</span>
<a name="line-7448"></a>            <span class="n">table_append</span> <span class="o">=</span> <span class="n">table</span><span class="o">.</span><span class="n">append</span>
<a name="line-7449"></a>            <span class="n">lentable</span> <span class="o">=</span> <span class="mi">258</span>
<a name="line-7450"></a>            <span class="n">bitw</span><span class="p">,</span> <span class="n">shr</span><span class="p">,</span> <span class="n">mask</span> <span class="o">=</span> <span class="n">switchbitch</span><span class="p">[</span><span class="mi">255</span><span class="p">]</span>
<a name="line-7451"></a>            <span class="n">code</span> <span class="o">=</span> <span class="n">next_code</span><span class="p">()</span>
<a name="line-7452"></a>            <span class="n">bitcount</span> <span class="o">+=</span> <span class="n">bitw</span>
<a name="line-7453"></a>            <span class="k">if</span> <span class="n">code</span> <span class="o">==</span> <span class="mi">257</span><span class="p">:</span>  <span class="c1"># EOI</span>
<a name="line-7454"></a>                <span class="k">break</span>
<a name="line-7455"></a>            <span class="n">result_append</span><span class="p">(</span><span class="n">table</span><span class="p">[</span><span class="n">code</span><span class="p">])</span>
<a name="line-7456"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-7457"></a>            <span class="k">if</span> <span class="n">code</span> <span class="o">&lt;</span> <span class="n">lentable</span><span class="p">:</span>
<a name="line-7458"></a>                <span class="n">decoded</span> <span class="o">=</span> <span class="n">table</span><span class="p">[</span><span class="n">code</span><span class="p">]</span>
<a name="line-7459"></a>                <span class="n">newcode</span> <span class="o">=</span> <span class="n">table</span><span class="p">[</span><span class="n">oldcode</span><span class="p">]</span> <span class="o">+</span> <span class="n">decoded</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span>
<a name="line-7460"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-7461"></a>                <span class="n">newcode</span> <span class="o">=</span> <span class="n">table</span><span class="p">[</span><span class="n">oldcode</span><span class="p">]</span>
<a name="line-7462"></a>                <span class="n">newcode</span> <span class="o">+=</span> <span class="n">newcode</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span>
<a name="line-7463"></a>                <span class="n">decoded</span> <span class="o">=</span> <span class="n">newcode</span>
<a name="line-7464"></a>            <span class="n">result_append</span><span class="p">(</span><span class="n">decoded</span><span class="p">)</span>
<a name="line-7465"></a>            <span class="n">table_append</span><span class="p">(</span><span class="n">newcode</span><span class="p">)</span>
<a name="line-7466"></a>            <span class="n">lentable</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-7467"></a>        <span class="n">oldcode</span> <span class="o">=</span> <span class="n">code</span>
<a name="line-7468"></a>        <span class="k">if</span> <span class="n">lentable</span> <span class="ow">in</span> <span class="n">switchbitch</span><span class="p">:</span>
<a name="line-7469"></a>            <span class="n">bitw</span><span class="p">,</span> <span class="n">shr</span><span class="p">,</span> <span class="n">mask</span> <span class="o">=</span> <span class="n">switchbitch</span><span class="p">[</span><span class="n">lentable</span><span class="p">]</span>
<a name="line-7470"></a>
<a name="line-7471"></a>    <span class="k">if</span> <span class="n">code</span> <span class="o">!=</span> <span class="mi">257</span><span class="p">:</span>
<a name="line-7472"></a>        <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"unexpected end of lzw stream (code </span><span class="si">%i</span><span class="s2">)"</span> <span class="o">%</span> <span class="n">code</span><span class="p">)</span>
<a name="line-7473"></a>
<a name="line-7474"></a>    <span class="k">return</span> <span class="sa">b</span><span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
<a name="line-7475"></a>
<a name="line-7476"></a>
<a name="line-7477"></a><span class="nd">@_replace_by</span><span class="p">(</span><span class="s1">'_tifffile.unpack_ints'</span><span class="p">)</span>
<a name="line-7478"></a><span class="k">def</span> <span class="nf">unpack_ints</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">itemsize</span><span class="p">,</span> <span class="n">runlen</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
<a name="line-7479"></a>    <span class="sd">"""Decompress byte string to array of integers of any bit size &lt;= 32.</span>
<a name="line-7480"></a>
<a name="line-7481"></a><span class="sd">    This Python implementation is slow and only handles itemsizes 1, 2, 4, 8,</span>
<a name="line-7482"></a><span class="sd">    16, 32, and 64.</span>
<a name="line-7483"></a>
<a name="line-7484"></a><span class="sd">    Parameters</span>
<a name="line-7485"></a><span class="sd">    ----------</span>
<a name="line-7486"></a><span class="sd">    data : byte str</span>
<a name="line-7487"></a><span class="sd">        Data to decompress.</span>
<a name="line-7488"></a><span class="sd">    dtype : numpy.dtype or str</span>
<a name="line-7489"></a><span class="sd">        A numpy boolean or integer type.</span>
<a name="line-7490"></a><span class="sd">    itemsize : int</span>
<a name="line-7491"></a><span class="sd">        Number of bits per integer.</span>
<a name="line-7492"></a><span class="sd">    runlen : int</span>
<a name="line-7493"></a><span class="sd">        Number of consecutive integers, after which to start at next byte.</span>
<a name="line-7494"></a>
<a name="line-7495"></a><span class="sd">    Examples</span>
<a name="line-7496"></a><span class="sd">    --------</span>
<a name="line-7497"></a><span class="sd">    &gt;&gt;&gt; unpack_ints(b'a', 'B', 1)</span>
<a name="line-7498"></a><span class="sd">    array([0, 1, 1, 0, 0, 0, 0, 1], dtype=uint8)</span>
<a name="line-7499"></a><span class="sd">    &gt;&gt;&gt; unpack_ints(b'ab', 'B', 2)</span>
<a name="line-7500"></a><span class="sd">    array([1, 2, 0, 1, 1, 2, 0, 2], dtype=uint8)</span>
<a name="line-7501"></a>
<a name="line-7502"></a><span class="sd">    """</span>
<a name="line-7503"></a>    <span class="k">if</span> <span class="n">itemsize</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>  <span class="c1"># bitarray</span>
<a name="line-7504"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="s1">'|B'</span><span class="p">)</span>
<a name="line-7505"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">unpackbits</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<a name="line-7506"></a>        <span class="k">if</span> <span class="n">runlen</span> <span class="o">%</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-7507"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">runlen</span> <span class="o">+</span> <span class="p">(</span><span class="mi">8</span> <span class="o">-</span> <span class="n">runlen</span> <span class="o">%</span> <span class="mi">8</span><span class="p">))</span>
<a name="line-7508"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[:,</span> <span class="p">:</span><span class="n">runlen</span><span class="p">]</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-7509"></a>        <span class="k">return</span> <span class="n">data</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-7510"></a>
<a name="line-7511"></a>    <span class="n">dtype</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-7512"></a>    <span class="k">if</span> <span class="n">itemsize</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">,</span> <span class="mi">64</span><span class="p">):</span>
<a name="line-7513"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-7514"></a>    <span class="k">if</span> <span class="n">itemsize</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">):</span>
<a name="line-7515"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"itemsize not supported: </span><span class="si">%i</span><span class="s2">"</span> <span class="o">%</span> <span class="n">itemsize</span><span class="p">)</span>
<a name="line-7516"></a>    <span class="k">if</span> <span class="n">dtype</span><span class="o">.</span><span class="n">kind</span> <span class="ow">not</span> <span class="ow">in</span> <span class="s2">"biu"</span><span class="p">:</span>
<a name="line-7517"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid dtype"</span><span class="p">)</span>
<a name="line-7518"></a>
<a name="line-7519"></a>    <span class="n">itembytes</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span> <span class="k">if</span> <span class="mi">8</span> <span class="o">*</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">itemsize</span><span class="p">)</span>
<a name="line-7520"></a>    <span class="k">if</span> <span class="n">itembytes</span> <span class="o">!=</span> <span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span><span class="p">:</span>
<a name="line-7521"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"dtype.itemsize too small"</span><span class="p">)</span>
<a name="line-7522"></a>    <span class="k">if</span> <span class="n">runlen</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-7523"></a>        <span class="n">runlen</span> <span class="o">=</span> <span class="p">(</span><span class="mi">8</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">))</span> <span class="o">//</span> <span class="n">itemsize</span>
<a name="line-7524"></a>    <span class="n">skipbits</span> <span class="o">=</span> <span class="n">runlen</span> <span class="o">*</span> <span class="n">itemsize</span> <span class="o">%</span> <span class="mi">8</span>
<a name="line-7525"></a>    <span class="k">if</span> <span class="n">skipbits</span><span class="p">:</span>
<a name="line-7526"></a>        <span class="n">skipbits</span> <span class="o">=</span> <span class="mi">8</span> <span class="o">-</span> <span class="n">skipbits</span>
<a name="line-7527"></a>    <span class="n">shrbits</span> <span class="o">=</span> <span class="n">itembytes</span><span class="o">*</span><span class="mi">8</span> <span class="o">-</span> <span class="n">itemsize</span>
<a name="line-7528"></a>    <span class="n">bitmask</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">itemsize</span><span class="o">*</span><span class="s1">'1'</span><span class="o">+</span><span class="s1">'0'</span><span class="o">*</span><span class="n">shrbits</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-7529"></a>    <span class="n">dtypestr</span> <span class="o">=</span> <span class="s1">'&gt;'</span> <span class="o">+</span> <span class="n">dtype</span><span class="o">.</span><span class="n">char</span>  <span class="c1"># dtype always big endian?</span>
<a name="line-7530"></a>
<a name="line-7531"></a>    <span class="n">unpack</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span>
<a name="line-7532"></a>    <span class="n">l</span> <span class="o">=</span> <span class="n">runlen</span> <span class="o">*</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)</span><span class="o">*</span><span class="mi">8</span> <span class="o">//</span> <span class="p">(</span><span class="n">runlen</span><span class="o">*</span><span class="n">itemsize</span> <span class="o">+</span> <span class="n">skipbits</span><span class="p">))</span>
<a name="line-7533"></a>    <span class="n">result</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">empty</span><span class="p">((</span><span class="n">l</span><span class="p">,),</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-7534"></a>    <span class="n">bitcount</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-7535"></a>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">l</span><span class="p">):</span>
<a name="line-7536"></a>        <span class="n">start</span> <span class="o">=</span> <span class="n">bitcount</span> <span class="o">//</span> <span class="mi">8</span>
<a name="line-7537"></a>        <span class="n">s</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="n">start</span><span class="p">:</span><span class="n">start</span><span class="o">+</span><span class="n">itembytes</span><span class="p">]</span>
<a name="line-7538"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-7539"></a>            <span class="n">code</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">dtypestr</span><span class="p">,</span> <span class="n">s</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-7540"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-7541"></a>            <span class="n">code</span> <span class="o">=</span> <span class="n">unpack</span><span class="p">(</span><span class="n">dtypestr</span><span class="p">,</span> <span class="n">s</span> <span class="o">+</span> <span class="sa">b</span><span class="s1">'</span><span class="se">\x00</span><span class="s1">'</span><span class="o">*</span><span class="p">(</span><span class="n">itembytes</span><span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)))[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-7542"></a>        <span class="n">code</span> <span class="o">&lt;&lt;=</span> <span class="n">bitcount</span> <span class="o">%</span> <span class="mi">8</span>
<a name="line-7543"></a>        <span class="n">code</span> <span class="o">&amp;=</span> <span class="n">bitmask</span>
<a name="line-7544"></a>        <span class="n">result</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">code</span> <span class="o">&gt;&gt;</span> <span class="n">shrbits</span>
<a name="line-7545"></a>        <span class="n">bitcount</span> <span class="o">+=</span> <span class="n">itemsize</span>
<a name="line-7546"></a>        <span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">runlen</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-7547"></a>            <span class="n">bitcount</span> <span class="o">+=</span> <span class="n">skipbits</span>
<a name="line-7548"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-7549"></a>
<a name="line-7550"></a>
<a name="line-7551"></a><span class="k">def</span> <span class="nf">unpack_rgb</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="s1">'&lt;B'</span><span class="p">,</span> <span class="n">bitspersample</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="n">rescale</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
<a name="line-7552"></a>    <span class="sd">"""Return array from byte string containing packed samples.</span>
<a name="line-7553"></a>
<a name="line-7554"></a><span class="sd">    Use to unpack RGB565 or RGB555 to RGB888 format.</span>
<a name="line-7555"></a>
<a name="line-7556"></a><span class="sd">    Parameters</span>
<a name="line-7557"></a><span class="sd">    ----------</span>
<a name="line-7558"></a><span class="sd">    data : byte str</span>
<a name="line-7559"></a><span class="sd">        The data to be decoded. Samples in each pixel are stored consecutively.</span>
<a name="line-7560"></a><span class="sd">        Pixels are aligned to 8, 16, or 32 bit boundaries.</span>
<a name="line-7561"></a><span class="sd">    dtype : numpy.dtype</span>
<a name="line-7562"></a><span class="sd">        The sample data type. The byteorder applies also to the data stream.</span>
<a name="line-7563"></a><span class="sd">    bitspersample : tuple</span>
<a name="line-7564"></a><span class="sd">        Number of bits for each sample in a pixel.</span>
<a name="line-7565"></a><span class="sd">    rescale : bool</span>
<a name="line-7566"></a><span class="sd">        Upscale samples to the number of bits in dtype.</span>
<a name="line-7567"></a>
<a name="line-7568"></a><span class="sd">    Returns</span>
<a name="line-7569"></a><span class="sd">    -------</span>
<a name="line-7570"></a><span class="sd">    result : ndarray</span>
<a name="line-7571"></a><span class="sd">        Flattened array of unpacked samples of native dtype.</span>
<a name="line-7572"></a>
<a name="line-7573"></a><span class="sd">    Examples</span>
<a name="line-7574"></a><span class="sd">    --------</span>
<a name="line-7575"></a><span class="sd">    &gt;&gt;&gt; data = struct.pack('BBBB', 0x21, 0x08, 0xff, 0xff)</span>
<a name="line-7576"></a><span class="sd">    &gt;&gt;&gt; print(unpack_rgb(data, '&lt;B', (5, 6, 5), False))</span>
<a name="line-7577"></a><span class="sd">    [ 1  1  1 31 63 31]</span>
<a name="line-7578"></a><span class="sd">    &gt;&gt;&gt; print(unpack_rgb(data, '&lt;B', (5, 6, 5)))</span>
<a name="line-7579"></a><span class="sd">    [  8   4   8 255 255 255]</span>
<a name="line-7580"></a><span class="sd">    &gt;&gt;&gt; print(unpack_rgb(data, '&lt;B', (5, 5, 5)))</span>
<a name="line-7581"></a><span class="sd">    [ 16   8   8 255 255 255]</span>
<a name="line-7582"></a>
<a name="line-7583"></a><span class="sd">    """</span>
<a name="line-7584"></a>    <span class="n">dtype</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-7585"></a>    <span class="n">bits</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">numpy</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">bitspersample</span><span class="p">))</span>
<a name="line-7586"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="n">bits</span> <span class="o">&lt;=</span> <span class="mi">32</span> <span class="ow">and</span> <span class="nb">all</span><span class="p">(</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span><span class="o">*</span><span class="mi">8</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">bitspersample</span><span class="p">)):</span>
<a name="line-7587"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"sample size not supported </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="nb">str</span><span class="p">(</span><span class="n">bitspersample</span><span class="p">))</span>
<a name="line-7588"></a>    <span class="n">dt</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="s1">'BHI'</span> <span class="k">if</span> <span class="n">numpy</span><span class="o">.</span><span class="n">dtype</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">itemsize</span><span class="o">*</span><span class="mi">8</span> <span class="o">&gt;=</span> <span class="n">bits</span><span class="p">)</span>
<a name="line-7589"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">dtype</span><span class="o">.</span><span class="n">byteorder</span><span class="o">+</span><span class="n">dt</span><span class="p">)</span>
<a name="line-7590"></a>    <span class="n">result</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">empty</span><span class="p">((</span><span class="n">data</span><span class="o">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">bitspersample</span><span class="p">)),</span> <span class="n">dtype</span><span class="o">.</span><span class="n">char</span><span class="p">)</span>
<a name="line-7591"></a>    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">bps</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">bitspersample</span><span class="p">):</span>
<a name="line-7592"></a>        <span class="n">t</span> <span class="o">=</span> <span class="n">data</span> <span class="o">&gt;&gt;</span> <span class="nb">int</span><span class="p">(</span><span class="n">numpy</span><span class="o">.</span><span class="n">sum</span><span class="p">(</span><span class="n">bitspersample</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">:]))</span>
<a name="line-7593"></a>        <span class="n">t</span> <span class="o">&amp;=</span> <span class="nb">int</span><span class="p">(</span><span class="s1">'0b'</span><span class="o">+</span><span class="s1">'1'</span><span class="o">*</span><span class="n">bps</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-7594"></a>        <span class="k">if</span> <span class="n">rescale</span><span class="p">:</span>
<a name="line-7595"></a>            <span class="n">o</span> <span class="o">=</span> <span class="p">((</span><span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">*</span> <span class="mi">8</span><span class="p">)</span> <span class="o">//</span> <span class="n">bps</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">bps</span>
<a name="line-7596"></a>            <span class="k">if</span> <span class="n">o</span> <span class="o">&gt;</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">*</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-7597"></a>                <span class="n">t</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">'I'</span><span class="p">)</span>
<a name="line-7598"></a>            <span class="n">t</span> <span class="o">*=</span> <span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="n">o</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="p">(</span><span class="mi">2</span><span class="o">**</span><span class="n">bps</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-7599"></a>            <span class="n">t</span> <span class="o">//=</span> <span class="mi">2</span><span class="o">**</span><span class="p">(</span><span class="n">o</span> <span class="o">-</span> <span class="p">(</span><span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">*</span> <span class="mi">8</span><span class="p">))</span>
<a name="line-7600"></a>        <span class="n">result</span><span class="p">[:,</span> <span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">t</span>
<a name="line-7601"></a>    <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-7602"></a>
<a name="line-7603"></a>
<a name="line-7604"></a><span class="nd">@_replace_by</span><span class="p">(</span><span class="s1">'_tifffile.reverse_bitorder'</span><span class="p">)</span>
<a name="line-7605"></a><span class="k">def</span> <span class="nf">reverse_bitorder</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
<a name="line-7606"></a>    <span class="sd">"""Reverse bits in each byte of byte string or numpy array.</span>
<a name="line-7607"></a>
<a name="line-7608"></a><span class="sd">    Decode data where pixels with lower column values are stored in the</span>
<a name="line-7609"></a><span class="sd">    lower-order bits of the bytes (FillOrder is LSB2MSB).</span>
<a name="line-7610"></a>
<a name="line-7611"></a><span class="sd">    Parameters</span>
<a name="line-7612"></a><span class="sd">    ----------</span>
<a name="line-7613"></a><span class="sd">    data : byte string or ndarray</span>
<a name="line-7614"></a><span class="sd">        The data to be bit reversed. If byte string, a new bit-reversed byte</span>
<a name="line-7615"></a><span class="sd">        string is returned. Numpy arrays are bit-reversed in-place.</span>
<a name="line-7616"></a>
<a name="line-7617"></a><span class="sd">    Examples</span>
<a name="line-7618"></a><span class="sd">    --------</span>
<a name="line-7619"></a><span class="sd">    &gt;&gt;&gt; reverse_bitorder(b'\\x01\\x64')</span>
<a name="line-7620"></a><span class="sd">    b'\\x80&amp;'</span>
<a name="line-7621"></a><span class="sd">    &gt;&gt;&gt; data = numpy.array([1, 666], dtype='uint16')</span>
<a name="line-7622"></a><span class="sd">    &gt;&gt;&gt; reverse_bitorder(data)</span>
<a name="line-7623"></a><span class="sd">    &gt;&gt;&gt; data</span>
<a name="line-7624"></a><span class="sd">    array([  128, 16473], dtype=uint16)</span>
<a name="line-7625"></a>
<a name="line-7626"></a><span class="sd">    """</span>
<a name="line-7627"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-7628"></a>        <span class="n">view</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">view</span><span class="p">(</span><span class="s1">'uint8'</span><span class="p">)</span>
<a name="line-7629"></a>        <span class="n">numpy</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">REVERSE_BITORDER_ARRAY</span><span class="p">,</span> <span class="n">view</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">view</span><span class="p">)</span>
<a name="line-7630"></a>    <span class="k">except</span> <span class="ne">AttributeError</span><span class="p">:</span>
<a name="line-7631"></a>        <span class="k">return</span> <span class="n">data</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">TIFF</span><span class="o">.</span><span class="n">REVERSE_BITORDER_BYTES</span><span class="p">)</span>
<a name="line-7632"></a>    <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-7633"></a>        <span class="k">raise</span> <span class="ne">NotImplementedError</span><span class="p">(</span><span class="s2">"slices of arrays not supported"</span><span class="p">)</span>
<a name="line-7634"></a>
<a name="line-7635"></a>
<a name="line-7636"></a><span class="k">def</span> <span class="nf">apply_colormap</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">colormap</span><span class="p">,</span> <span class="n">contig</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
<a name="line-7637"></a>    <span class="sd">"""Return palette-colored image.</span>
<a name="line-7638"></a>
<a name="line-7639"></a><span class="sd">    The image values are used to index the colormap on axis 1. The returned</span>
<a name="line-7640"></a><span class="sd">    image is of shape image.shape+colormap.shape[0] and dtype colormap.dtype.</span>
<a name="line-7641"></a>
<a name="line-7642"></a><span class="sd">    Parameters</span>
<a name="line-7643"></a><span class="sd">    ----------</span>
<a name="line-7644"></a><span class="sd">    image : numpy.ndarray</span>
<a name="line-7645"></a><span class="sd">        Indexes into the colormap.</span>
<a name="line-7646"></a><span class="sd">    colormap : numpy.ndarray</span>
<a name="line-7647"></a><span class="sd">        RGB lookup table aka palette of shape (3, 2**bits_per_sample).</span>
<a name="line-7648"></a><span class="sd">    contig : bool</span>
<a name="line-7649"></a><span class="sd">        If True, return a contiguous array.</span>
<a name="line-7650"></a>
<a name="line-7651"></a><span class="sd">    Examples</span>
<a name="line-7652"></a><span class="sd">    --------</span>
<a name="line-7653"></a><span class="sd">    &gt;&gt;&gt; image = numpy.arange(256, dtype='uint8')</span>
<a name="line-7654"></a><span class="sd">    &gt;&gt;&gt; colormap = numpy.vstack([image, image, image]).astype('uint16') * 256</span>
<a name="line-7655"></a><span class="sd">    &gt;&gt;&gt; apply_colormap(image, colormap)[-1]</span>
<a name="line-7656"></a><span class="sd">    array([65280, 65280, 65280], dtype=uint16)</span>
<a name="line-7657"></a>
<a name="line-7658"></a><span class="sd">    """</span>
<a name="line-7659"></a>    <span class="n">image</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span class="n">colormap</span><span class="p">,</span> <span class="n">image</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<a name="line-7660"></a>    <span class="n">image</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">rollaxis</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">image</span><span class="o">.</span><span class="n">ndim</span><span class="p">)</span>
<a name="line-7661"></a>    <span class="k">if</span> <span class="n">contig</span><span class="p">:</span>
<a name="line-7662"></a>        <span class="n">image</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">ascontiguousarray</span><span class="p">(</span><span class="n">image</span><span class="p">)</span>
<a name="line-7663"></a>    <span class="k">return</span> <span class="n">image</span>
<a name="line-7664"></a>
<a name="line-7665"></a>
<a name="line-7666"></a><span class="k">def</span> <span class="nf">reorient</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">orientation</span><span class="p">):</span>
<a name="line-7667"></a>    <span class="sd">"""Return reoriented view of image array.</span>
<a name="line-7668"></a>
<a name="line-7669"></a><span class="sd">    Parameters</span>
<a name="line-7670"></a><span class="sd">    ----------</span>
<a name="line-7671"></a><span class="sd">    image : numpy.ndarray</span>
<a name="line-7672"></a><span class="sd">        Non-squeezed output of asarray() functions.</span>
<a name="line-7673"></a><span class="sd">        Axes -3 and -2 must be image length and width respectively.</span>
<a name="line-7674"></a><span class="sd">    orientation : int or str</span>
<a name="line-7675"></a><span class="sd">        One of TIFF.ORIENTATION names or values.</span>
<a name="line-7676"></a>
<a name="line-7677"></a><span class="sd">    """</span>
<a name="line-7678"></a>    <span class="n">ORIENTATION</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">ORIENTATION</span>
<a name="line-7679"></a>    <span class="n">orientation</span> <span class="o">=</span> <span class="n">enumarg</span><span class="p">(</span><span class="n">ORIENTATION</span><span class="p">,</span> <span class="n">orientation</span><span class="p">)</span>
<a name="line-7680"></a>
<a name="line-7681"></a>    <span class="k">if</span> <span class="n">orientation</span> <span class="o">==</span> <span class="n">ORIENTATION</span><span class="o">.</span><span class="n">TOPLEFT</span><span class="p">:</span>
<a name="line-7682"></a>        <span class="k">return</span> <span class="n">image</span>
<a name="line-7683"></a>    <span class="k">elif</span> <span class="n">orientation</span> <span class="o">==</span> <span class="n">ORIENTATION</span><span class="o">.</span><span class="n">TOPRIGHT</span><span class="p">:</span>
<a name="line-7684"></a>        <span class="k">return</span> <span class="n">image</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">:]</span>
<a name="line-7685"></a>    <span class="k">elif</span> <span class="n">orientation</span> <span class="o">==</span> <span class="n">ORIENTATION</span><span class="o">.</span><span class="n">BOTLEFT</span><span class="p">:</span>
<a name="line-7686"></a>        <span class="k">return</span> <span class="n">image</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">:,</span> <span class="p">:]</span>
<a name="line-7687"></a>    <span class="k">elif</span> <span class="n">orientation</span> <span class="o">==</span> <span class="n">ORIENTATION</span><span class="o">.</span><span class="n">BOTRIGHT</span><span class="p">:</span>
<a name="line-7688"></a>        <span class="k">return</span> <span class="n">image</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">:]</span>
<a name="line-7689"></a>    <span class="k">elif</span> <span class="n">orientation</span> <span class="o">==</span> <span class="n">ORIENTATION</span><span class="o">.</span><span class="n">LEFTTOP</span><span class="p">:</span>
<a name="line-7690"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">)</span>
<a name="line-7691"></a>    <span class="k">elif</span> <span class="n">orientation</span> <span class="o">==</span> <span class="n">ORIENTATION</span><span class="o">.</span><span class="n">RIGHTTOP</span><span class="p">:</span>
<a name="line-7692"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">)[</span><span class="o">...</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">:]</span>
<a name="line-7693"></a>    <span class="k">elif</span> <span class="n">orientation</span> <span class="o">==</span> <span class="n">ORIENTATION</span><span class="o">.</span><span class="n">RIGHTBOT</span><span class="p">:</span>
<a name="line-7694"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">)[</span><span class="o">...</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">:,</span> <span class="p">:]</span>
<a name="line-7695"></a>    <span class="k">elif</span> <span class="n">orientation</span> <span class="o">==</span> <span class="n">ORIENTATION</span><span class="o">.</span><span class="n">LEFTBOT</span><span class="p">:</span>
<a name="line-7696"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">)[</span><span class="o">...</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="p">:]</span>
<a name="line-7697"></a>
<a name="line-7698"></a>
<a name="line-7699"></a><span class="k">def</span> <span class="nf">repeat_nd</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">repeats</span><span class="p">):</span>
<a name="line-7700"></a>    <span class="sd">"""Return read-only view into input array with elements repeated.</span>
<a name="line-7701"></a>
<a name="line-7702"></a><span class="sd">    Zoom nD image by integer factors using nearest neighbor interpolation</span>
<a name="line-7703"></a><span class="sd">    (box filter).</span>
<a name="line-7704"></a>
<a name="line-7705"></a><span class="sd">    Parameters</span>
<a name="line-7706"></a><span class="sd">    ----------</span>
<a name="line-7707"></a><span class="sd">    a : array_like</span>
<a name="line-7708"></a><span class="sd">        Input array.</span>
<a name="line-7709"></a><span class="sd">    repeats : sequence of int</span>
<a name="line-7710"></a><span class="sd">        The number of repetitions to apply along each dimension of input array.</span>
<a name="line-7711"></a>
<a name="line-7712"></a><span class="sd">    Example</span>
<a name="line-7713"></a><span class="sd">    -------</span>
<a name="line-7714"></a><span class="sd">    &gt;&gt;&gt; repeat_nd([[1, 2], [3, 4]], (2, 2))</span>
<a name="line-7715"></a><span class="sd">    array([[1, 1, 2, 2],</span>
<a name="line-7716"></a><span class="sd">           [1, 1, 2, 2],</span>
<a name="line-7717"></a><span class="sd">           [3, 3, 4, 4],</span>
<a name="line-7718"></a><span class="sd">           [3, 3, 4, 4]])</span>
<a name="line-7719"></a>
<a name="line-7720"></a><span class="sd">    """</span>
<a name="line-7721"></a>    <span class="n">a</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<a name="line-7722"></a>    <span class="n">reshape</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7723"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7724"></a>    <span class="n">strides</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7725"></a>    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">a</span><span class="o">.</span><span class="n">strides</span><span class="p">,</span> <span class="n">a</span><span class="o">.</span><span class="n">shape</span><span class="p">,</span> <span class="n">repeats</span><span class="p">):</span>
<a name="line-7726"></a>        <span class="n">shape</span><span class="o">.</span><span class="n">extend</span><span class="p">((</span><span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
<a name="line-7727"></a>        <span class="n">strides</span><span class="o">.</span><span class="n">extend</span><span class="p">((</span><span class="n">i</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
<a name="line-7728"></a>        <span class="n">reshape</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">j</span> <span class="o">*</span> <span class="n">k</span><span class="p">)</span>
<a name="line-7729"></a>    <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">lib</span><span class="o">.</span><span class="n">stride_tricks</span><span class="o">.</span><span class="n">as_strided</span><span class="p">(</span>
<a name="line-7730"></a>        <span class="n">a</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">strides</span><span class="p">,</span> <span class="n">writeable</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">reshape</span><span class="p">)</span>
<a name="line-7731"></a>
<a name="line-7732"></a>
<a name="line-7733"></a><span class="k">def</span> <span class="nf">reshape_nd</span><span class="p">(</span><span class="n">data_or_shape</span><span class="p">,</span> <span class="n">ndim</span><span class="p">):</span>
<a name="line-7734"></a>    <span class="sd">"""Return image array or shape with at least ndim dimensions.</span>
<a name="line-7735"></a>
<a name="line-7736"></a><span class="sd">    Prepend 1s to image shape as necessary.</span>
<a name="line-7737"></a>
<a name="line-7738"></a><span class="sd">    &gt;&gt;&gt; reshape_nd(numpy.empty(0), 1).shape</span>
<a name="line-7739"></a><span class="sd">    (0,)</span>
<a name="line-7740"></a><span class="sd">    &gt;&gt;&gt; reshape_nd(numpy.empty(1), 2).shape</span>
<a name="line-7741"></a><span class="sd">    (1, 1)</span>
<a name="line-7742"></a><span class="sd">    &gt;&gt;&gt; reshape_nd(numpy.empty((2, 3)), 3).shape</span>
<a name="line-7743"></a><span class="sd">    (1, 2, 3)</span>
<a name="line-7744"></a><span class="sd">    &gt;&gt;&gt; reshape_nd(numpy.empty((3, 4, 5)), 3).shape</span>
<a name="line-7745"></a><span class="sd">    (3, 4, 5)</span>
<a name="line-7746"></a><span class="sd">    &gt;&gt;&gt; reshape_nd((2, 3), 3)</span>
<a name="line-7747"></a><span class="sd">    (1, 2, 3)</span>
<a name="line-7748"></a>
<a name="line-7749"></a><span class="sd">    """</span>
<a name="line-7750"></a>    <span class="n">is_shape</span> <span class="o">=</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">data_or_shape</span><span class="p">,</span> <span class="nb">tuple</span><span class="p">)</span>
<a name="line-7751"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="n">data_or_shape</span> <span class="k">if</span> <span class="n">is_shape</span> <span class="k">else</span> <span class="n">data_or_shape</span><span class="o">.</span><span class="n">shape</span>
<a name="line-7752"></a>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">ndim</span><span class="p">:</span>
<a name="line-7753"></a>        <span class="k">return</span> <span class="n">data_or_shape</span>
<a name="line-7754"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span> <span class="o">*</span> <span class="p">(</span><span class="n">ndim</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">))</span> <span class="o">+</span> <span class="n">shape</span>
<a name="line-7755"></a>    <span class="k">return</span> <span class="n">shape</span> <span class="k">if</span> <span class="n">is_shape</span> <span class="k">else</span> <span class="n">data_or_shape</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-7756"></a>
<a name="line-7757"></a>
<a name="line-7758"></a><span class="k">def</span> <span class="nf">squeeze_axes</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">skip</span><span class="o">=</span><span class="s1">'XY'</span><span class="p">):</span>
<a name="line-7759"></a>    <span class="sd">"""Return shape and axes with single-dimensional entries removed.</span>
<a name="line-7760"></a>
<a name="line-7761"></a><span class="sd">    Remove unused dimensions unless their axes are listed in 'skip'.</span>
<a name="line-7762"></a>
<a name="line-7763"></a><span class="sd">    &gt;&gt;&gt; squeeze_axes((5, 1, 2, 1, 1), 'TZYXC')</span>
<a name="line-7764"></a><span class="sd">    ((5, 2, 1), 'TYX')</span>
<a name="line-7765"></a>
<a name="line-7766"></a><span class="sd">    """</span>
<a name="line-7767"></a>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="n">axes</span><span class="p">):</span>
<a name="line-7768"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"dimensions of axes and shape do not match"</span><span class="p">)</span>
<a name="line-7769"></a>    <span class="n">shape</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="n">axes</span><span class="p">)</span>
<a name="line-7770"></a>                        <span class="k">if</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="n">skip</span><span class="p">))</span>
<a name="line-7771"></a>    <span class="k">return</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">shape</span><span class="p">),</span> <span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">axes</span><span class="p">)</span>
<a name="line-7772"></a>
<a name="line-7773"></a>
<a name="line-7774"></a><span class="k">def</span> <span class="nf">transpose_axes</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">axes</span><span class="p">,</span> <span class="n">asaxes</span><span class="o">=</span><span class="s1">'CTZYX'</span><span class="p">):</span>
<a name="line-7775"></a>    <span class="sd">"""Return image with its axes permuted to match specified axes.</span>
<a name="line-7776"></a>
<a name="line-7777"></a><span class="sd">    A view is returned if possible.</span>
<a name="line-7778"></a>
<a name="line-7779"></a><span class="sd">    &gt;&gt;&gt; transpose_axes(numpy.zeros((2, 3, 4, 5)), 'TYXC', asaxes='CTZYX').shape</span>
<a name="line-7780"></a><span class="sd">    (5, 2, 1, 3, 4)</span>
<a name="line-7781"></a>
<a name="line-7782"></a><span class="sd">    """</span>
<a name="line-7783"></a>    <span class="k">for</span> <span class="n">ax</span> <span class="ow">in</span> <span class="n">axes</span><span class="p">:</span>
<a name="line-7784"></a>        <span class="k">if</span> <span class="n">ax</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">asaxes</span><span class="p">:</span>
<a name="line-7785"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"unknown axis </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">ax</span><span class="p">)</span>
<a name="line-7786"></a>    <span class="c1"># add missing axes to image</span>
<a name="line-7787"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="n">image</span><span class="o">.</span><span class="n">shape</span>
<a name="line-7788"></a>    <span class="k">for</span> <span class="n">ax</span> <span class="ow">in</span> <span class="nb">reversed</span><span class="p">(</span><span class="n">asaxes</span><span class="p">):</span>
<a name="line-7789"></a>        <span class="k">if</span> <span class="n">ax</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">axes</span><span class="p">:</span>
<a name="line-7790"></a>            <span class="n">axes</span> <span class="o">=</span> <span class="n">ax</span> <span class="o">+</span> <span class="n">axes</span>
<a name="line-7791"></a>            <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span> <span class="o">+</span> <span class="n">shape</span>
<a name="line-7792"></a>    <span class="n">image</span> <span class="o">=</span> <span class="n">image</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-7793"></a>    <span class="c1"># transpose axes</span>
<a name="line-7794"></a>    <span class="n">image</span> <span class="o">=</span> <span class="n">image</span><span class="o">.</span><span class="n">transpose</span><span class="p">([</span><span class="n">axes</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">ax</span><span class="p">)</span> <span class="k">for</span> <span class="n">ax</span> <span class="ow">in</span> <span class="n">asaxes</span><span class="p">])</span>
<a name="line-7795"></a>    <span class="k">return</span> <span class="n">image</span>
<a name="line-7796"></a>
<a name="line-7797"></a>
<a name="line-7798"></a><span class="k">def</span> <span class="nf">reshape_axes</span><span class="p">(</span><span class="n">axes</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">newshape</span><span class="p">,</span> <span class="n">unknown</span><span class="o">=</span><span class="s1">'Q'</span><span class="p">):</span>
<a name="line-7799"></a>    <span class="sd">"""Return axes matching new shape.</span>
<a name="line-7800"></a>
<a name="line-7801"></a><span class="sd">    Unknown dimensions are labelled 'Q'.</span>
<a name="line-7802"></a>
<a name="line-7803"></a><span class="sd">    &gt;&gt;&gt; reshape_axes('YXS', (219, 301, 1), (219, 301))</span>
<a name="line-7804"></a><span class="sd">    'YX'</span>
<a name="line-7805"></a><span class="sd">    &gt;&gt;&gt; reshape_axes('IYX', (12, 219, 301), (3, 4, 219, 1, 301, 1))</span>
<a name="line-7806"></a><span class="sd">    'QQYQXQ'</span>
<a name="line-7807"></a>
<a name="line-7808"></a><span class="sd">    """</span>
<a name="line-7809"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-7810"></a>    <span class="n">newshape</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">newshape</span><span class="p">)</span>
<a name="line-7811"></a>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">axes</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">):</span>
<a name="line-7812"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"axes do not match shape"</span><span class="p">)</span>
<a name="line-7813"></a>
<a name="line-7814"></a>    <span class="n">size</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-7815"></a>    <span class="n">newsize</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">newshape</span><span class="p">)</span>
<a name="line-7816"></a>    <span class="k">if</span> <span class="n">size</span> <span class="o">!=</span> <span class="n">newsize</span><span class="p">:</span>
<a name="line-7817"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"can not reshape </span><span class="si">%s</span><span class="s2"> to </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="n">newshape</span><span class="p">))</span>
<a name="line-7818"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">axes</span> <span class="ow">or</span> <span class="ow">not</span> <span class="n">newshape</span><span class="p">:</span>
<a name="line-7819"></a>        <span class="k">return</span> <span class="s1">''</span>
<a name="line-7820"></a>
<a name="line-7821"></a>    <span class="n">lendiff</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">newshape</span><span class="p">))</span>
<a name="line-7822"></a>    <span class="k">if</span> <span class="n">lendiff</span><span class="p">:</span>
<a name="line-7823"></a>        <span class="n">newshape</span> <span class="o">=</span> <span class="n">newshape</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span> <span class="o">*</span> <span class="n">lendiff</span>
<a name="line-7824"></a>
<a name="line-7825"></a>    <span class="n">i</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span>
<a name="line-7826"></a>    <span class="n">prodns</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-7827"></a>    <span class="n">prods</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-7828"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7829"></a>    <span class="k">for</span> <span class="n">ns</span> <span class="ow">in</span> <span class="n">newshape</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
<a name="line-7830"></a>        <span class="n">prodns</span> <span class="o">*=</span> <span class="n">ns</span>
<a name="line-7831"></a>        <span class="k">while</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">ns</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-7832"></a>            <span class="n">i</span> <span class="o">-=</span> <span class="mi">1</span>
<a name="line-7833"></a>        <span class="k">if</span> <span class="n">ns</span> <span class="o">==</span> <span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">and</span> <span class="n">prodns</span> <span class="o">==</span> <span class="n">prods</span><span class="o">*</span><span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
<a name="line-7834"></a>            <span class="n">prods</span> <span class="o">*=</span> <span class="n">shape</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<a name="line-7835"></a>            <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">axes</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
<a name="line-7836"></a>            <span class="n">i</span> <span class="o">-=</span> <span class="mi">1</span>
<a name="line-7837"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-7838"></a>            <span class="n">result</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">unknown</span><span class="p">)</span>
<a name="line-7839"></a>
<a name="line-7840"></a>    <span class="k">return</span> <span class="s1">''</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="nb">reversed</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="n">lendiff</span><span class="p">:]))</span>
<a name="line-7841"></a>
<a name="line-7842"></a>
<a name="line-7843"></a><span class="k">def</span> <span class="nf">stack_pages</span><span class="p">(</span><span class="n">pages</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">maxworkers</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-7844"></a>    <span class="sd">"""Read data from sequence of TiffPage and stack them vertically.</span>
<a name="line-7845"></a>
<a name="line-7846"></a><span class="sd">    Additional parameters are passsed to the TiffPage.asarray function.</span>
<a name="line-7847"></a>
<a name="line-7848"></a><span class="sd">    """</span>
<a name="line-7849"></a>    <span class="n">npages</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span>
<a name="line-7850"></a>    <span class="k">if</span> <span class="n">npages</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-7851"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"no pages"</span><span class="p">)</span>
<a name="line-7852"></a>
<a name="line-7853"></a>    <span class="k">if</span> <span class="n">npages</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-7854"></a>        <span class="k">return</span> <span class="n">pages</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">out</span><span class="o">=</span><span class="n">out</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-7855"></a>
<a name="line-7856"></a>    <span class="n">page0</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">p</span> <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">pages</span> <span class="k">if</span> <span class="n">p</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-7857"></a>    <span class="n">page0</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">validate</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>  <span class="c1"># ThreadPoolExecutor swallows exceptions</span>
<a name="line-7858"></a>    <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="n">npages</span><span class="p">,)</span> <span class="o">+</span> <span class="n">page0</span><span class="o">.</span><span class="n">keyframe</span><span class="o">.</span><span class="n">shape</span>
<a name="line-7859"></a>    <span class="n">dtype</span> <span class="o">=</span> <span class="n">page0</span><span class="o">.</span><span class="n">keyframe</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-7860"></a>    <span class="n">out</span> <span class="o">=</span> <span class="n">create_output</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-7861"></a>
<a name="line-7862"></a>    <span class="k">if</span> <span class="n">maxworkers</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-7863"></a>        <span class="n">maxworkers</span> <span class="o">=</span> <span class="n">multiprocessing</span><span class="o">.</span><span class="n">cpu_count</span><span class="p">()</span> <span class="o">//</span> <span class="mi">2</span>
<a name="line-7864"></a>    <span class="n">page0</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">lock</span> <span class="o">=</span> <span class="n">maxworkers</span> <span class="o">&gt;</span> <span class="mi">1</span>
<a name="line-7865"></a>
<a name="line-7866"></a>    <span class="n">filecache</span> <span class="o">=</span> <span class="n">OpenFileCache</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="nb">max</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">maxworkers</span><span class="p">),</span>
<a name="line-7867"></a>                              <span class="n">lock</span><span class="o">=</span><span class="n">page0</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">lock</span><span class="p">)</span>
<a name="line-7868"></a>
<a name="line-7869"></a>    <span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">index</span><span class="p">,</span> <span class="n">out</span><span class="o">=</span><span class="n">out</span><span class="p">,</span> <span class="n">filecache</span><span class="o">=</span><span class="n">filecache</span><span class="p">,</span>
<a name="line-7870"></a>             <span class="n">args</span><span class="o">=</span><span class="n">args</span><span class="p">,</span> <span class="n">kwargs</span><span class="o">=</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-7871"></a>        <span class="sd">"""Read, decode, and copy page data."""</span>
<a name="line-7872"></a>        <span class="k">if</span> <span class="n">page</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-7873"></a>            <span class="n">filecache</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="p">)</span>
<a name="line-7874"></a>            <span class="n">out</span><span class="p">[</span><span class="n">index</span><span class="p">]</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">lock</span><span class="o">=</span><span class="n">filecache</span><span class="o">.</span><span class="n">lock</span><span class="p">,</span> <span class="n">reopen</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
<a name="line-7875"></a>                                      <span class="n">validate</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-7876"></a>            <span class="n">filecache</span><span class="o">.</span><span class="n">close</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="p">)</span>
<a name="line-7877"></a>
<a name="line-7878"></a>    <span class="k">if</span> <span class="n">maxworkers</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-7879"></a>        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">page</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">pages</span><span class="p">):</span>
<a name="line-7880"></a>            <span class="n">func</span><span class="p">(</span><span class="n">page</span><span class="p">,</span> <span class="n">i</span><span class="p">)</span>
<a name="line-7881"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-7882"></a>        <span class="k">with</span> <span class="n">concurrent</span><span class="o">.</span><span class="n">futures</span><span class="o">.</span><span class="n">ThreadPoolExecutor</span><span class="p">(</span><span class="n">maxworkers</span><span class="p">)</span> <span class="k">as</span> <span class="n">executor</span><span class="p">:</span>
<a name="line-7883"></a>            <span class="n">executor</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="n">func</span><span class="p">,</span> <span class="n">pages</span><span class="p">,</span> <span class="nb">range</span><span class="p">(</span><span class="n">npages</span><span class="p">))</span>
<a name="line-7884"></a>
<a name="line-7885"></a>    <span class="n">filecache</span><span class="o">.</span><span class="n">clear</span><span class="p">()</span>
<a name="line-7886"></a>    <span class="n">page0</span><span class="o">.</span><span class="n">parent</span><span class="o">.</span><span class="n">filehandle</span><span class="o">.</span><span class="n">lock</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-7887"></a>
<a name="line-7888"></a>    <span class="k">return</span> <span class="n">out</span>
<a name="line-7889"></a>
<a name="line-7890"></a>
<a name="line-7891"></a><span class="k">def</span> <span class="nf">clean_offsets_counts</span><span class="p">(</span><span class="n">offsets</span><span class="p">,</span> <span class="n">counts</span><span class="p">):</span>
<a name="line-7892"></a>    <span class="sd">"""Return cleaned offsets and byte counts.</span>
<a name="line-7893"></a>
<a name="line-7894"></a><span class="sd">    Remove zero offsets and counts. Use to sanitize _offsets and _bytecounts</span>
<a name="line-7895"></a><span class="sd">    tag values for strips or tiles.</span>
<a name="line-7896"></a>
<a name="line-7897"></a><span class="sd">    """</span>
<a name="line-7898"></a>    <span class="n">offsets</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">offsets</span><span class="p">)</span>
<a name="line-7899"></a>    <span class="n">counts</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">counts</span><span class="p">)</span>
<a name="line-7900"></a>    <span class="k">assert</span> <span class="nb">len</span><span class="p">(</span><span class="n">offsets</span><span class="p">)</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">counts</span><span class="p">)</span>
<a name="line-7901"></a>    <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-7902"></a>    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="p">(</span><span class="n">o</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">offsets</span><span class="p">,</span> <span class="n">counts</span><span class="p">)):</span>
<a name="line-7903"></a>        <span class="k">if</span> <span class="n">o</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">b</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-7904"></a>            <span class="k">if</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="n">j</span><span class="p">:</span>
<a name="line-7905"></a>                <span class="n">offsets</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">o</span>
<a name="line-7906"></a>                <span class="n">counts</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span>
<a name="line-7907"></a>            <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-7908"></a>        <span class="k">elif</span> <span class="n">b</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">o</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-7909"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid offset"</span><span class="p">)</span>
<a name="line-7910"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-7911"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"empty byte count"</span><span class="p">)</span>
<a name="line-7912"></a>    <span class="k">if</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-7913"></a>        <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-7914"></a>    <span class="k">return</span> <span class="n">offsets</span><span class="p">[:</span><span class="n">j</span><span class="p">],</span> <span class="n">counts</span><span class="p">[:</span><span class="n">j</span><span class="p">]</span>
<a name="line-7915"></a>
<a name="line-7916"></a>
<a name="line-7917"></a><span class="k">def</span> <span class="nf">buffered_read</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">lock</span><span class="p">,</span> <span class="n">offsets</span><span class="p">,</span> <span class="n">bytecounts</span><span class="p">,</span> <span class="n">buffersize</span><span class="o">=</span><span class="mi">2</span><span class="o">**</span><span class="mi">26</span><span class="p">):</span>
<a name="line-7918"></a>    <span class="sd">"""Return iterator over blocks read from file."""</span>
<a name="line-7919"></a>    <span class="n">length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">offsets</span><span class="p">)</span>
<a name="line-7920"></a>    <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-7921"></a>    <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">:</span>
<a name="line-7922"></a>        <span class="n">data</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-7923"></a>        <span class="k">with</span> <span class="n">lock</span><span class="p">:</span>
<a name="line-7924"></a>            <span class="n">size</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-7925"></a>            <span class="k">while</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="n">buffersize</span> <span class="ow">and</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">:</span>
<a name="line-7926"></a>                <span class="n">fh</span><span class="o">.</span><span class="n">seek</span><span class="p">(</span><span class="n">offsets</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
<a name="line-7927"></a>                <span class="n">bytecount</span> <span class="o">=</span> <span class="n">bytecounts</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
<a name="line-7928"></a>                <span class="n">data</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">fh</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">bytecount</span><span class="p">))</span>
<a name="line-7929"></a>                <span class="n">size</span> <span class="o">+=</span> <span class="n">bytecount</span>
<a name="line-7930"></a>                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-7931"></a>        <span class="k">for</span> <span class="n">block</span> <span class="ow">in</span> <span class="n">data</span><span class="p">:</span>
<a name="line-7932"></a>            <span class="k">yield</span> <span class="n">block</span>
<a name="line-7933"></a>
<a name="line-7934"></a>
<a name="line-7935"></a><span class="k">def</span> <span class="nf">create_output</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="s1">'w+'</span><span class="p">,</span> <span class="n">suffix</span><span class="o">=</span><span class="s1">'.memmap'</span><span class="p">):</span>
<a name="line-7936"></a>    <span class="sd">"""Return numpy array where image data of shape and dtype can copied.</span>
<a name="line-7937"></a>
<a name="line-7938"></a><span class="sd">    The 'out' parameter may have the following values or types:</span>
<a name="line-7939"></a>
<a name="line-7940"></a><span class="sd">    None</span>
<a name="line-7941"></a><span class="sd">        An empty array of shape and dtype is created and returned.</span>
<a name="line-7942"></a><span class="sd">    numpy.ndarray</span>
<a name="line-7943"></a><span class="sd">        An existing writable array of compatible dtype and shape. A view of</span>
<a name="line-7944"></a><span class="sd">        the same array is returned after verification.</span>
<a name="line-7945"></a><span class="sd">    'memmap' or 'memmap:tempdir'</span>
<a name="line-7946"></a><span class="sd">        A memory-map to an array stored in a temporary binary file on disk</span>
<a name="line-7947"></a><span class="sd">        is created and returned.</span>
<a name="line-7948"></a><span class="sd">    str or open file</span>
<a name="line-7949"></a><span class="sd">        The file name or file object used to create a memory-map to an array</span>
<a name="line-7950"></a><span class="sd">        stored in a binary file on disk. The created memory-mapped array is</span>
<a name="line-7951"></a><span class="sd">        returned.</span>
<a name="line-7952"></a>
<a name="line-7953"></a><span class="sd">    """</span>
<a name="line-7954"></a>    <span class="k">if</span> <span class="n">out</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-7955"></a>        <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">)</span>
<a name="line-7956"></a>    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="nb">str</span><span class="p">)</span> <span class="ow">and</span> <span class="n">out</span><span class="p">[:</span><span class="mi">6</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'memmap'</span><span class="p">:</span>
<a name="line-7957"></a>        <span class="n">tempdir</span> <span class="o">=</span> <span class="n">out</span><span class="p">[</span><span class="mi">7</span><span class="p">:]</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">out</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">7</span> <span class="k">else</span> <span class="bp">None</span>
<a name="line-7958"></a>        <span class="k">with</span> <span class="n">tempfile</span><span class="o">.</span><span class="n">NamedTemporaryFile</span><span class="p">(</span><span class="nb">dir</span><span class="o">=</span><span class="n">tempdir</span><span class="p">,</span> <span class="n">suffix</span><span class="o">=</span><span class="n">suffix</span><span class="p">)</span> <span class="k">as</span> <span class="n">fh</span><span class="p">:</span>
<a name="line-7959"></a>            <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">memmap</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">dtype</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="n">mode</span><span class="p">)</span>
<a name="line-7960"></a>    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="n">numpy</span><span class="o">.</span><span class="n">ndarray</span><span class="p">):</span>
<a name="line-7961"></a>        <span class="k">if</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">!=</span> <span class="n">product</span><span class="p">(</span><span class="n">out</span><span class="o">.</span><span class="n">shape</span><span class="p">):</span>
<a name="line-7962"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"incompatible output shape"</span><span class="p">)</span>
<a name="line-7963"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">numpy</span><span class="o">.</span><span class="n">can_cast</span><span class="p">(</span><span class="n">dtype</span><span class="p">,</span> <span class="n">out</span><span class="o">.</span><span class="n">dtype</span><span class="p">):</span>
<a name="line-7964"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"incompatible output dtype"</span><span class="p">)</span>
<a name="line-7965"></a>        <span class="k">return</span> <span class="n">out</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span>
<a name="line-7966"></a>    <span class="k">return</span> <span class="n">numpy</span><span class="o">.</span><span class="n">memmap</span><span class="p">(</span><span class="n">out</span><span class="p">,</span> <span class="n">shape</span><span class="o">=</span><span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">dtype</span><span class="p">,</span> <span class="n">mode</span><span class="o">=</span><span class="n">mode</span><span class="p">)</span>
<a name="line-7967"></a>
<a name="line-7968"></a>
<a name="line-7969"></a><span class="k">def</span> <span class="nf">matlabstr2py</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
<a name="line-7970"></a>    <span class="sd">"""Return Python object from Matlab string representation.</span>
<a name="line-7971"></a>
<a name="line-7972"></a><span class="sd">    Return str, bool, int, float, list (Matlab arrays or cells), or</span>
<a name="line-7973"></a><span class="sd">    dict (Matlab structures) types.</span>
<a name="line-7974"></a>
<a name="line-7975"></a><span class="sd">    Use to access ScanImage metadata.</span>
<a name="line-7976"></a>
<a name="line-7977"></a><span class="sd">    &gt;&gt;&gt; matlabstr2py('1')</span>
<a name="line-7978"></a><span class="sd">    1</span>
<a name="line-7979"></a><span class="sd">    &gt;&gt;&gt; matlabstr2py("['x y z' true false; 1 2.0 -3e4; NaN Inf @class]")</span>
<a name="line-7980"></a><span class="sd">    [['x y z', True, False], [1, 2.0, -30000.0], [nan, inf, '@class']]</span>
<a name="line-7981"></a><span class="sd">    &gt;&gt;&gt; d = matlabstr2py("SI.hChannels.channelType = {'stripe' 'stripe'}\\n"</span>
<a name="line-7982"></a><span class="sd">    ...                  "SI.hChannels.channelsActive = 2")</span>
<a name="line-7983"></a><span class="sd">    &gt;&gt;&gt; d['SI.hChannels.channelType']</span>
<a name="line-7984"></a><span class="sd">    ['stripe', 'stripe']</span>
<a name="line-7985"></a>
<a name="line-7986"></a><span class="sd">    """</span>
<a name="line-7987"></a>    <span class="c1"># TODO: handle invalid input</span>
<a name="line-7988"></a>    <span class="c1"># TODO: review unboxing of multidimensional arrays</span>
<a name="line-7989"></a>
<a name="line-7990"></a>    <span class="k">def</span> <span class="nf">lex</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
<a name="line-7991"></a>        <span class="c1"># return sequence of tokens from matlab string representation</span>
<a name="line-7992"></a>        <span class="n">tokens</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'['</span><span class="p">]</span>
<a name="line-7993"></a>        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<a name="line-7994"></a>            <span class="n">t</span><span class="p">,</span> <span class="n">i</span> <span class="o">=</span> <span class="n">next_token</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<a name="line-7995"></a>            <span class="k">if</span> <span class="n">t</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-7996"></a>                <span class="k">break</span>
<a name="line-7997"></a>            <span class="k">if</span> <span class="n">t</span> <span class="o">==</span> <span class="s1">';'</span><span class="p">:</span>
<a name="line-7998"></a>                <span class="n">tokens</span><span class="o">.</span><span class="n">extend</span><span class="p">((</span><span class="s1">']'</span><span class="p">,</span> <span class="s1">'['</span><span class="p">))</span>
<a name="line-7999"></a>            <span class="k">elif</span> <span class="n">t</span> <span class="o">==</span> <span class="s1">'['</span><span class="p">:</span>
<a name="line-8000"></a>                <span class="n">tokens</span><span class="o">.</span><span class="n">extend</span><span class="p">((</span><span class="s1">'['</span><span class="p">,</span> <span class="s1">'['</span><span class="p">))</span>
<a name="line-8001"></a>            <span class="k">elif</span> <span class="n">t</span> <span class="o">==</span> <span class="s1">']'</span><span class="p">:</span>
<a name="line-8002"></a>                <span class="n">tokens</span><span class="o">.</span><span class="n">extend</span><span class="p">((</span><span class="s1">']'</span><span class="p">,</span> <span class="s1">']'</span><span class="p">))</span>
<a name="line-8003"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-8004"></a>                <span class="n">tokens</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
<a name="line-8005"></a>            <span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">:]</span>
<a name="line-8006"></a>        <span class="n">tokens</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">']'</span><span class="p">)</span>
<a name="line-8007"></a>        <span class="k">return</span> <span class="n">tokens</span>
<a name="line-8008"></a>
<a name="line-8009"></a>    <span class="k">def</span> <span class="nf">next_token</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
<a name="line-8010"></a>        <span class="c1"># return next token in matlab string</span>
<a name="line-8011"></a>        <span class="n">length</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<a name="line-8012"></a>        <span class="k">if</span> <span class="n">length</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-8013"></a>            <span class="k">return</span> <span class="bp">None</span><span class="p">,</span> <span class="mi">0</span>
<a name="line-8014"></a>        <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-8015"></a>        <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span> <span class="ow">and</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s1">' '</span><span class="p">:</span>
<a name="line-8016"></a>            <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-8017"></a>        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">length</span><span class="p">:</span>
<a name="line-8018"></a>            <span class="k">return</span> <span class="bp">None</span><span class="p">,</span> <span class="n">i</span>
<a name="line-8019"></a>        <span class="k">if</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">in</span> <span class="s1">'{[;]}'</span><span class="p">:</span>
<a name="line-8020"></a>            <span class="k">return</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
<a name="line-8021"></a>        <span class="k">if</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"'"</span><span class="p">:</span>
<a name="line-8022"></a>            <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
<a name="line-8023"></a>            <span class="k">while</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">length</span> <span class="ow">and</span> <span class="n">s</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="s2">"'"</span><span class="p">:</span>
<a name="line-8024"></a>                <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-8025"></a>            <span class="k">return</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">:</span> <span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span>
<a name="line-8026"></a>        <span class="n">j</span> <span class="o">=</span> <span class="n">i</span>
<a name="line-8027"></a>        <span class="k">while</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">length</span> <span class="ow">and</span> <span class="ow">not</span> <span class="n">s</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="ow">in</span> <span class="s1">' {[;]}'</span><span class="p">:</span>
<a name="line-8028"></a>            <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="line-8029"></a>        <span class="k">return</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">j</span><span class="p">],</span> <span class="n">j</span>
<a name="line-8030"></a>
<a name="line-8031"></a>    <span class="k">def</span> <span class="nf">value</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">fail</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
<a name="line-8032"></a>        <span class="c1"># return Python value of token</span>
<a name="line-8033"></a>        <span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-8034"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">s</span><span class="p">:</span>
<a name="line-8035"></a>            <span class="k">return</span> <span class="n">s</span>
<a name="line-8036"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-8037"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-8038"></a>                <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<a name="line-8039"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8040"></a>                <span class="k">if</span> <span class="n">fail</span><span class="p">:</span>
<a name="line-8041"></a>                    <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">()</span>
<a name="line-8042"></a>                <span class="k">return</span> <span class="n">s</span>
<a name="line-8043"></a>        <span class="k">if</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s2">"'"</span><span class="p">:</span>
<a name="line-8044"></a>            <span class="k">if</span> <span class="n">fail</span> <span class="ow">and</span> <span class="n">s</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">!=</span> <span class="s2">"'"</span> <span class="ow">or</span> <span class="s2">"'"</span> <span class="ow">in</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
<a name="line-8045"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">()</span>
<a name="line-8046"></a>            <span class="k">return</span> <span class="n">s</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-8047"></a>        <span class="k">if</span> <span class="n">fail</span> <span class="ow">and</span> <span class="nb">any</span><span class="p">(</span><span class="n">i</span> <span class="ow">in</span> <span class="n">s</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="s2">" ';[]{}"</span><span class="p">):</span>
<a name="line-8048"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">()</span>
<a name="line-8049"></a>        <span class="k">if</span> <span class="n">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'@'</span><span class="p">:</span>
<a name="line-8050"></a>            <span class="k">return</span> <span class="n">s</span>
<a name="line-8051"></a>        <span class="k">if</span> <span class="n">s</span> <span class="o">==</span> <span class="s1">'true'</span><span class="p">:</span>
<a name="line-8052"></a>            <span class="k">return</span> <span class="bp">True</span>
<a name="line-8053"></a>        <span class="k">if</span> <span class="n">s</span> <span class="o">==</span> <span class="s1">'false'</span><span class="p">:</span>
<a name="line-8054"></a>            <span class="k">return</span> <span class="bp">False</span>
<a name="line-8055"></a>        <span class="k">if</span> <span class="s1">'.'</span> <span class="ow">in</span> <span class="n">s</span> <span class="ow">or</span> <span class="s1">'e'</span> <span class="ow">in</span> <span class="n">s</span><span class="p">:</span>
<a name="line-8056"></a>            <span class="k">return</span> <span class="nb">float</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<a name="line-8057"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8058"></a>            <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<a name="line-8059"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8060"></a>            <span class="k">pass</span>
<a name="line-8061"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8062"></a>            <span class="k">return</span> <span class="nb">float</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>  <span class="c1"># nan, inf</span>
<a name="line-8063"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8064"></a>            <span class="k">if</span> <span class="n">fail</span><span class="p">:</span>
<a name="line-8065"></a>                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">()</span>
<a name="line-8066"></a>        <span class="k">return</span> <span class="n">s</span>
<a name="line-8067"></a>
<a name="line-8068"></a>    <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
<a name="line-8069"></a>        <span class="c1"># return Python value from string representation of Matlab value</span>
<a name="line-8070"></a>        <span class="n">s</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-8071"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8072"></a>            <span class="k">return</span> <span class="n">value</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">fail</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-8073"></a>        <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-8074"></a>            <span class="k">pass</span>
<a name="line-8075"></a>        <span class="n">result</span> <span class="o">=</span> <span class="n">add2</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-8076"></a>        <span class="n">levels</span> <span class="o">=</span> <span class="p">[</span><span class="n">add2</span><span class="p">]</span>
<a name="line-8077"></a>        <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">lex</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
<a name="line-8078"></a>            <span class="k">if</span> <span class="n">t</span> <span class="ow">in</span> <span class="s1">'[{'</span><span class="p">:</span>
<a name="line-8079"></a>                <span class="n">add2</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-8080"></a>                <span class="n">levels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">add2</span><span class="p">)</span>
<a name="line-8081"></a>            <span class="k">elif</span> <span class="n">t</span> <span class="ow">in</span> <span class="s1">']}'</span><span class="p">:</span>
<a name="line-8082"></a>                <span class="n">x</span> <span class="o">=</span> <span class="n">levels</span><span class="o">.</span><span class="n">pop</span><span class="p">()</span>
<a name="line-8083"></a>                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nb">list</span><span class="p">):</span>
<a name="line-8084"></a>                    <span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-8085"></a>                <span class="n">add2</span> <span class="o">=</span> <span class="n">levels</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-8086"></a>                <span class="n">add2</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<a name="line-8087"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-8088"></a>                <span class="n">add2</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">value</span><span class="p">(</span><span class="n">t</span><span class="p">))</span>
<a name="line-8089"></a>        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">result</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nb">list</span><span class="p">):</span>
<a name="line-8090"></a>            <span class="n">result</span> <span class="o">=</span> <span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-8091"></a>        <span class="k">return</span> <span class="n">result</span>
<a name="line-8092"></a>
<a name="line-8093"></a>    <span class="k">if</span> <span class="s1">'</span><span class="se">\r</span><span class="s1">'</span> <span class="ow">in</span> <span class="n">s</span> <span class="ow">or</span> <span class="s1">'</span><span class="se">\n</span><span class="s1">'</span> <span class="ow">in</span> <span class="n">s</span><span class="p">:</span>
<a name="line-8094"></a>        <span class="c1"># structure</span>
<a name="line-8095"></a>        <span class="n">d</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-8096"></a>        <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">s</span><span class="o">.</span><span class="n">splitlines</span><span class="p">():</span>
<a name="line-8097"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">():</span>
<a name="line-8098"></a>                <span class="k">continue</span>
<a name="line-8099"></a>            <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'='</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<a name="line-8100"></a>            <span class="n">k</span> <span class="o">=</span> <span class="n">k</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-8101"></a>            <span class="k">if</span> <span class="nb">any</span><span class="p">(</span><span class="n">c</span> <span class="ow">in</span> <span class="n">k</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="s2">" ';[]{}"</span><span class="p">):</span>
<a name="line-8102"></a>                <span class="k">continue</span>
<a name="line-8103"></a>            <span class="n">d</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">parse</span><span class="p">(</span><span class="n">v</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
<a name="line-8104"></a>        <span class="k">return</span> <span class="n">d</span>
<a name="line-8105"></a>    <span class="k">return</span> <span class="n">parse</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<a name="line-8106"></a>
<a name="line-8107"></a>
<a name="line-8108"></a><span class="k">def</span> <span class="nf">stripnull</span><span class="p">(</span><span class="n">string</span><span class="p">,</span> <span class="n">null</span><span class="o">=</span><span class="sa">b</span><span class="s1">'</span><span class="se">\x00</span><span class="s1">'</span><span class="p">):</span>
<a name="line-8109"></a>    <span class="sd">"""Return string truncated at first null character.</span>
<a name="line-8110"></a>
<a name="line-8111"></a><span class="sd">    Clean NULL terminated C strings. For unicode strings use null='\\0'.</span>
<a name="line-8112"></a>
<a name="line-8113"></a><span class="sd">    &gt;&gt;&gt; stripnull(b'string\\x00')</span>
<a name="line-8114"></a><span class="sd">    b'string'</span>
<a name="line-8115"></a><span class="sd">    &gt;&gt;&gt; stripnull('string\\x00', null='\\0')</span>
<a name="line-8116"></a><span class="sd">    'string'</span>
<a name="line-8117"></a>
<a name="line-8118"></a><span class="sd">    """</span>
<a name="line-8119"></a>    <span class="n">i</span> <span class="o">=</span> <span class="n">string</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">null</span><span class="p">)</span>
<a name="line-8120"></a>    <span class="k">return</span> <span class="n">string</span> <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="k">else</span> <span class="n">string</span><span class="p">[:</span><span class="n">i</span><span class="p">]</span>
<a name="line-8121"></a>
<a name="line-8122"></a>
<a name="line-8123"></a><span class="k">def</span> <span class="nf">stripascii</span><span class="p">(</span><span class="n">string</span><span class="p">):</span>
<a name="line-8124"></a>    <span class="sd">"""Return string truncated at last byte that is 7-bit ASCII.</span>
<a name="line-8125"></a>
<a name="line-8126"></a><span class="sd">    Clean NULL separated and terminated TIFF strings.</span>
<a name="line-8127"></a>
<a name="line-8128"></a><span class="sd">    &gt;&gt;&gt; stripascii(b'string\\x00string\\n\\x01\\x00')</span>
<a name="line-8129"></a><span class="sd">    b'string\\x00string\\n'</span>
<a name="line-8130"></a><span class="sd">    &gt;&gt;&gt; stripascii(b'\\x00')</span>
<a name="line-8131"></a><span class="sd">    b''</span>
<a name="line-8132"></a>
<a name="line-8133"></a><span class="sd">    """</span>
<a name="line-8134"></a>    <span class="c1"># TODO: pythonize this</span>
<a name="line-8135"></a>    <span class="n">i</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
<a name="line-8136"></a>    <span class="k">while</span> <span class="n">i</span><span class="p">:</span>
<a name="line-8137"></a>        <span class="n">i</span> <span class="o">-=</span> <span class="mi">1</span>
<a name="line-8138"></a>        <span class="k">if</span> <span class="mi">8</span> <span class="o">&lt;</span> <span class="n">byte2int</span><span class="p">(</span><span class="n">string</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">&lt;</span> <span class="mi">127</span><span class="p">:</span>
<a name="line-8139"></a>            <span class="k">break</span>
<a name="line-8140"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-8141"></a>        <span class="n">i</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
<a name="line-8142"></a>    <span class="k">return</span> <span class="n">string</span><span class="p">[:</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span>
<a name="line-8143"></a>
<a name="line-8144"></a>
<a name="line-8145"></a><span class="k">def</span> <span class="nf">asbool</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">true</span><span class="o">=</span><span class="p">(</span><span class="sa">b</span><span class="s1">'true'</span><span class="p">,</span> <span class="sa">u</span><span class="s1">'true'</span><span class="p">),</span> <span class="n">false</span><span class="o">=</span><span class="p">(</span><span class="sa">b</span><span class="s1">'false'</span><span class="p">,</span> <span class="sa">u</span><span class="s1">'false'</span><span class="p">)):</span>
<a name="line-8146"></a>    <span class="sd">"""Return string as bool if possible, else raise TypeError.</span>
<a name="line-8147"></a>
<a name="line-8148"></a><span class="sd">    &gt;&gt;&gt; asbool(b' False ')</span>
<a name="line-8149"></a><span class="sd">    False</span>
<a name="line-8150"></a>
<a name="line-8151"></a><span class="sd">    """</span>
<a name="line-8152"></a>    <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>
<a name="line-8153"></a>    <span class="k">if</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">true</span><span class="p">:</span>  <span class="c1"># might raise UnicodeWarning/BytesWarning</span>
<a name="line-8154"></a>        <span class="k">return</span> <span class="bp">True</span>
<a name="line-8155"></a>    <span class="k">if</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">false</span><span class="p">:</span>
<a name="line-8156"></a>        <span class="k">return</span> <span class="bp">False</span>
<a name="line-8157"></a>    <span class="k">raise</span> <span class="ne">TypeError</span><span class="p">()</span>
<a name="line-8158"></a>
<a name="line-8159"></a>
<a name="line-8160"></a><span class="k">def</span> <span class="nf">astype</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">types</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-8161"></a>    <span class="sd">"""Return argument as one of types if possible.</span>
<a name="line-8162"></a>
<a name="line-8163"></a><span class="sd">    &gt;&gt;&gt; astype('42')</span>
<a name="line-8164"></a><span class="sd">    42</span>
<a name="line-8165"></a><span class="sd">    &gt;&gt;&gt; astype('3.14')</span>
<a name="line-8166"></a><span class="sd">    3.14</span>
<a name="line-8167"></a><span class="sd">    &gt;&gt;&gt; astype('True')</span>
<a name="line-8168"></a><span class="sd">    True</span>
<a name="line-8169"></a><span class="sd">    &gt;&gt;&gt; astype(b'Neee-Wom')</span>
<a name="line-8170"></a><span class="sd">    'Neee-Wom'</span>
<a name="line-8171"></a>
<a name="line-8172"></a><span class="sd">    """</span>
<a name="line-8173"></a>    <span class="k">if</span> <span class="n">types</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8174"></a>        <span class="n">types</span> <span class="o">=</span> <span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">,</span> <span class="n">asbool</span><span class="p">,</span> <span class="n">bytes2str</span>
<a name="line-8175"></a>    <span class="k">for</span> <span class="n">typ</span> <span class="ow">in</span> <span class="n">types</span><span class="p">:</span>
<a name="line-8176"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8177"></a>            <span class="k">return</span> <span class="n">typ</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-8178"></a>        <span class="k">except</span> <span class="p">(</span><span class="ne">ValueError</span><span class="p">,</span> <span class="ne">AttributeError</span><span class="p">,</span> <span class="ne">TypeError</span><span class="p">,</span> <span class="ne">UnicodeEncodeError</span><span class="p">):</span>
<a name="line-8179"></a>            <span class="k">pass</span>
<a name="line-8180"></a>    <span class="k">return</span> <span class="n">value</span>
<a name="line-8181"></a>
<a name="line-8182"></a>
<a name="line-8183"></a><span class="k">def</span> <span class="nf">format_size</span><span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="n">threshold</span><span class="o">=</span><span class="mi">1536</span><span class="p">):</span>
<a name="line-8184"></a>    <span class="sd">"""Return file size as string from byte size.</span>
<a name="line-8185"></a>
<a name="line-8186"></a><span class="sd">    &gt;&gt;&gt; format_size(1234)</span>
<a name="line-8187"></a><span class="sd">    '1234 B'</span>
<a name="line-8188"></a><span class="sd">    &gt;&gt;&gt; format_size(12345678901)</span>
<a name="line-8189"></a><span class="sd">    '11.50 GiB'</span>
<a name="line-8190"></a>
<a name="line-8191"></a><span class="sd">    """</span>
<a name="line-8192"></a>    <span class="k">if</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="n">threshold</span><span class="p">:</span>
<a name="line-8193"></a>        <span class="k">return</span> <span class="s2">"</span><span class="si">%i</span><span class="s2"> B"</span> <span class="o">%</span> <span class="n">size</span>
<a name="line-8194"></a>    <span class="k">for</span> <span class="n">unit</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'KiB'</span><span class="p">,</span> <span class="s1">'MiB'</span><span class="p">,</span> <span class="s1">'GiB'</span><span class="p">,</span> <span class="s1">'TiB'</span><span class="p">,</span> <span class="s1">'PiB'</span><span class="p">):</span>
<a name="line-8195"></a>        <span class="n">size</span> <span class="o">/=</span> <span class="mf">1024.0</span>
<a name="line-8196"></a>        <span class="k">if</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="n">threshold</span><span class="p">:</span>
<a name="line-8197"></a>            <span class="k">return</span> <span class="s2">"</span><span class="si">%.2f</span><span class="s2"> </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">size</span><span class="p">,</span> <span class="n">unit</span><span class="p">)</span>
<a name="line-8198"></a>
<a name="line-8199"></a>
<a name="line-8200"></a><span class="k">def</span> <span class="nf">identityfunc</span><span class="p">(</span><span class="n">arg</span><span class="p">):</span>
<a name="line-8201"></a>    <span class="sd">"""Single argument identity function.</span>
<a name="line-8202"></a>
<a name="line-8203"></a><span class="sd">    &gt;&gt;&gt; identityfunc('arg')</span>
<a name="line-8204"></a><span class="sd">    'arg'</span>
<a name="line-8205"></a>
<a name="line-8206"></a><span class="sd">    """</span>
<a name="line-8207"></a>    <span class="k">return</span> <span class="n">arg</span>
<a name="line-8208"></a>
<a name="line-8209"></a>
<a name="line-8210"></a><span class="k">def</span> <span class="nf">nullfunc</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-8211"></a>    <span class="sd">"""Null function.</span>
<a name="line-8212"></a>
<a name="line-8213"></a><span class="sd">    &gt;&gt;&gt; nullfunc('arg', kwarg='kwarg')</span>
<a name="line-8214"></a>
<a name="line-8215"></a><span class="sd">    """</span>
<a name="line-8216"></a>    <span class="k">return</span>
<a name="line-8217"></a>
<a name="line-8218"></a>
<a name="line-8219"></a><span class="k">def</span> <span class="nf">sequence</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
<a name="line-8220"></a>    <span class="sd">"""Return tuple containing value if value is not a sequence.</span>
<a name="line-8221"></a>
<a name="line-8222"></a><span class="sd">    &gt;&gt;&gt; sequence(1)</span>
<a name="line-8223"></a><span class="sd">    (1,)</span>
<a name="line-8224"></a><span class="sd">    &gt;&gt;&gt; sequence([1])</span>
<a name="line-8225"></a><span class="sd">    [1]</span>
<a name="line-8226"></a>
<a name="line-8227"></a><span class="sd">    """</span>
<a name="line-8228"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-8229"></a>        <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-8230"></a>        <span class="k">return</span> <span class="n">value</span>
<a name="line-8231"></a>    <span class="k">except</span> <span class="ne">TypeError</span><span class="p">:</span>
<a name="line-8232"></a>        <span class="k">return</span> <span class="p">(</span><span class="n">value</span><span class="p">,)</span>
<a name="line-8233"></a>
<a name="line-8234"></a>
<a name="line-8235"></a><span class="k">def</span> <span class="nf">product</span><span class="p">(</span><span class="n">iterable</span><span class="p">):</span>
<a name="line-8236"></a>    <span class="sd">"""Return product of sequence of numbers.</span>
<a name="line-8237"></a>
<a name="line-8238"></a><span class="sd">    Equivalent of functools.reduce(operator.mul, iterable, 1).</span>
<a name="line-8239"></a><span class="sd">    Multiplying numpy integers might overflow.</span>
<a name="line-8240"></a>
<a name="line-8241"></a><span class="sd">    &gt;&gt;&gt; product([2**8, 2**30])</span>
<a name="line-8242"></a><span class="sd">    274877906944</span>
<a name="line-8243"></a><span class="sd">    &gt;&gt;&gt; product([])</span>
<a name="line-8244"></a><span class="sd">    1</span>
<a name="line-8245"></a>
<a name="line-8246"></a><span class="sd">    """</span>
<a name="line-8247"></a>    <span class="n">prod</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-8248"></a>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">iterable</span><span class="p">:</span>
<a name="line-8249"></a>        <span class="n">prod</span> <span class="o">*=</span> <span class="n">i</span>
<a name="line-8250"></a>    <span class="k">return</span> <span class="n">prod</span>
<a name="line-8251"></a>
<a name="line-8252"></a>
<a name="line-8253"></a><span class="k">def</span> <span class="nf">natural_sorted</span><span class="p">(</span><span class="n">iterable</span><span class="p">):</span>
<a name="line-8254"></a>    <span class="sd">"""Return human sorted list of strings.</span>
<a name="line-8255"></a>
<a name="line-8256"></a><span class="sd">    E.g. for sorting file names.</span>
<a name="line-8257"></a>
<a name="line-8258"></a><span class="sd">    &gt;&gt;&gt; natural_sorted(['f1', 'f2', 'f10'])</span>
<a name="line-8259"></a><span class="sd">    ['f1', 'f2', 'f10']</span>
<a name="line-8260"></a>
<a name="line-8261"></a><span class="sd">    """</span>
<a name="line-8262"></a>    <span class="k">def</span> <span class="nf">sortkey</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
<a name="line-8263"></a>        <span class="k">return</span> <span class="p">[(</span><span class="nb">int</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="k">if</span> <span class="n">c</span><span class="o">.</span><span class="n">isdigit</span><span class="p">()</span> <span class="k">else</span> <span class="n">c</span><span class="p">)</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="n">numbers</span><span class="p">,</span> <span class="n">x</span><span class="p">)]</span>
<a name="line-8264"></a>
<a name="line-8265"></a>    <span class="n">numbers</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="sa">r</span><span class="s1">'(\d+)'</span><span class="p">)</span>
<a name="line-8266"></a>    <span class="k">return</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">iterable</span><span class="p">,</span> <span class="n">key</span><span class="o">=</span><span class="n">sortkey</span><span class="p">)</span>
<a name="line-8267"></a>
<a name="line-8268"></a>
<a name="line-8269"></a><span class="k">def</span> <span class="nf">excel_datetime</span><span class="p">(</span><span class="n">timestamp</span><span class="p">,</span> <span class="n">epoch</span><span class="o">=</span><span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="o">.</span><span class="n">fromordinal</span><span class="p">(</span><span class="mi">693594</span><span class="p">)):</span>
<a name="line-8270"></a>    <span class="sd">"""Return datetime object from timestamp in Excel serial format.</span>
<a name="line-8271"></a>
<a name="line-8272"></a><span class="sd">    Convert LSM time stamps.</span>
<a name="line-8273"></a>
<a name="line-8274"></a><span class="sd">    &gt;&gt;&gt; excel_datetime(40237.029999999795)</span>
<a name="line-8275"></a><span class="sd">    datetime.datetime(2010, 2, 28, 0, 43, 11, 999982)</span>
<a name="line-8276"></a>
<a name="line-8277"></a><span class="sd">    """</span>
<a name="line-8278"></a>    <span class="k">return</span> <span class="n">epoch</span> <span class="o">+</span> <span class="n">datetime</span><span class="o">.</span><span class="n">timedelta</span><span class="p">(</span><span class="n">timestamp</span><span class="p">)</span>
<a name="line-8279"></a>
<a name="line-8280"></a>
<a name="line-8281"></a><span class="k">def</span> <span class="nf">julian_datetime</span><span class="p">(</span><span class="n">julianday</span><span class="p">,</span> <span class="n">milisecond</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
<a name="line-8282"></a>    <span class="sd">"""Return datetime from days since 1/1/4713 BC and ms since midnight.</span>
<a name="line-8283"></a>
<a name="line-8284"></a><span class="sd">    Convert Julian dates according to MetaMorph.</span>
<a name="line-8285"></a>
<a name="line-8286"></a><span class="sd">    &gt;&gt;&gt; julian_datetime(2451576, 54362783)</span>
<a name="line-8287"></a><span class="sd">    datetime.datetime(2000, 2, 2, 15, 6, 2, 783)</span>
<a name="line-8288"></a>
<a name="line-8289"></a><span class="sd">    """</span>
<a name="line-8290"></a>    <span class="k">if</span> <span class="n">julianday</span> <span class="o">&lt;=</span> <span class="mi">1721423</span><span class="p">:</span>
<a name="line-8291"></a>        <span class="c1"># no datetime before year 1</span>
<a name="line-8292"></a>        <span class="k">return</span> <span class="bp">None</span>
<a name="line-8293"></a>
<a name="line-8294"></a>    <span class="n">a</span> <span class="o">=</span> <span class="n">julianday</span> <span class="o">+</span> <span class="mi">1</span>
<a name="line-8295"></a>    <span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">2299160</span><span class="p">:</span>
<a name="line-8296"></a>        <span class="n">alpha</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">trunc</span><span class="p">((</span><span class="n">a</span> <span class="o">-</span> <span class="mf">1867216.25</span><span class="p">)</span> <span class="o">/</span> <span class="mf">36524.25</span><span class="p">)</span>
<a name="line-8297"></a>        <span class="n">a</span> <span class="o">+=</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">alpha</span> <span class="o">-</span> <span class="n">alpha</span> <span class="o">//</span> <span class="mi">4</span>
<a name="line-8298"></a>    <span class="n">b</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1524</span> <span class="k">if</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">1721423</span> <span class="k">else</span> <span class="mi">1158</span><span class="p">)</span>
<a name="line-8299"></a>    <span class="n">c</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">trunc</span><span class="p">((</span><span class="n">b</span> <span class="o">-</span> <span class="mf">122.1</span><span class="p">)</span> <span class="o">/</span> <span class="mf">365.25</span><span class="p">)</span>
<a name="line-8300"></a>    <span class="n">d</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">trunc</span><span class="p">(</span><span class="mf">365.25</span> <span class="o">*</span> <span class="n">c</span><span class="p">)</span>
<a name="line-8301"></a>    <span class="n">e</span> <span class="o">=</span> <span class="n">math</span><span class="o">.</span><span class="n">trunc</span><span class="p">((</span><span class="n">b</span> <span class="o">-</span> <span class="n">d</span><span class="p">)</span> <span class="o">/</span> <span class="mf">30.6001</span><span class="p">)</span>
<a name="line-8302"></a>
<a name="line-8303"></a>    <span class="n">day</span> <span class="o">=</span> <span class="n">b</span> <span class="o">-</span> <span class="n">d</span> <span class="o">-</span> <span class="n">math</span><span class="o">.</span><span class="n">trunc</span><span class="p">(</span><span class="mf">30.6001</span> <span class="o">*</span> <span class="n">e</span><span class="p">)</span>
<a name="line-8304"></a>    <span class="n">month</span> <span class="o">=</span> <span class="n">e</span> <span class="o">-</span> <span class="p">(</span><span class="mi">1</span> <span class="k">if</span> <span class="n">e</span> <span class="o">&lt;</span> <span class="mf">13.5</span> <span class="k">else</span> <span class="mi">13</span><span class="p">)</span>
<a name="line-8305"></a>    <span class="n">year</span> <span class="o">=</span> <span class="n">c</span> <span class="o">-</span> <span class="p">(</span><span class="mi">4716</span> <span class="k">if</span> <span class="n">month</span> <span class="o">&gt;</span> <span class="mf">2.5</span> <span class="k">else</span> <span class="mi">4715</span><span class="p">)</span>
<a name="line-8306"></a>
<a name="line-8307"></a>    <span class="n">hour</span><span class="p">,</span> <span class="n">milisecond</span> <span class="o">=</span> <span class="nb">divmod</span><span class="p">(</span><span class="n">milisecond</span><span class="p">,</span> <span class="mi">1000</span> <span class="o">*</span> <span class="mi">60</span> <span class="o">*</span> <span class="mi">60</span><span class="p">)</span>
<a name="line-8308"></a>    <span class="n">minute</span><span class="p">,</span> <span class="n">milisecond</span> <span class="o">=</span> <span class="nb">divmod</span><span class="p">(</span><span class="n">milisecond</span><span class="p">,</span> <span class="mi">1000</span> <span class="o">*</span> <span class="mi">60</span><span class="p">)</span>
<a name="line-8309"></a>    <span class="n">second</span><span class="p">,</span> <span class="n">milisecond</span> <span class="o">=</span> <span class="nb">divmod</span><span class="p">(</span><span class="n">milisecond</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>
<a name="line-8310"></a>
<a name="line-8311"></a>    <span class="k">return</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="n">year</span><span class="p">,</span> <span class="n">month</span><span class="p">,</span> <span class="n">day</span><span class="p">,</span>
<a name="line-8312"></a>                             <span class="n">hour</span><span class="p">,</span> <span class="n">minute</span><span class="p">,</span> <span class="n">second</span><span class="p">,</span> <span class="n">milisecond</span><span class="p">)</span>
<a name="line-8313"></a>
<a name="line-8314"></a>
<a name="line-8315"></a><span class="k">def</span> <span class="nf">byteorder_isnative</span><span class="p">(</span><span class="n">byteorder</span><span class="p">):</span>
<a name="line-8316"></a>    <span class="sd">"""Return if byteorder matches the system's byteorder.</span>
<a name="line-8317"></a>
<a name="line-8318"></a><span class="sd">    &gt;&gt;&gt; byteorder_isnative('=')</span>
<a name="line-8319"></a><span class="sd">    True</span>
<a name="line-8320"></a>
<a name="line-8321"></a><span class="sd">    """</span>
<a name="line-8322"></a>    <span class="k">if</span> <span class="n">byteorder</span> <span class="o">==</span> <span class="s1">'='</span> <span class="ow">or</span> <span class="n">byteorder</span> <span class="o">==</span> <span class="n">sys</span><span class="o">.</span><span class="n">byteorder</span><span class="p">:</span>
<a name="line-8323"></a>        <span class="k">return</span> <span class="bp">True</span>
<a name="line-8324"></a>    <span class="n">keys</span> <span class="o">=</span> <span class="p">{</span><span class="s1">'big'</span><span class="p">:</span> <span class="s1">'&gt;'</span><span class="p">,</span> <span class="s1">'little'</span><span class="p">:</span> <span class="s1">'&lt;'</span><span class="p">}</span>
<a name="line-8325"></a>    <span class="k">return</span> <span class="n">keys</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">byteorder</span><span class="p">,</span> <span class="n">byteorder</span><span class="p">)</span> <span class="o">==</span> <span class="n">keys</span><span class="p">[</span><span class="n">sys</span><span class="o">.</span><span class="n">byteorder</span><span class="p">]</span>
<a name="line-8326"></a>
<a name="line-8327"></a>
<a name="line-8328"></a><span class="k">def</span> <span class="nf">recarray2dict</span><span class="p">(</span><span class="n">recarray</span><span class="p">):</span>
<a name="line-8329"></a>    <span class="sd">"""Return numpy.recarray as dict."""</span>
<a name="line-8330"></a>    <span class="c1"># TODO: subarrays</span>
<a name="line-8331"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-8332"></a>    <span class="k">for</span> <span class="n">descr</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">recarray</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">descr</span><span class="p">,</span> <span class="n">recarray</span><span class="p">):</span>
<a name="line-8333"></a>        <span class="n">name</span><span class="p">,</span> <span class="n">dtype</span> <span class="o">=</span> <span class="n">descr</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span>
<a name="line-8334"></a>        <span class="k">if</span> <span class="n">dtype</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s1">'S'</span><span class="p">:</span>
<a name="line-8335"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">stripnull</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
<a name="line-8336"></a>        <span class="k">elif</span> <span class="n">value</span><span class="o">.</span><span class="n">ndim</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-8337"></a>            <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">tolist</span><span class="p">()</span>
<a name="line-8338"></a>        <span class="n">result</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-8339"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-8340"></a>
<a name="line-8341"></a>
<a name="line-8342"></a><span class="k">def</span> <span class="nf">xml2dict</span><span class="p">(</span><span class="n">xml</span><span class="p">,</span> <span class="n">sanitize</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">prefix</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-8343"></a>    <span class="sd">"""Return XML as dict.</span>
<a name="line-8344"></a>
<a name="line-8345"></a><span class="sd">    &gt;&gt;&gt; xml2dict('&lt;?xml version="1.0" ?&gt;&lt;root attr="name"&gt;&lt;key&gt;1&lt;/key&gt;&lt;/root&gt;')</span>
<a name="line-8346"></a><span class="sd">    {'root': {'key': 1, 'attr': 'name'}}</span>
<a name="line-8347"></a>
<a name="line-8348"></a><span class="sd">    """</span>
<a name="line-8349"></a>    <span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">defaultdict</span>  <span class="c1"># delayed import</span>
<a name="line-8350"></a>    <span class="kn">from</span> <span class="nn">xml.etree</span> <span class="kn">import</span> <span class="n">cElementTree</span> <span class="k">as</span> <span class="n">etree</span>  <span class="c1"># delayed import</span>
<a name="line-8351"></a>
<a name="line-8352"></a>    <span class="n">at</span> <span class="o">=</span> <span class="n">tx</span> <span class="o">=</span> <span class="s1">''</span>
<a name="line-8353"></a>    <span class="k">if</span> <span class="n">prefix</span><span class="p">:</span>
<a name="line-8354"></a>        <span class="n">at</span><span class="p">,</span> <span class="n">tx</span> <span class="o">=</span> <span class="n">prefix</span>
<a name="line-8355"></a>
<a name="line-8356"></a>    <span class="k">def</span> <span class="nf">astype</span><span class="p">(</span><span class="n">value</span><span class="p">):</span>
<a name="line-8357"></a>        <span class="c1"># return value as int, float, bool, or str</span>
<a name="line-8358"></a>        <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">float</span><span class="p">,</span> <span class="n">asbool</span><span class="p">):</span>
<a name="line-8359"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-8360"></a>                <span class="k">return</span> <span class="n">t</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
<a name="line-8361"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8362"></a>                <span class="k">pass</span>
<a name="line-8363"></a>        <span class="k">return</span> <span class="n">value</span>
<a name="line-8364"></a>
<a name="line-8365"></a>    <span class="k">def</span> <span class="nf">etree2dict</span><span class="p">(</span><span class="n">t</span><span class="p">):</span>
<a name="line-8366"></a>        <span class="c1"># adapted from https://stackoverflow.com/a/10077069/453463</span>
<a name="line-8367"></a>        <span class="n">key</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">tag</span>
<a name="line-8368"></a>        <span class="k">if</span> <span class="n">sanitize</span><span class="p">:</span>
<a name="line-8369"></a>            <span class="n">key</span> <span class="o">=</span> <span class="n">key</span><span class="o">.</span><span class="n">rsplit</span><span class="p">(</span><span class="s1">'}'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-8370"></a>        <span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="n">key</span><span class="p">:</span> <span class="p">{}</span> <span class="k">if</span> <span class="n">t</span><span class="o">.</span><span class="n">attrib</span> <span class="k">else</span> <span class="bp">None</span><span class="p">}</span>
<a name="line-8371"></a>        <span class="n">children</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
<a name="line-8372"></a>        <span class="k">if</span> <span class="n">children</span><span class="p">:</span>
<a name="line-8373"></a>            <span class="n">dd</span> <span class="o">=</span> <span class="n">defaultdict</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
<a name="line-8374"></a>            <span class="k">for</span> <span class="n">dc</span> <span class="ow">in</span> <span class="nb">map</span><span class="p">(</span><span class="n">etree2dict</span><span class="p">,</span> <span class="n">children</span><span class="p">):</span>
<a name="line-8375"></a>                <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">dc</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
<a name="line-8376"></a>                    <span class="n">dd</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">astype</span><span class="p">(</span><span class="n">v</span><span class="p">))</span>
<a name="line-8377"></a>            <span class="n">d</span> <span class="o">=</span> <span class="p">{</span><span class="n">key</span><span class="p">:</span> <span class="p">{</span><span class="n">k</span><span class="p">:</span> <span class="n">astype</span><span class="p">(</span><span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">else</span> <span class="n">astype</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
<a name="line-8378"></a>                       <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">dd</span><span class="o">.</span><span class="n">items</span><span class="p">()}}</span>
<a name="line-8379"></a>        <span class="k">if</span> <span class="n">t</span><span class="o">.</span><span class="n">attrib</span><span class="p">:</span>
<a name="line-8380"></a>            <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">]</span><span class="o">.</span><span class="n">update</span><span class="p">((</span><span class="n">at</span> <span class="o">+</span> <span class="n">k</span><span class="p">,</span> <span class="n">astype</span><span class="p">(</span><span class="n">v</span><span class="p">))</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">t</span><span class="o">.</span><span class="n">attrib</span><span class="o">.</span><span class="n">items</span><span class="p">())</span>
<a name="line-8381"></a>        <span class="k">if</span> <span class="n">t</span><span class="o">.</span><span class="n">text</span><span class="p">:</span>
<a name="line-8382"></a>            <span class="n">text</span> <span class="o">=</span> <span class="n">t</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
<a name="line-8383"></a>            <span class="k">if</span> <span class="n">children</span> <span class="ow">or</span> <span class="n">t</span><span class="o">.</span><span class="n">attrib</span><span class="p">:</span>
<a name="line-8384"></a>                <span class="k">if</span> <span class="n">text</span><span class="p">:</span>
<a name="line-8385"></a>                    <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">][</span><span class="n">tx</span> <span class="o">+</span> <span class="s1">'value'</span><span class="p">]</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
<a name="line-8386"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-8387"></a>                <span class="n">d</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">astype</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
<a name="line-8388"></a>        <span class="k">return</span> <span class="n">d</span>
<a name="line-8389"></a>
<a name="line-8390"></a>    <span class="k">return</span> <span class="n">etree2dict</span><span class="p">(</span><span class="n">etree</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">xml</span><span class="p">))</span>
<a name="line-8391"></a>
<a name="line-8392"></a>
<a name="line-8393"></a><span class="k">def</span> <span class="nf">pformat_xml</span><span class="p">(</span><span class="n">arg</span><span class="p">):</span>
<a name="line-8394"></a>    <span class="sd">"""Return pretty formatted XML."""</span>
<a name="line-8395"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-8396"></a>        <span class="kn">import</span> <span class="nn">lxml.etree</span> <span class="kn">as</span> <span class="nn">etree</span>  <span class="c1"># delayed import</span>
<a name="line-8397"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">):</span>
<a name="line-8398"></a>            <span class="n">arg</span> <span class="o">=</span> <span class="n">arg</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">'utf-8'</span><span class="p">)</span>
<a name="line-8399"></a>        <span class="n">xml</span> <span class="o">=</span> <span class="n">etree</span><span class="o">.</span><span class="n">fromstring</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
<a name="line-8400"></a>        <span class="n">xml</span> <span class="o">=</span> <span class="n">etree</span><span class="o">.</span><span class="n">tostring</span><span class="p">(</span><span class="n">xml</span><span class="p">,</span> <span class="n">pretty_print</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">"unicode"</span><span class="p">)</span>
<a name="line-8401"></a>    <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8402"></a>        <span class="n">xml</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'&gt;&lt;'</span><span class="p">,</span> <span class="s1">'&gt;</span><span class="se">\n</span><span class="s1">&lt;'</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'&gt;&lt;'</span><span class="p">,</span> <span class="s1">'&gt;</span><span class="se">\n</span><span class="s1">&lt;'</span><span class="p">)</span>
<a name="line-8403"></a>    <span class="k">return</span> <span class="n">xml</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'  '</span><span class="p">,</span> <span class="s1">' '</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'</span><span class="se">\t</span><span class="s1">'</span><span class="p">,</span> <span class="s1">' '</span><span class="p">)</span>
<a name="line-8404"></a>
<a name="line-8405"></a>
<a name="line-8406"></a><span class="k">def</span> <span class="nf">pformat</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="n">maxlines</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">compact</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
<a name="line-8407"></a>    <span class="sd">"""Return pretty formatted representation of object as string."""</span>
<a name="line-8408"></a>    <span class="k">if</span> <span class="n">maxlines</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8409"></a>        <span class="n">maxlines</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PRINT_MAX_LINES</span>
<a name="line-8410"></a>    <span class="k">elif</span> <span class="ow">not</span> <span class="n">maxlines</span><span class="p">:</span>
<a name="line-8411"></a>        <span class="n">maxlines</span> <span class="o">=</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span>
<a name="line-8412"></a>    <span class="k">if</span> <span class="n">linewidth</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8413"></a>        <span class="n">linewidth</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PRINT_LINE_WIDTH</span>
<a name="line-8414"></a>    <span class="k">elif</span> <span class="ow">not</span> <span class="n">linewidth</span><span class="p">:</span>
<a name="line-8415"></a>        <span class="n">linewidth</span> <span class="o">=</span> <span class="mi">2</span><span class="o">**</span><span class="mi">32</span>
<a name="line-8416"></a>
<a name="line-8417"></a>    <span class="n">numpy</span><span class="o">.</span><span class="n">set_printoptions</span><span class="p">(</span><span class="n">threshold</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="n">linewidth</span><span class="p">)</span>
<a name="line-8418"></a>
<a name="line-8419"></a>    <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="nb">basestring</span><span class="p">):</span>
<a name="line-8420"></a>        <span class="k">if</span> <span class="n">arg</span><span class="p">[:</span><span class="mi">5</span><span class="p">]</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'&lt;?xml'</span><span class="p">,</span> <span class="sa">b</span><span class="s1">'&lt;?xml'</span><span class="p">):</span>
<a name="line-8421"></a>            <span class="n">arg</span> <span class="o">=</span> <span class="n">pformat_xml</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
<a name="line-8422"></a>        <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">):</span>
<a name="line-8423"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-8424"></a>                <span class="n">arg</span> <span class="o">=</span> <span class="n">bytes2str</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
<a name="line-8425"></a>                <span class="n">arg</span> <span class="o">=</span> <span class="n">arg</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'</span><span class="se">\r</span><span class="s1">'</span><span class="p">,</span> <span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="p">)</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">'</span><span class="se">\n\n</span><span class="s1">'</span><span class="p">,</span> <span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="p">)</span>
<a name="line-8426"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8427"></a>                <span class="kn">import</span> <span class="nn">binascii</span>  <span class="c1"># delayed import</span>
<a name="line-8428"></a>                <span class="kn">import</span> <span class="nn">pprint</span>  <span class="c1"># delayed import</span>
<a name="line-8429"></a>                <span class="n">arg</span> <span class="o">=</span> <span class="n">binascii</span><span class="o">.</span><span class="n">hexlify</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
<a name="line-8430"></a>                <span class="n">arg</span> <span class="o">=</span> <span class="n">pprint</span><span class="o">.</span><span class="n">pformat</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="n">linewidth</span><span class="p">)</span>
<a name="line-8431"></a>                <span class="n">maxlines</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">maxlines</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span>
<a name="line-8432"></a>        <span class="n">arg</span> <span class="o">=</span> <span class="n">arg</span><span class="o">.</span><span class="n">rstrip</span><span class="p">()</span>
<a name="line-8433"></a>    <span class="k">elif</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="n">numpy</span><span class="o">.</span><span class="n">record</span><span class="p">):</span>
<a name="line-8434"></a>        <span class="n">arg</span> <span class="o">=</span> <span class="n">arg</span><span class="o">.</span><span class="n">pprint</span><span class="p">()</span>
<a name="line-8435"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-8436"></a>        <span class="kn">from</span> <span class="nn">pprint</span> <span class="kn">import</span> <span class="n">pformat</span>  <span class="c1"># delayed import</span>
<a name="line-8437"></a>        <span class="n">compact</span> <span class="o">=</span> <span class="p">{}</span> <span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span> <span class="k">else</span> <span class="nb">dict</span><span class="p">(</span><span class="n">compact</span><span class="o">=</span><span class="n">compact</span><span class="p">)</span>
<a name="line-8438"></a>        <span class="n">arg</span> <span class="o">=</span> <span class="n">pformat</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="n">linewidth</span><span class="p">,</span> <span class="o">**</span><span class="n">compact</span><span class="p">)</span>
<a name="line-8439"></a>
<a name="line-8440"></a>    <span class="n">argl</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">arg</span><span class="o">.</span><span class="n">splitlines</span><span class="p">())</span>
<a name="line-8441"></a>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">argl</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">maxlines</span><span class="p">:</span>
<a name="line-8442"></a>        <span class="n">arg</span> <span class="o">=</span> <span class="s1">'</span><span class="se">\n</span><span class="s1">'</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">argl</span><span class="p">[:</span><span class="n">maxlines</span><span class="p">]</span> <span class="o">+</span>
<a name="line-8443"></a>                        <span class="p">[</span><span class="s1">'...truncated to </span><span class="si">%i</span><span class="s1"> lines.'</span> <span class="o">%</span> <span class="n">maxlines</span><span class="p">])</span>
<a name="line-8444"></a>    <span class="k">return</span> <span class="n">arg</span>
<a name="line-8445"></a>
<a name="line-8446"></a>
<a name="line-8447"></a><span class="k">def</span> <span class="nf">snipstr</span><span class="p">(</span><span class="n">string</span><span class="p">,</span> <span class="n">length</span><span class="o">=</span><span class="mi">16</span><span class="p">,</span> <span class="n">ellipse</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-8448"></a>    <span class="sd">"""Return string cut in middle to specified length.</span>
<a name="line-8449"></a>
<a name="line-8450"></a><span class="sd">    &gt;&gt;&gt; snipstr('abcdefghijklmnop', 8)</span>
<a name="line-8451"></a><span class="sd">    'abcd…nop'</span>
<a name="line-8452"></a>
<a name="line-8453"></a><span class="sd">    """</span>
<a name="line-8454"></a>    <span class="n">size</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
<a name="line-8455"></a>    <span class="k">if</span> <span class="n">size</span> <span class="o">&lt;=</span> <span class="n">length</span><span class="p">:</span>
<a name="line-8456"></a>        <span class="k">return</span> <span class="n">string</span>
<a name="line-8457"></a>    <span class="k">if</span> <span class="n">ellipse</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8458"></a>        <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">string</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">):</span>
<a name="line-8459"></a>            <span class="n">ellipse</span> <span class="o">=</span> <span class="sa">b</span><span class="s1">'...'</span>
<a name="line-8460"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-8461"></a>            <span class="n">ellipse</span> <span class="o">=</span> <span class="sa">u</span><span class="s1">'</span><span class="se">\u2026</span><span class="s1">'</span>
<a name="line-8462"></a>    <span class="n">esize</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">ellipse</span><span class="p">)</span>
<a name="line-8463"></a>    <span class="k">if</span> <span class="n">length</span> <span class="o">&lt;</span> <span class="n">esize</span> <span class="o">+</span> <span class="mi">1</span><span class="p">:</span>
<a name="line-8464"></a>        <span class="k">return</span> <span class="n">string</span><span class="p">[:</span><span class="n">length</span><span class="p">]</span>
<a name="line-8465"></a>    <span class="k">if</span> <span class="n">length</span> <span class="o">&lt;</span> <span class="n">esize</span> <span class="o">+</span> <span class="mi">4</span><span class="p">:</span>
<a name="line-8466"></a>        <span class="k">return</span> <span class="n">string</span><span class="p">[:</span><span class="n">length</span><span class="o">-</span><span class="n">esize</span><span class="p">]</span> <span class="o">+</span> <span class="n">ellipse</span>
<a name="line-8467"></a>    <span class="n">half</span> <span class="o">=</span> <span class="p">(</span><span class="n">length</span> <span class="o">-</span> <span class="n">esize</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span>
<a name="line-8468"></a>    <span class="k">return</span> <span class="n">string</span><span class="p">[:</span><span class="n">half</span> <span class="o">+</span> <span class="p">(</span><span class="n">length</span><span class="o">-</span><span class="n">esize</span><span class="p">)</span> <span class="o">%</span> <span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="n">ellipse</span> <span class="o">+</span> <span class="n">string</span><span class="p">[</span><span class="o">-</span><span class="n">half</span><span class="p">:]</span>
<a name="line-8469"></a>
<a name="line-8470"></a>
<a name="line-8471"></a><span class="k">def</span> <span class="nf">enumarg</span><span class="p">(</span><span class="n">enum</span><span class="p">,</span> <span class="n">arg</span><span class="p">):</span>
<a name="line-8472"></a>    <span class="sd">"""Return enum member from its name or value.</span>
<a name="line-8473"></a>
<a name="line-8474"></a><span class="sd">    &gt;&gt;&gt; enumarg(TIFF.PHOTOMETRIC, 2)</span>
<a name="line-8475"></a><span class="sd">    &lt;PHOTOMETRIC.RGB: 2&gt;</span>
<a name="line-8476"></a><span class="sd">    &gt;&gt;&gt; enumarg(TIFF.PHOTOMETRIC, 'RGB')</span>
<a name="line-8477"></a><span class="sd">    &lt;PHOTOMETRIC.RGB: 2&gt;</span>
<a name="line-8478"></a>
<a name="line-8479"></a><span class="sd">    """</span>
<a name="line-8480"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-8481"></a>        <span class="k">return</span> <span class="n">enum</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
<a name="line-8482"></a>    <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8483"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8484"></a>            <span class="k">return</span> <span class="n">enum</span><span class="p">[</span><span class="n">arg</span><span class="o">.</span><span class="n">upper</span><span class="p">()]</span>
<a name="line-8485"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8486"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"invalid argument </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">arg</span><span class="p">)</span>
<a name="line-8487"></a>
<a name="line-8488"></a>
<a name="line-8489"></a><span class="k">def</span> <span class="nf">parse_kwargs</span><span class="p">(</span><span class="n">kwargs</span><span class="p">,</span> <span class="o">*</span><span class="n">keys</span><span class="p">,</span> <span class="o">**</span><span class="n">keyvalues</span><span class="p">):</span>
<a name="line-8490"></a>    <span class="sd">"""Return dict with keys from keys|keyvals and values from kwargs|keyvals.</span>
<a name="line-8491"></a>
<a name="line-8492"></a><span class="sd">    Existing keys are deleted from kwargs.</span>
<a name="line-8493"></a>
<a name="line-8494"></a><span class="sd">    &gt;&gt;&gt; kwargs = {'one': 1, 'two': 2, 'four': 4}</span>
<a name="line-8495"></a><span class="sd">    &gt;&gt;&gt; kwargs2 = parse_kwargs(kwargs, 'two', 'three', four=None, five=5)</span>
<a name="line-8496"></a><span class="sd">    &gt;&gt;&gt; kwargs == {'one': 1}</span>
<a name="line-8497"></a><span class="sd">    True</span>
<a name="line-8498"></a><span class="sd">    &gt;&gt;&gt; kwargs2 == {'two': 2, 'four': 4, 'five': 5}</span>
<a name="line-8499"></a><span class="sd">    True</span>
<a name="line-8500"></a>
<a name="line-8501"></a><span class="sd">    """</span>
<a name="line-8502"></a>    <span class="n">result</span> <span class="o">=</span> <span class="p">{}</span>
<a name="line-8503"></a>    <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
<a name="line-8504"></a>        <span class="k">if</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="p">:</span>
<a name="line-8505"></a>            <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">kwargs</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-8506"></a>            <span class="k">del</span> <span class="n">kwargs</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-8507"></a>    <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">keyvalues</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
<a name="line-8508"></a>        <span class="k">if</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="p">:</span>
<a name="line-8509"></a>            <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">kwargs</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-8510"></a>            <span class="k">del</span> <span class="n">kwargs</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
<a name="line-8511"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-8512"></a>            <span class="n">result</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-8513"></a>    <span class="k">return</span> <span class="n">result</span>
<a name="line-8514"></a>
<a name="line-8515"></a>
<a name="line-8516"></a><span class="k">def</span> <span class="nf">update_kwargs</span><span class="p">(</span><span class="n">kwargs</span><span class="p">,</span> <span class="o">**</span><span class="n">keyvalues</span><span class="p">):</span>
<a name="line-8517"></a>    <span class="sd">"""Update dict with keys and values if keys do not already exist.</span>
<a name="line-8518"></a>
<a name="line-8519"></a><span class="sd">    &gt;&gt;&gt; kwargs = {'one': 1, }</span>
<a name="line-8520"></a><span class="sd">    &gt;&gt;&gt; update_kwargs(kwargs, one=None, two=2)</span>
<a name="line-8521"></a><span class="sd">    &gt;&gt;&gt; kwargs == {'one': 1, 'two': 2}</span>
<a name="line-8522"></a><span class="sd">    True</span>
<a name="line-8523"></a>
<a name="line-8524"></a><span class="sd">    """</span>
<a name="line-8525"></a>    <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">keyvalues</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
<a name="line-8526"></a>        <span class="k">if</span> <span class="n">key</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">kwargs</span><span class="p">:</span>
<a name="line-8527"></a>            <span class="n">kwargs</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
<a name="line-8528"></a>
<a name="line-8529"></a>
<a name="line-8530"></a><span class="k">def</span> <span class="nf">lsm2bin</span><span class="p">(</span><span class="n">lsmfile</span><span class="p">,</span> <span class="n">binfile</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">tile</span><span class="o">=</span><span class="p">(</span><span class="mi">256</span><span class="p">,</span> <span class="mi">256</span><span class="p">),</span> <span class="n">verbose</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
<a name="line-8531"></a>    <span class="sd">"""Convert [MP]TZCYX LSM file to series of BIN files.</span>
<a name="line-8532"></a>
<a name="line-8533"></a><span class="sd">    One BIN file containing 'ZCYX' data is created for each position, time,</span>
<a name="line-8534"></a><span class="sd">    and tile. The position, time, and tile indices are encoded at the end</span>
<a name="line-8535"></a><span class="sd">    of the filenames.</span>
<a name="line-8536"></a>
<a name="line-8537"></a><span class="sd">    """</span>
<a name="line-8538"></a>    <span class="n">verbose</span> <span class="o">=</span> <span class="n">print_</span> <span class="k">if</span> <span class="n">verbose</span> <span class="k">else</span> <span class="n">nullfunc</span>
<a name="line-8539"></a>
<a name="line-8540"></a>    <span class="k">if</span> <span class="n">binfile</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8541"></a>        <span class="n">binfile</span> <span class="o">=</span> <span class="n">lsmfile</span>
<a name="line-8542"></a>    <span class="k">elif</span> <span class="n">binfile</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="o">==</span> <span class="s1">'none'</span><span class="p">:</span>
<a name="line-8543"></a>        <span class="n">binfile</span> <span class="o">=</span> <span class="bp">None</span>
<a name="line-8544"></a>    <span class="k">if</span> <span class="n">binfile</span><span class="p">:</span>
<a name="line-8545"></a>        <span class="n">binfile</span> <span class="o">+=</span> <span class="s2">"_(z</span><span class="si">%i</span><span class="s2">c</span><span class="si">%i</span><span class="s2">y</span><span class="si">%i</span><span class="s2">x</span><span class="si">%i</span><span class="s2">)_m</span><span class="si">%%</span><span class="s2">ip</span><span class="si">%%</span><span class="s2">it</span><span class="si">%%</span><span class="s2">03iy</span><span class="si">%%</span><span class="s2">ix</span><span class="si">%%</span><span class="s2">i.bin"</span>
<a name="line-8546"></a>
<a name="line-8547"></a>    <span class="n">verbose</span><span class="p">(</span><span class="s2">"</span><span class="se">\n</span><span class="s2">Opening LSM file... "</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">,</span> <span class="n">flush</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-8548"></a>    <span class="n">start_time</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
<a name="line-8549"></a>
<a name="line-8550"></a>    <span class="k">with</span> <span class="n">TiffFile</span><span class="p">(</span><span class="n">lsmfile</span><span class="p">)</span> <span class="k">as</span> <span class="n">lsm</span><span class="p">:</span>
<a name="line-8551"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">lsm</span><span class="o">.</span><span class="n">is_lsm</span><span class="p">:</span>
<a name="line-8552"></a>            <span class="n">verbose</span><span class="p">(</span><span class="s2">"</span><span class="se">\n</span><span class="s2">"</span><span class="p">,</span> <span class="n">lsm</span><span class="p">,</span> <span class="n">flush</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-8553"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a LSM file"</span><span class="p">)</span>
<a name="line-8554"></a>        <span class="n">series</span> <span class="o">=</span> <span class="n">lsm</span><span class="o">.</span><span class="n">series</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>  <span class="c1"># first series contains the image data</span>
<a name="line-8555"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">shape</span>
<a name="line-8556"></a>        <span class="n">axes</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">axes</span>
<a name="line-8557"></a>        <span class="n">dtype</span> <span class="o">=</span> <span class="n">series</span><span class="o">.</span><span class="n">dtype</span>
<a name="line-8558"></a>        <span class="n">size</span> <span class="o">=</span> <span class="n">product</span><span class="p">(</span><span class="n">shape</span><span class="p">)</span> <span class="o">*</span> <span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span>
<a name="line-8559"></a>
<a name="line-8560"></a>        <span class="n">verbose</span><span class="p">(</span><span class="s2">"</span><span class="si">%.3f</span><span class="s2"> s"</span> <span class="o">%</span> <span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">start_time</span><span class="p">))</span>
<a name="line-8561"></a>        <span class="c1"># verbose(lsm, flush=True)</span>
<a name="line-8562"></a>        <span class="n">verbose</span><span class="p">(</span><span class="s2">"Image</span><span class="se">\n</span><span class="s2">  axes:  </span><span class="si">%s</span><span class="se">\n</span><span class="s2">  shape: </span><span class="si">%s</span><span class="se">\n</span><span class="s2">  dtype: </span><span class="si">%s</span><span class="se">\n</span><span class="s2">  size:  </span><span class="si">%s</span><span class="s2">"</span>
<a name="line-8563"></a>                <span class="o">%</span> <span class="p">(</span><span class="n">axes</span><span class="p">,</span> <span class="n">shape</span><span class="p">,</span> <span class="n">dtype</span><span class="p">,</span> <span class="n">format_size</span><span class="p">(</span><span class="n">size</span><span class="p">)),</span> <span class="n">flush</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-8564"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">series</span><span class="o">.</span><span class="n">axes</span><span class="o">.</span><span class="n">endswith</span><span class="p">(</span><span class="s1">'TZCYX'</span><span class="p">):</span>
<a name="line-8565"></a>            <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not a *TZCYX LSM file"</span><span class="p">)</span>
<a name="line-8566"></a>
<a name="line-8567"></a>        <span class="n">verbose</span><span class="p">(</span><span class="s2">"Copying image from LSM to BIN files"</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">,</span> <span class="n">flush</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-8568"></a>        <span class="n">start_time</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
<a name="line-8569"></a>        <span class="n">tiles</span> <span class="o">=</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">//</span> <span class="n">tile</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">//</span> <span class="n">tile</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<a name="line-8570"></a>        <span class="k">if</span> <span class="n">binfile</span><span class="p">:</span>
<a name="line-8571"></a>            <span class="n">binfile</span> <span class="o">=</span> <span class="n">binfile</span> <span class="o">%</span> <span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">],</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">],</span> <span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-8572"></a>        <span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,)</span> <span class="o">*</span> <span class="p">(</span><span class="mi">7</span><span class="o">-</span><span class="nb">len</span><span class="p">(</span><span class="n">shape</span><span class="p">))</span> <span class="o">+</span> <span class="n">shape</span>
<a name="line-8573"></a>        <span class="c1"># cache for ZCYX stacks and output files</span>
<a name="line-8574"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">empty</span><span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="mi">3</span><span class="p">:],</span> <span class="n">dtype</span><span class="o">=</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-8575"></a>        <span class="n">out</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">empty</span><span class="p">((</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">],</span> <span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">],</span> <span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span>
<a name="line-8576"></a>                          <span class="n">dtype</span><span class="o">=</span><span class="n">dtype</span><span class="p">)</span>
<a name="line-8577"></a>        <span class="c1"># iterate over Tiff pages containing data</span>
<a name="line-8578"></a>        <span class="n">pages</span> <span class="o">=</span> <span class="nb">iter</span><span class="p">(</span><span class="n">series</span><span class="o">.</span><span class="n">pages</span><span class="p">)</span>
<a name="line-8579"></a>        <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>  <span class="c1"># mosaic axis</span>
<a name="line-8580"></a>            <span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span>  <span class="c1"># position axis</span>
<a name="line-8581"></a>                <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="mi">2</span><span class="p">]):</span>  <span class="c1"># time axis</span>
<a name="line-8582"></a>                    <span class="k">for</span> <span class="n">z</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">shape</span><span class="p">[</span><span class="mi">3</span><span class="p">]):</span>  <span class="c1"># z slices</span>
<a name="line-8583"></a>                        <span class="n">data</span><span class="p">[</span><span class="n">z</span><span class="p">]</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">pages</span><span class="p">)</span><span class="o">.</span><span class="n">asarray</span><span class="p">()</span>
<a name="line-8584"></a>                    <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tiles</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>  <span class="c1"># tile y</span>
<a name="line-8585"></a>                        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">tiles</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span>  <span class="c1"># tile x</span>
<a name="line-8586"></a>                            <span class="n">out</span><span class="p">[:]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="o">...</span><span class="p">,</span>
<a name="line-8587"></a>                                          <span class="n">y</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">]:(</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
<a name="line-8588"></a>                                          <span class="n">x</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">]:(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="n">tile</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span>
<a name="line-8589"></a>                            <span class="k">if</span> <span class="n">binfile</span><span class="p">:</span>
<a name="line-8590"></a>                                <span class="n">out</span><span class="o">.</span><span class="n">tofile</span><span class="p">(</span><span class="n">binfile</span> <span class="o">%</span> <span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">t</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">))</span>
<a name="line-8591"></a>                            <span class="n">verbose</span><span class="p">(</span><span class="s1">'.'</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">,</span> <span class="n">flush</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<a name="line-8592"></a>        <span class="n">verbose</span><span class="p">(</span><span class="s2">" </span><span class="si">%.3f</span><span class="s2"> s"</span> <span class="o">%</span> <span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">start_time</span><span class="p">))</span>
<a name="line-8593"></a>
<a name="line-8594"></a>
<a name="line-8595"></a><span class="k">def</span> <span class="nf">imshow</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">vmin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-8596"></a>           <span class="n">bitspersample</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">photometric</span><span class="o">=</span><span class="s1">'RGB'</span><span class="p">,</span>
<a name="line-8597"></a>           <span class="n">interpolation</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">96</span><span class="p">,</span> <span class="n">figure</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">subplot</span><span class="o">=</span><span class="mi">111</span><span class="p">,</span> <span class="n">maxdim</span><span class="o">=</span><span class="mi">32768</span><span class="p">,</span>
<a name="line-8598"></a>           <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-8599"></a>    <span class="sd">"""Plot n-dimensional images using matplotlib.pyplot.</span>
<a name="line-8600"></a>
<a name="line-8601"></a><span class="sd">    Return figure, subplot and plot axis.</span>
<a name="line-8602"></a><span class="sd">    Requires pyplot already imported C{from matplotlib import pyplot}.</span>
<a name="line-8603"></a>
<a name="line-8604"></a><span class="sd">    Parameters</span>
<a name="line-8605"></a><span class="sd">    ----------</span>
<a name="line-8606"></a><span class="sd">    bitspersample : int or None</span>
<a name="line-8607"></a><span class="sd">        Number of bits per channel in integer RGB images.</span>
<a name="line-8608"></a><span class="sd">    photometric : {'MINISWHITE', 'MINISBLACK', 'RGB', or 'PALETTE'}</span>
<a name="line-8609"></a><span class="sd">        The color space of the image data.</span>
<a name="line-8610"></a><span class="sd">    title : str</span>
<a name="line-8611"></a><span class="sd">        Window and subplot title.</span>
<a name="line-8612"></a><span class="sd">    figure : matplotlib.figure.Figure (optional).</span>
<a name="line-8613"></a><span class="sd">        Matplotlib to use for plotting.</span>
<a name="line-8614"></a><span class="sd">    subplot : int</span>
<a name="line-8615"></a><span class="sd">        A matplotlib.pyplot.subplot axis.</span>
<a name="line-8616"></a><span class="sd">    maxdim : int</span>
<a name="line-8617"></a><span class="sd">        maximum image width and length.</span>
<a name="line-8618"></a><span class="sd">    kwargs : optional</span>
<a name="line-8619"></a><span class="sd">        Arguments for matplotlib.pyplot.imshow.</span>
<a name="line-8620"></a>
<a name="line-8621"></a><span class="sd">    """</span>
<a name="line-8622"></a>    <span class="n">isrgb</span> <span class="o">=</span> <span class="n">photometric</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'RGB'</span><span class="p">,)</span>  <span class="c1"># 'PALETTE'</span>
<a name="line-8623"></a>    <span class="k">if</span> <span class="n">isrgb</span> <span class="ow">and</span> <span class="ow">not</span> <span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span>
<a name="line-8624"></a>            <span class="n">data</span><span class="o">.</span><span class="n">ndim</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">))):</span>
<a name="line-8625"></a>        <span class="n">isrgb</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-8626"></a>        <span class="n">photometric</span> <span class="o">=</span> <span class="s1">'MINISWHITE'</span>
<a name="line-8627"></a>
<a name="line-8628"></a>    <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">squeeze</span><span class="p">()</span>
<a name="line-8629"></a>    <span class="k">if</span> <span class="n">photometric</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">'MINISWHITE'</span><span class="p">,</span> <span class="s1">'MINISBLACK'</span><span class="p">,</span> <span class="bp">None</span><span class="p">):</span>
<a name="line-8630"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">reshape_nd</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<a name="line-8631"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-8632"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">reshape_nd</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<a name="line-8633"></a>
<a name="line-8634"></a>    <span class="n">dims</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">ndim</span>
<a name="line-8635"></a>    <span class="k">if</span> <span class="n">dims</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-8636"></a>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s2">"not an image"</span><span class="p">)</span>
<a name="line-8637"></a>    <span class="k">elif</span> <span class="n">dims</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-8638"></a>        <span class="n">dims</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-8639"></a>        <span class="n">isrgb</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-8640"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-8641"></a>        <span class="k">if</span> <span class="n">isrgb</span> <span class="ow">and</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
<a name="line-8642"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">)</span>
<a name="line-8643"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-8644"></a>        <span class="k">elif</span> <span class="ow">not</span> <span class="n">isrgb</span> <span class="ow">and</span> <span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span> <span class="o">//</span> <span class="mi">8</span> <span class="ow">and</span>
<a name="line-8645"></a>                            <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">]</span> <span class="o">//</span> <span class="mi">8</span> <span class="ow">and</span>
<a name="line-8646"></a>                            <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">):</span>
<a name="line-8647"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-8648"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">swapaxes</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<a name="line-8649"></a>        <span class="n">isrgb</span> <span class="o">=</span> <span class="n">isrgb</span> <span class="ow">and</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
<a name="line-8650"></a>        <span class="n">dims</span> <span class="o">-=</span> <span class="mi">3</span> <span class="k">if</span> <span class="n">isrgb</span> <span class="k">else</span> <span class="mi">2</span>
<a name="line-8651"></a>
<a name="line-8652"></a>    <span class="k">if</span> <span class="n">isrgb</span><span class="p">:</span>
<a name="line-8653"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">:</span><span class="n">maxdim</span><span class="p">,</span> <span class="p">:</span><span class="n">maxdim</span><span class="p">,</span> <span class="p">:</span><span class="n">maxdim</span><span class="p">]</span>
<a name="line-8654"></a>    <span class="k">else</span><span class="p">:</span>
<a name="line-8655"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="o">...</span><span class="p">,</span> <span class="p">:</span><span class="n">maxdim</span><span class="p">,</span> <span class="p">:</span><span class="n">maxdim</span><span class="p">]</span>
<a name="line-8656"></a>
<a name="line-8657"></a>    <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="s1">'PALETTE'</span> <span class="ow">and</span> <span class="n">isrgb</span><span class="p">:</span>
<a name="line-8658"></a>        <span class="n">datamax</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">max</span><span class="p">()</span>
<a name="line-8659"></a>        <span class="k">if</span> <span class="n">datamax</span> <span class="o">&gt;</span> <span class="mi">255</span><span class="p">:</span>
<a name="line-8660"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">data</span> <span class="o">&gt;&gt;</span> <span class="mi">8</span>  <span class="c1"># possible precision loss</span>
<a name="line-8661"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">'B'</span><span class="p">)</span>
<a name="line-8662"></a>    <span class="k">elif</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">kind</span> <span class="ow">in</span> <span class="s1">'ui'</span><span class="p">:</span>
<a name="line-8663"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="p">(</span><span class="n">isrgb</span> <span class="ow">and</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">)</span> <span class="ow">or</span> <span class="n">bitspersample</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8664"></a>            <span class="k">try</span><span class="p">:</span>
<a name="line-8665"></a>                <span class="n">bitspersample</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">ceil</span><span class="p">(</span><span class="n">math</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">max</span><span class="p">(),</span> <span class="mi">2</span><span class="p">)))</span>
<a name="line-8666"></a>            <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8667"></a>                <span class="n">bitspersample</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">*</span> <span class="mi">8</span>
<a name="line-8668"></a>        <span class="k">elif</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">bitspersample</span><span class="p">,</span> <span class="n">inttypes</span><span class="p">):</span>
<a name="line-8669"></a>            <span class="c1"># bitspersample can be tuple, e.g. (5, 6, 5)</span>
<a name="line-8670"></a>            <span class="n">bitspersample</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">itemsize</span> <span class="o">*</span> <span class="mi">8</span>
<a name="line-8671"></a>        <span class="n">datamax</span> <span class="o">=</span> <span class="mi">2</span><span class="o">**</span><span class="n">bitspersample</span>
<a name="line-8672"></a>        <span class="k">if</span> <span class="n">isrgb</span><span class="p">:</span>
<a name="line-8673"></a>            <span class="k">if</span> <span class="n">bitspersample</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-8674"></a>                <span class="n">data</span> <span class="o">=</span> <span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="mi">8</span> <span class="o">-</span> <span class="n">bitspersample</span><span class="p">)</span>
<a name="line-8675"></a>            <span class="k">elif</span> <span class="n">bitspersample</span> <span class="o">&gt;</span> <span class="mi">8</span><span class="p">:</span>
<a name="line-8676"></a>                <span class="n">data</span> <span class="o">=</span> <span class="n">data</span> <span class="o">&gt;&gt;</span> <span class="p">(</span><span class="n">bitspersample</span> <span class="o">-</span> <span class="mi">8</span><span class="p">)</span>  <span class="c1"># precision loss</span>
<a name="line-8677"></a>            <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">'B'</span><span class="p">)</span>
<a name="line-8678"></a>    <span class="k">elif</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">kind</span> <span class="o">==</span> <span class="s1">'f'</span><span class="p">:</span>
<a name="line-8679"></a>        <span class="n">datamax</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">max</span><span class="p">()</span>
<a name="line-8680"></a>        <span class="k">if</span> <span class="n">isrgb</span> <span class="ow">and</span> <span class="n">datamax</span> <span class="o">&gt;</span> <span class="mf">1.0</span><span class="p">:</span>
<a name="line-8681"></a>            <span class="k">if</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">char</span> <span class="o">==</span> <span class="s1">'d'</span><span class="p">:</span>
<a name="line-8682"></a>                <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="s1">'f'</span><span class="p">)</span>
<a name="line-8683"></a>                <span class="n">data</span> <span class="o">/=</span> <span class="n">datamax</span>
<a name="line-8684"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-8685"></a>                <span class="n">data</span> <span class="o">=</span> <span class="n">data</span> <span class="o">/</span> <span class="n">datamax</span>
<a name="line-8686"></a>    <span class="k">elif</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">kind</span> <span class="o">==</span> <span class="s1">'b'</span><span class="p">:</span>
<a name="line-8687"></a>        <span class="n">datamax</span> <span class="o">=</span> <span class="mi">1</span>
<a name="line-8688"></a>    <span class="k">elif</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">kind</span> <span class="o">==</span> <span class="s1">'c'</span><span class="p">:</span>
<a name="line-8689"></a>        <span class="n">data</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">absolute</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<a name="line-8690"></a>        <span class="n">datamax</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">max</span><span class="p">()</span>
<a name="line-8691"></a>
<a name="line-8692"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">isrgb</span><span class="p">:</span>
<a name="line-8693"></a>        <span class="k">if</span> <span class="n">vmax</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8694"></a>            <span class="n">vmax</span> <span class="o">=</span> <span class="n">datamax</span>
<a name="line-8695"></a>        <span class="k">if</span> <span class="n">vmin</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8696"></a>            <span class="k">if</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">kind</span> <span class="o">==</span> <span class="s1">'i'</span><span class="p">:</span>
<a name="line-8697"></a>                <span class="n">dtmin</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">iinfo</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="p">)</span><span class="o">.</span><span class="n">min</span>
<a name="line-8698"></a>                <span class="n">vmin</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">min</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<a name="line-8699"></a>                <span class="k">if</span> <span class="n">vmin</span> <span class="o">==</span> <span class="n">dtmin</span><span class="p">:</span>
<a name="line-8700"></a>                    <span class="n">vmin</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">min</span><span class="p">(</span><span class="n">data</span> <span class="o">&gt;</span> <span class="n">dtmin</span><span class="p">)</span>
<a name="line-8701"></a>            <span class="k">if</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">kind</span> <span class="o">==</span> <span class="s1">'f'</span><span class="p">:</span>
<a name="line-8702"></a>                <span class="n">dtmin</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">finfo</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="p">)</span><span class="o">.</span><span class="n">min</span>
<a name="line-8703"></a>                <span class="n">vmin</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">min</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
<a name="line-8704"></a>                <span class="k">if</span> <span class="n">vmin</span> <span class="o">==</span> <span class="n">dtmin</span><span class="p">:</span>
<a name="line-8705"></a>                    <span class="n">vmin</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">min</span><span class="p">(</span><span class="n">data</span> <span class="o">&gt;</span> <span class="n">dtmin</span><span class="p">)</span>
<a name="line-8706"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-8707"></a>                <span class="n">vmin</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-8708"></a>
<a name="line-8709"></a>    <span class="n">pyplot</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">modules</span><span class="p">[</span><span class="s1">'matplotlib.pyplot'</span><span class="p">]</span>
<a name="line-8710"></a>
<a name="line-8711"></a>    <span class="k">if</span> <span class="n">figure</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8712"></a>        <span class="n">pyplot</span><span class="o">.</span><span class="n">rc</span><span class="p">(</span><span class="s1">'font'</span><span class="p">,</span> <span class="n">family</span><span class="o">=</span><span class="s1">'sans-serif'</span><span class="p">,</span> <span class="n">weight</span><span class="o">=</span><span class="s1">'normal'</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">)</span>
<a name="line-8713"></a>        <span class="n">figure</span> <span class="o">=</span> <span class="n">pyplot</span><span class="o">.</span><span class="n">figure</span><span class="p">(</span><span class="n">dpi</span><span class="o">=</span><span class="n">dpi</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mf">10.3</span><span class="p">,</span> <span class="mf">6.3</span><span class="p">),</span> <span class="n">frameon</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span>
<a name="line-8714"></a>                               <span class="n">facecolor</span><span class="o">=</span><span class="s1">'1.0'</span><span class="p">,</span> <span class="n">edgecolor</span><span class="o">=</span><span class="s1">'w'</span><span class="p">)</span>
<a name="line-8715"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8716"></a>            <span class="n">figure</span><span class="o">.</span><span class="n">canvas</span><span class="o">.</span><span class="n">manager</span><span class="o">.</span><span class="n">window</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="n">title</span><span class="p">)</span>
<a name="line-8717"></a>        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
<a name="line-8718"></a>            <span class="k">pass</span>
<a name="line-8719"></a>        <span class="n">l</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">title</span><span class="o">.</span><span class="n">splitlines</span><span class="p">())</span> <span class="k">if</span> <span class="n">title</span> <span class="k">else</span> <span class="mi">1</span>
<a name="line-8720"></a>        <span class="n">pyplot</span><span class="o">.</span><span class="n">subplots_adjust</span><span class="p">(</span><span class="n">bottom</span><span class="o">=</span><span class="mf">0.03</span><span class="o">*</span><span class="p">(</span><span class="n">dims</span><span class="o">+</span><span class="mi">2</span><span class="p">),</span> <span class="n">top</span><span class="o">=</span><span class="mf">0.98</span><span class="o">-</span><span class="n">l</span><span class="o">*</span><span class="mf">0.03</span><span class="p">,</span>
<a name="line-8721"></a>                               <span class="n">left</span><span class="o">=</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">right</span><span class="o">=</span><span class="mf">0.95</span><span class="p">,</span> <span class="n">hspace</span><span class="o">=</span><span class="mf">0.05</span><span class="p">,</span> <span class="n">wspace</span><span class="o">=</span><span class="mf">0.0</span><span class="p">)</span>
<a name="line-8722"></a>    <span class="n">subplot</span> <span class="o">=</span> <span class="n">pyplot</span><span class="o">.</span><span class="n">subplot</span><span class="p">(</span><span class="n">subplot</span><span class="p">)</span>
<a name="line-8723"></a>
<a name="line-8724"></a>    <span class="k">if</span> <span class="n">title</span><span class="p">:</span>
<a name="line-8725"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8726"></a>            <span class="n">title</span> <span class="o">=</span> <span class="nb">unicode</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="s1">'Windows-1252'</span><span class="p">)</span>
<a name="line-8727"></a>        <span class="k">except</span> <span class="ne">TypeError</span><span class="p">:</span>
<a name="line-8728"></a>            <span class="k">pass</span>
<a name="line-8729"></a>        <span class="n">pyplot</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">11</span><span class="p">)</span>
<a name="line-8730"></a>
<a name="line-8731"></a>    <span class="k">if</span> <span class="n">cmap</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8732"></a>        <span class="k">if</span> <span class="n">data</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">kind</span> <span class="ow">in</span> <span class="s1">'ubf'</span> <span class="ow">or</span> <span class="n">vmin</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-8733"></a>            <span class="n">cmap</span> <span class="o">=</span> <span class="s1">'viridis'</span>
<a name="line-8734"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-8735"></a>            <span class="n">cmap</span> <span class="o">=</span> <span class="s1">'coolwarm'</span>
<a name="line-8736"></a>        <span class="k">if</span> <span class="n">photometric</span> <span class="o">==</span> <span class="s1">'MINISWHITE'</span><span class="p">:</span>
<a name="line-8737"></a>            <span class="n">cmap</span> <span class="o">+=</span> <span class="s1">'_r'</span>
<a name="line-8738"></a>
<a name="line-8739"></a>    <span class="n">image</span> <span class="o">=</span> <span class="n">pyplot</span><span class="o">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">data</span><span class="p">[(</span><span class="mi">0</span><span class="p">,)</span> <span class="o">*</span> <span class="n">dims</span><span class="p">]</span><span class="o">.</span><span class="n">squeeze</span><span class="p">(),</span> <span class="n">vmin</span><span class="o">=</span><span class="n">vmin</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">,</span>
<a name="line-8740"></a>                          <span class="n">cmap</span><span class="o">=</span><span class="n">cmap</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="n">interpolation</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-8741"></a>
<a name="line-8742"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">isrgb</span><span class="p">:</span>
<a name="line-8743"></a>        <span class="n">pyplot</span><span class="o">.</span><span class="n">colorbar</span><span class="p">()</span>  <span class="c1"># panchor=(0.55, 0.5), fraction=0.05</span>
<a name="line-8744"></a>
<a name="line-8745"></a>    <span class="k">def</span> <span class="nf">format_coord</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
<a name="line-8746"></a>        <span class="c1"># callback function to format coordinate display in toolbar</span>
<a name="line-8747"></a>        <span class="n">x</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">)</span>
<a name="line-8748"></a>        <span class="n">y</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">y</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">)</span>
<a name="line-8749"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8750"></a>            <span class="k">if</span> <span class="n">dims</span><span class="p">:</span>
<a name="line-8751"></a>                <span class="k">return</span> <span class="s2">"</span><span class="si">%s</span><span class="s2"> @ </span><span class="si">%s</span><span class="s2"> [</span><span class="si">%4i</span><span class="s2">, </span><span class="si">%4i</span><span class="s2">]"</span> <span class="o">%</span> <span class="p">(</span>
<a name="line-8752"></a>                    <span class="n">curaxdat</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">],</span> <span class="n">current</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
<a name="line-8753"></a>            <span class="k">return</span> <span class="s2">"</span><span class="si">%s</span><span class="s2"> @ [</span><span class="si">%4i</span><span class="s2">, </span><span class="si">%4i</span><span class="s2">]"</span> <span class="o">%</span> <span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">],</span> <span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
<a name="line-8754"></a>        <span class="k">except</span> <span class="ne">IndexError</span><span class="p">:</span>
<a name="line-8755"></a>            <span class="k">return</span> <span class="s1">''</span>
<a name="line-8756"></a>
<a name="line-8757"></a>    <span class="k">def</span> <span class="nf">none</span><span class="p">(</span><span class="n">event</span><span class="p">):</span>
<a name="line-8758"></a>        <span class="k">return</span> <span class="s1">''</span>
<a name="line-8759"></a>
<a name="line-8760"></a>    <span class="n">subplot</span><span class="o">.</span><span class="n">format_coord</span> <span class="o">=</span> <span class="n">format_coord</span>
<a name="line-8761"></a>    <span class="n">image</span><span class="o">.</span><span class="n">get_cursor_data</span> <span class="o">=</span> <span class="n">none</span>
<a name="line-8762"></a>    <span class="n">image</span><span class="o">.</span><span class="n">format_cursor_data</span> <span class="o">=</span> <span class="n">none</span>
<a name="line-8763"></a>
<a name="line-8764"></a>    <span class="k">if</span> <span class="n">dims</span><span class="p">:</span>
<a name="line-8765"></a>        <span class="n">current</span> <span class="o">=</span> <span class="nb">list</span><span class="p">((</span><span class="mi">0</span><span class="p">,)</span> <span class="o">*</span> <span class="n">dims</span><span class="p">)</span>
<a name="line-8766"></a>        <span class="n">curaxdat</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="nb">tuple</span><span class="p">(</span><span class="n">current</span><span class="p">)]</span><span class="o">.</span><span class="n">squeeze</span><span class="p">()]</span>
<a name="line-8767"></a>        <span class="n">sliders</span> <span class="o">=</span> <span class="p">[</span><span class="n">pyplot</span><span class="o">.</span><span class="n">Slider</span><span class="p">(</span>
<a name="line-8768"></a>            <span class="n">pyplot</span><span class="o">.</span><span class="n">axes</span><span class="p">([</span><span class="mf">0.125</span><span class="p">,</span> <span class="mf">0.03</span><span class="o">*</span><span class="p">(</span><span class="n">axis</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span> <span class="mf">0.725</span><span class="p">,</span> <span class="mf">0.025</span><span class="p">]),</span>
<a name="line-8769"></a>            <span class="s1">'Dimension </span><span class="si">%i</span><span class="s1">'</span> <span class="o">%</span> <span class="n">axis</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="n">axis</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="s1">'0.5'</span><span class="p">,</span>
<a name="line-8770"></a>            <span class="n">valfmt</span><span class="o">=</span><span class="s1">'</span><span class="si">%%</span><span class="s1">.0f [</span><span class="si">%i</span><span class="s1">]'</span> <span class="o">%</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="n">axis</span><span class="p">])</span> <span class="k">for</span> <span class="n">axis</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">dims</span><span class="p">)]</span>
<a name="line-8771"></a>        <span class="k">for</span> <span class="n">slider</span> <span class="ow">in</span> <span class="n">sliders</span><span class="p">:</span>
<a name="line-8772"></a>            <span class="n">slider</span><span class="o">.</span><span class="n">drawon</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-8773"></a>
<a name="line-8774"></a>        <span class="k">def</span> <span class="nf">set_image</span><span class="p">(</span><span class="n">current</span><span class="p">,</span> <span class="n">sliders</span><span class="o">=</span><span class="n">sliders</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">):</span>
<a name="line-8775"></a>            <span class="c1"># change image and redraw canvas</span>
<a name="line-8776"></a>            <span class="n">curaxdat</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="nb">tuple</span><span class="p">(</span><span class="n">current</span><span class="p">)]</span><span class="o">.</span><span class="n">squeeze</span><span class="p">()</span>
<a name="line-8777"></a>            <span class="n">image</span><span class="o">.</span><span class="n">set_data</span><span class="p">(</span><span class="n">curaxdat</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<a name="line-8778"></a>            <span class="k">for</span> <span class="n">ctrl</span><span class="p">,</span> <span class="n">index</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">sliders</span><span class="p">,</span> <span class="n">current</span><span class="p">):</span>
<a name="line-8779"></a>                <span class="n">ctrl</span><span class="o">.</span><span class="n">eventson</span> <span class="o">=</span> <span class="bp">False</span>
<a name="line-8780"></a>                <span class="n">ctrl</span><span class="o">.</span><span class="n">set_val</span><span class="p">(</span><span class="n">index</span><span class="p">)</span>
<a name="line-8781"></a>                <span class="n">ctrl</span><span class="o">.</span><span class="n">eventson</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-8782"></a>            <span class="n">figure</span><span class="o">.</span><span class="n">canvas</span><span class="o">.</span><span class="n">draw</span><span class="p">()</span>
<a name="line-8783"></a>
<a name="line-8784"></a>        <span class="k">def</span> <span class="nf">on_changed</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">axis</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">current</span><span class="o">=</span><span class="n">current</span><span class="p">):</span>
<a name="line-8785"></a>            <span class="c1"># callback function for slider change event</span>
<a name="line-8786"></a>            <span class="n">index</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">index</span><span class="p">))</span>
<a name="line-8787"></a>            <span class="n">curaxdat</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">axis</span>
<a name="line-8788"></a>            <span class="k">if</span> <span class="n">index</span> <span class="o">==</span> <span class="n">current</span><span class="p">[</span><span class="n">axis</span><span class="p">]:</span>
<a name="line-8789"></a>                <span class="k">return</span>
<a name="line-8790"></a>            <span class="k">if</span> <span class="n">index</span> <span class="o">&gt;=</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="n">axis</span><span class="p">]:</span>
<a name="line-8791"></a>                <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
<a name="line-8792"></a>            <span class="k">elif</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-8793"></a>                <span class="n">index</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="n">axis</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span>
<a name="line-8794"></a>            <span class="n">current</span><span class="p">[</span><span class="n">axis</span><span class="p">]</span> <span class="o">=</span> <span class="n">index</span>
<a name="line-8795"></a>            <span class="n">set_image</span><span class="p">(</span><span class="n">current</span><span class="p">)</span>
<a name="line-8796"></a>
<a name="line-8797"></a>        <span class="k">def</span> <span class="nf">on_keypressed</span><span class="p">(</span><span class="n">event</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">current</span><span class="o">=</span><span class="n">current</span><span class="p">):</span>
<a name="line-8798"></a>            <span class="c1"># callback function for key press event</span>
<a name="line-8799"></a>            <span class="n">key</span> <span class="o">=</span> <span class="n">event</span><span class="o">.</span><span class="n">key</span>
<a name="line-8800"></a>            <span class="n">axis</span> <span class="o">=</span> <span class="n">curaxdat</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-8801"></a>            <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">key</span><span class="p">)</span> <span class="ow">in</span> <span class="s1">'0123456789'</span><span class="p">:</span>
<a name="line-8802"></a>                <span class="n">on_changed</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">axis</span><span class="p">)</span>
<a name="line-8803"></a>            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s1">'right'</span><span class="p">:</span>
<a name="line-8804"></a>                <span class="n">on_changed</span><span class="p">(</span><span class="n">current</span><span class="p">[</span><span class="n">axis</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">axis</span><span class="p">)</span>
<a name="line-8805"></a>            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s1">'left'</span><span class="p">:</span>
<a name="line-8806"></a>                <span class="n">on_changed</span><span class="p">(</span><span class="n">current</span><span class="p">[</span><span class="n">axis</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">axis</span><span class="p">)</span>
<a name="line-8807"></a>            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s1">'up'</span><span class="p">:</span>
<a name="line-8808"></a>                <span class="n">curaxdat</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">axis</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span> <span class="k">else</span> <span class="n">axis</span> <span class="o">+</span> <span class="mi">1</span>
<a name="line-8809"></a>            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s1">'down'</span><span class="p">:</span>
<a name="line-8810"></a>                <span class="n">curaxdat</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span> <span class="k">if</span> <span class="n">axis</span> <span class="o">==</span> <span class="mi">0</span> <span class="k">else</span> <span class="n">axis</span> <span class="o">-</span> <span class="mi">1</span>
<a name="line-8811"></a>            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s1">'end'</span><span class="p">:</span>
<a name="line-8812"></a>                <span class="n">on_changed</span><span class="p">(</span><span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="n">axis</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">axis</span><span class="p">)</span>
<a name="line-8813"></a>            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="s1">'home'</span><span class="p">:</span>
<a name="line-8814"></a>                <span class="n">on_changed</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">axis</span><span class="p">)</span>
<a name="line-8815"></a>
<a name="line-8816"></a>        <span class="n">figure</span><span class="o">.</span><span class="n">canvas</span><span class="o">.</span><span class="n">mpl_connect</span><span class="p">(</span><span class="s1">'key_press_event'</span><span class="p">,</span> <span class="n">on_keypressed</span><span class="p">)</span>
<a name="line-8817"></a>        <span class="k">for</span> <span class="n">axis</span><span class="p">,</span> <span class="n">ctrl</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">sliders</span><span class="p">):</span>
<a name="line-8818"></a>            <span class="n">ctrl</span><span class="o">.</span><span class="n">on_changed</span><span class="p">(</span><span class="k">lambda</span> <span class="n">k</span><span class="p">,</span> <span class="n">a</span><span class="o">=</span><span class="n">axis</span><span class="p">:</span> <span class="n">on_changed</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">a</span><span class="p">))</span>
<a name="line-8819"></a>
<a name="line-8820"></a>    <span class="k">return</span> <span class="n">figure</span><span class="p">,</span> <span class="n">subplot</span><span class="p">,</span> <span class="n">image</span>
<a name="line-8821"></a>
<a name="line-8822"></a>
<a name="line-8823"></a><span class="k">def</span> <span class="nf">_app_show</span><span class="p">():</span>
<a name="line-8824"></a>    <span class="sd">"""Block the GUI. For use as skimage plugin."""</span>
<a name="line-8825"></a>    <span class="n">pyplot</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">modules</span><span class="p">[</span><span class="s1">'matplotlib.pyplot'</span><span class="p">]</span>
<a name="line-8826"></a>    <span class="n">pyplot</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
<a name="line-8827"></a>
<a name="line-8828"></a>
<a name="line-8829"></a><span class="k">def</span> <span class="nf">askopenfilename</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-8830"></a>    <span class="sd">"""Return file name(s) from Tkinter's file open dialog."""</span>
<a name="line-8831"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-8832"></a>        <span class="kn">from</span> <span class="nn">Tkinter</span> <span class="kn">import</span> <span class="n">Tk</span>
<a name="line-8833"></a>        <span class="kn">import</span> <span class="nn">tkFileDialog</span> <span class="kn">as</span> <span class="nn">filedialog</span>
<a name="line-8834"></a>    <span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
<a name="line-8835"></a>        <span class="kn">from</span> <span class="nn">tkinter</span> <span class="kn">import</span> <span class="n">Tk</span><span class="p">,</span> <span class="n">filedialog</span>
<a name="line-8836"></a>    <span class="n">root</span> <span class="o">=</span> <span class="n">Tk</span><span class="p">()</span>
<a name="line-8837"></a>    <span class="n">root</span><span class="o">.</span><span class="n">withdraw</span><span class="p">()</span>
<a name="line-8838"></a>    <span class="n">root</span><span class="o">.</span><span class="n">update</span><span class="p">()</span>
<a name="line-8839"></a>    <span class="n">filenames</span> <span class="o">=</span> <span class="n">filedialog</span><span class="o">.</span><span class="n">askopenfilename</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-8840"></a>    <span class="n">root</span><span class="o">.</span><span class="n">destroy</span><span class="p">()</span>
<a name="line-8841"></a>    <span class="k">return</span> <span class="n">filenames</span>
<a name="line-8842"></a>
<a name="line-8843"></a>
<a name="line-8844"></a><span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">argv</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-8845"></a>    <span class="sd">"""Command line usage main function."""</span>
<a name="line-8846"></a>    <span class="k">if</span> <span class="nb">float</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">version</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span> <span class="o">&lt;</span> <span class="mf">2.7</span><span class="p">:</span>
<a name="line-8847"></a>        <span class="k">print</span><span class="p">(</span><span class="s2">"This script requires Python version 2.7 or better."</span><span class="p">)</span>
<a name="line-8848"></a>        <span class="k">print</span><span class="p">(</span><span class="s2">"This is Python version </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">sys</span><span class="o">.</span><span class="n">version</span><span class="p">)</span>
<a name="line-8849"></a>        <span class="k">return</span> <span class="mi">0</span>
<a name="line-8850"></a>    <span class="k">if</span> <span class="n">argv</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8851"></a>        <span class="n">argv</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span>
<a name="line-8852"></a>
<a name="line-8853"></a>    <span class="kn">import</span> <span class="nn">optparse</span>  <span class="c1"># TODO: use argparse</span>
<a name="line-8854"></a>
<a name="line-8855"></a>    <span class="n">parser</span> <span class="o">=</span> <span class="n">optparse</span><span class="o">.</span><span class="n">OptionParser</span><span class="p">(</span>
<a name="line-8856"></a>        <span class="n">usage</span><span class="o">=</span><span class="s2">"usage: %prog [options] path"</span><span class="p">,</span>
<a name="line-8857"></a>        <span class="n">description</span><span class="o">=</span><span class="s2">"Display image data in TIFF files."</span><span class="p">,</span>
<a name="line-8858"></a>        <span class="n">version</span><span class="o">=</span><span class="s2">"</span><span class="si">%%</span><span class="s2">prog </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">__version__</span><span class="p">)</span>
<a name="line-8859"></a>    <span class="n">opt</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span>
<a name="line-8860"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'-p'</span><span class="p">,</span> <span class="s1">'--page'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'page'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s1">'int'</span><span class="p">,</span> <span class="n">default</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span>
<a name="line-8861"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"display single page"</span><span class="p">)</span>
<a name="line-8862"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'-s'</span><span class="p">,</span> <span class="s1">'--series'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'series'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s1">'int'</span><span class="p">,</span> <span class="n">default</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span>
<a name="line-8863"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"display series of pages of same shape"</span><span class="p">)</span>
<a name="line-8864"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'--nomultifile'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'nomultifile'</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">'store_true'</span><span class="p">,</span>
<a name="line-8865"></a>        <span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s2">"do not read OME series from multiple files"</span><span class="p">)</span>
<a name="line-8866"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'--noplots'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'noplots'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s1">'int'</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span>
<a name="line-8867"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"maximum number of plots"</span><span class="p">)</span>
<a name="line-8868"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'--interpol'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'interpol'</span><span class="p">,</span> <span class="n">metavar</span><span class="o">=</span><span class="s1">'INTERPOL'</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="s1">'bilinear'</span><span class="p">,</span>
<a name="line-8869"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"image interpolation method"</span><span class="p">)</span>
<a name="line-8870"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'--dpi'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'dpi'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s1">'int'</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">96</span><span class="p">,</span>
<a name="line-8871"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"plot resolution"</span><span class="p">)</span>
<a name="line-8872"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'--vmin'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'vmin'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s1">'int'</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-8873"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"minimum value for colormapping"</span><span class="p">)</span>
<a name="line-8874"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'--vmax'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'vmax'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s1">'int'</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span>
<a name="line-8875"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"maximum value for colormapping"</span><span class="p">)</span>
<a name="line-8876"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'--debug'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'debug'</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">'store_true'</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
<a name="line-8877"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"raise exception on failures"</span><span class="p">)</span>
<a name="line-8878"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'--doctest'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'doctest'</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">'store_true'</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
<a name="line-8879"></a>        <span class="n">help</span><span class="o">=</span><span class="s2">"runs the docstring examples"</span><span class="p">)</span>
<a name="line-8880"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'-v'</span><span class="p">,</span> <span class="s1">'--detail'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'detail'</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="s1">'int'</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<a name="line-8881"></a>    <span class="n">opt</span><span class="p">(</span><span class="s1">'-q'</span><span class="p">,</span> <span class="s1">'--quiet'</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="s1">'quiet'</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">'store_true'</span><span class="p">)</span>
<a name="line-8882"></a>
<a name="line-8883"></a>    <span class="n">settings</span><span class="p">,</span> <span class="n">path</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
<a name="line-8884"></a>    <span class="n">path</span> <span class="o">=</span> <span class="s1">' '</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
<a name="line-8885"></a>
<a name="line-8886"></a>    <span class="k">if</span> <span class="n">settings</span><span class="o">.</span><span class="n">doctest</span><span class="p">:</span>
<a name="line-8887"></a>        <span class="kn">import</span> <span class="nn">doctest</span>
<a name="line-8888"></a>        <span class="n">doctest</span><span class="o">.</span><span class="n">testmod</span><span class="p">(</span><span class="n">optionflags</span><span class="o">=</span><span class="n">doctest</span><span class="o">.</span><span class="n">ELLIPSIS</span><span class="p">)</span>
<a name="line-8889"></a>        <span class="k">return</span> <span class="mi">0</span>
<a name="line-8890"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">path</span><span class="p">:</span>
<a name="line-8891"></a>        <span class="n">path</span> <span class="o">=</span> <span class="n">askopenfilename</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Select a TIFF file"</span><span class="p">,</span>
<a name="line-8892"></a>                               <span class="n">filetypes</span><span class="o">=</span><span class="n">TIFF</span><span class="o">.</span><span class="n">FILEOPEN_FILTER</span><span class="p">)</span>
<a name="line-8893"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">path</span><span class="p">:</span>
<a name="line-8894"></a>            <span class="n">parser</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s2">"No file specified"</span><span class="p">)</span>
<a name="line-8895"></a>
<a name="line-8896"></a>    <span class="k">if</span> <span class="nb">any</span><span class="p">(</span><span class="n">i</span> <span class="ow">in</span> <span class="n">path</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="s1">'?*'</span><span class="p">):</span>
<a name="line-8897"></a>        <span class="n">path</span> <span class="o">=</span> <span class="n">glob</span><span class="o">.</span><span class="n">glob</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
<a name="line-8898"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">path</span><span class="p">:</span>
<a name="line-8899"></a>            <span class="k">print</span><span class="p">(</span><span class="s1">'no files match the pattern'</span><span class="p">)</span>
<a name="line-8900"></a>            <span class="k">return</span> <span class="mi">0</span>
<a name="line-8901"></a>        <span class="c1"># TODO: handle image sequences</span>
<a name="line-8902"></a>        <span class="n">path</span> <span class="o">=</span> <span class="n">path</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<a name="line-8903"></a>
<a name="line-8904"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">settings</span><span class="o">.</span><span class="n">quiet</span><span class="p">:</span>
<a name="line-8905"></a>        <span class="k">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\n</span><span class="s2">Reading file structure..."</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<a name="line-8906"></a>    <span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
<a name="line-8907"></a>    <span class="k">try</span><span class="p">:</span>
<a name="line-8908"></a>        <span class="n">tif</span> <span class="o">=</span> <span class="n">TiffFile</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">multifile</span><span class="o">=</span><span class="ow">not</span> <span class="n">settings</span><span class="o">.</span><span class="n">nomultifile</span><span class="p">)</span>
<a name="line-8909"></a>    <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-8910"></a>        <span class="k">if</span> <span class="n">settings</span><span class="o">.</span><span class="n">debug</span><span class="p">:</span>
<a name="line-8911"></a>            <span class="k">raise</span>
<a name="line-8912"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-8913"></a>            <span class="k">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\n</span><span class="s2">"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>
<a name="line-8914"></a>            <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<a name="line-8915"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">settings</span><span class="o">.</span><span class="n">quiet</span><span class="p">:</span>
<a name="line-8916"></a>        <span class="k">print</span><span class="p">(</span><span class="s2">"</span><span class="si">%.3f</span><span class="s2"> ms"</span> <span class="o">%</span> <span class="p">((</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span><span class="o">-</span><span class="n">start</span><span class="p">)</span> <span class="o">*</span> <span class="mf">1e3</span><span class="p">))</span>
<a name="line-8917"></a>
<a name="line-8918"></a>    <span class="k">if</span> <span class="n">tif</span><span class="o">.</span><span class="n">is_ome</span><span class="p">:</span>
<a name="line-8919"></a>        <span class="n">settings</span><span class="o">.</span><span class="n">norgb</span> <span class="o">=</span> <span class="bp">True</span>
<a name="line-8920"></a>
<a name="line-8921"></a>    <span class="n">images</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-8922"></a>    <span class="k">if</span> <span class="n">settings</span><span class="o">.</span><span class="n">noplots</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-8923"></a>        <span class="k">if</span> <span class="ow">not</span> <span class="n">settings</span><span class="o">.</span><span class="n">quiet</span><span class="p">:</span>
<a name="line-8924"></a>            <span class="k">print</span><span class="p">(</span><span class="s2">"Reading image data... "</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s1">' '</span><span class="p">)</span>
<a name="line-8925"></a>
<a name="line-8926"></a>        <span class="k">def</span> <span class="nf">notnone</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
<a name="line-8927"></a>            <span class="k">return</span> <span class="nb">next</span><span class="p">(</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">x</span> <span class="k">if</span> <span class="n">i</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">)</span>
<a name="line-8928"></a>
<a name="line-8929"></a>        <span class="n">start</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
<a name="line-8930"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8931"></a>            <span class="k">if</span> <span class="n">settings</span><span class="o">.</span><span class="n">page</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-8932"></a>                <span class="n">images</span> <span class="o">=</span> <span class="p">[(</span><span class="n">tif</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="n">settings</span><span class="o">.</span><span class="n">page</span><span class="p">),</span>
<a name="line-8933"></a>                           <span class="n">tif</span><span class="p">[</span><span class="n">settings</span><span class="o">.</span><span class="n">page</span><span class="p">],</span> <span class="bp">None</span><span class="p">)]</span>
<a name="line-8934"></a>            <span class="k">elif</span> <span class="n">settings</span><span class="o">.</span><span class="n">series</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-8935"></a>                <span class="n">images</span> <span class="o">=</span> <span class="p">[(</span><span class="n">tif</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">series</span><span class="o">=</span><span class="n">settings</span><span class="o">.</span><span class="n">series</span><span class="p">),</span>
<a name="line-8936"></a>                           <span class="n">notnone</span><span class="p">(</span><span class="n">tif</span><span class="o">.</span><span class="n">series</span><span class="p">[</span><span class="n">settings</span><span class="o">.</span><span class="n">series</span><span class="p">]</span><span class="o">.</span><span class="n">pages</span><span class="p">),</span>
<a name="line-8937"></a>                           <span class="n">tif</span><span class="o">.</span><span class="n">series</span><span class="p">[</span><span class="n">settings</span><span class="o">.</span><span class="n">series</span><span class="p">])]</span>
<a name="line-8938"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-8939"></a>                <span class="n">images</span> <span class="o">=</span> <span class="p">[]</span>
<a name="line-8940"></a>                <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">s</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">tif</span><span class="o">.</span><span class="n">series</span><span class="p">[:</span><span class="n">settings</span><span class="o">.</span><span class="n">noplots</span><span class="p">]):</span>
<a name="line-8941"></a>                    <span class="k">try</span><span class="p">:</span>
<a name="line-8942"></a>                        <span class="n">images</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">tif</span><span class="o">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">series</span><span class="o">=</span><span class="n">i</span><span class="p">),</span>
<a name="line-8943"></a>                                       <span class="n">notnone</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">pages</span><span class="p">),</span>
<a name="line-8944"></a>                                       <span class="n">tif</span><span class="o">.</span><span class="n">series</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span>
<a name="line-8945"></a>                    <span class="k">except</span> <span class="ne">ValueError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-8946"></a>                        <span class="n">images</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="bp">None</span><span class="p">,</span> <span class="n">notnone</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">pages</span><span class="p">),</span> <span class="bp">None</span><span class="p">))</span>
<a name="line-8947"></a>                        <span class="k">if</span> <span class="n">settings</span><span class="o">.</span><span class="n">debug</span><span class="p">:</span>
<a name="line-8948"></a>                            <span class="k">raise</span>
<a name="line-8949"></a>                        <span class="k">else</span><span class="p">:</span>
<a name="line-8950"></a>                            <span class="k">print</span><span class="p">(</span><span class="s2">"</span><span class="se">\n</span><span class="s2">Series </span><span class="si">%i</span><span class="s2"> failed: </span><span class="si">%s</span><span class="s2">... "</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">e</span><span class="p">),</span>
<a name="line-8951"></a>                                  <span class="n">end</span><span class="o">=</span><span class="s1">''</span><span class="p">)</span>
<a name="line-8952"></a>            <span class="k">if</span> <span class="ow">not</span> <span class="n">settings</span><span class="o">.</span><span class="n">quiet</span><span class="p">:</span>
<a name="line-8953"></a>                <span class="k">print</span><span class="p">(</span><span class="s2">"</span><span class="si">%.3f</span><span class="s2"> ms"</span> <span class="o">%</span> <span class="p">((</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span><span class="o">-</span><span class="n">start</span><span class="p">)</span> <span class="o">*</span> <span class="mf">1e3</span><span class="p">))</span>
<a name="line-8954"></a>        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-8955"></a>            <span class="k">if</span> <span class="n">settings</span><span class="o">.</span><span class="n">debug</span><span class="p">:</span>
<a name="line-8956"></a>                <span class="k">raise</span>
<a name="line-8957"></a>            <span class="k">else</span><span class="p">:</span>
<a name="line-8958"></a>                <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
<a name="line-8959"></a>
<a name="line-8960"></a>    <span class="k">if</span> <span class="ow">not</span> <span class="n">settings</span><span class="o">.</span><span class="n">quiet</span><span class="p">:</span>
<a name="line-8961"></a>        <span class="k">print</span><span class="p">()</span>
<a name="line-8962"></a>        <span class="k">print</span><span class="p">(</span><span class="n">TiffFile</span><span class="o">.</span><span class="fm">__str__</span><span class="p">(</span><span class="n">tif</span><span class="p">,</span> <span class="n">detail</span><span class="o">=</span><span class="nb">int</span><span class="p">(</span><span class="n">settings</span><span class="o">.</span><span class="n">detail</span><span class="p">)))</span>
<a name="line-8963"></a>        <span class="k">print</span><span class="p">()</span>
<a name="line-8964"></a>    <span class="n">tif</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<a name="line-8965"></a>
<a name="line-8966"></a>    <span class="k">if</span> <span class="n">images</span> <span class="ow">and</span> <span class="n">settings</span><span class="o">.</span><span class="n">noplots</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
<a name="line-8967"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-8968"></a>            <span class="kn">import</span> <span class="nn">matplotlib</span>
<a name="line-8969"></a>            <span class="n">matplotlib</span><span class="o">.</span><span class="n">use</span><span class="p">(</span><span class="s1">'TkAgg'</span><span class="p">)</span>
<a name="line-8970"></a>            <span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">pyplot</span>
<a name="line-8971"></a>        <span class="k">except</span> <span class="ne">ImportError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
<a name="line-8972"></a>            <span class="n">warnings</span><span class="o">.</span><span class="n">warn</span><span class="p">(</span><span class="s2">"failed to import matplotlib.</span><span class="se">\n</span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="n">e</span><span class="p">)</span>
<a name="line-8973"></a>        <span class="k">else</span><span class="p">:</span>
<a name="line-8974"></a>            <span class="k">for</span> <span class="n">img</span><span class="p">,</span> <span class="n">page</span><span class="p">,</span> <span class="n">series</span> <span class="ow">in</span> <span class="n">images</span><span class="p">:</span>
<a name="line-8975"></a>                <span class="k">if</span> <span class="n">img</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-8976"></a>                    <span class="k">continue</span>
<a name="line-8977"></a>                <span class="n">vmin</span><span class="p">,</span> <span class="n">vmax</span> <span class="o">=</span> <span class="n">settings</span><span class="o">.</span><span class="n">vmin</span><span class="p">,</span> <span class="n">settings</span><span class="o">.</span><span class="n">vmax</span>
<a name="line-8978"></a>                <span class="k">if</span> <span class="s1">'GDAL_NODATA'</span> <span class="ow">in</span> <span class="n">page</span><span class="o">.</span><span class="n">tags</span><span class="p">:</span>
<a name="line-8979"></a>                    <span class="k">try</span><span class="p">:</span>
<a name="line-8980"></a>                        <span class="n">vmin</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">min</span><span class="p">(</span>
<a name="line-8981"></a>                            <span class="n">img</span><span class="p">[</span><span class="n">img</span> <span class="o">&gt;</span> <span class="nb">float</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">tags</span><span class="p">[</span><span class="s1">'GDAL_NODATA'</span><span class="p">]</span><span class="o">.</span><span class="n">value</span><span class="p">)])</span>
<a name="line-8982"></a>                    <span class="k">except</span> <span class="ne">ValueError</span><span class="p">:</span>
<a name="line-8983"></a>                        <span class="k">pass</span>
<a name="line-8984"></a>                <span class="k">if</span> <span class="n">tif</span><span class="o">.</span><span class="n">is_stk</span><span class="p">:</span>
<a name="line-8985"></a>                    <span class="k">try</span><span class="p">:</span>
<a name="line-8986"></a>                        <span class="n">vmin</span> <span class="o">=</span> <span class="n">tif</span><span class="o">.</span><span class="n">stk_metadata</span><span class="p">[</span><span class="s1">'MinScale'</span><span class="p">]</span>
<a name="line-8987"></a>                        <span class="n">vmax</span> <span class="o">=</span> <span class="n">tif</span><span class="o">.</span><span class="n">stk_metadata</span><span class="p">[</span><span class="s1">'MaxScale'</span><span class="p">]</span>
<a name="line-8988"></a>                    <span class="k">except</span> <span class="ne">KeyError</span><span class="p">:</span>
<a name="line-8989"></a>                        <span class="k">pass</span>
<a name="line-8990"></a>                    <span class="k">else</span><span class="p">:</span>
<a name="line-8991"></a>                        <span class="k">if</span> <span class="n">vmax</span> <span class="o">&lt;=</span> <span class="n">vmin</span><span class="p">:</span>
<a name="line-8992"></a>                            <span class="n">vmin</span><span class="p">,</span> <span class="n">vmax</span> <span class="o">=</span> <span class="n">settings</span><span class="o">.</span><span class="n">vmin</span><span class="p">,</span> <span class="n">settings</span><span class="o">.</span><span class="n">vmax</span>
<a name="line-8993"></a>                <span class="k">if</span> <span class="n">series</span><span class="p">:</span>
<a name="line-8994"></a>                    <span class="n">title</span> <span class="o">=</span> <span class="s2">"</span><span class="si">%s</span><span class="se">\n</span><span class="si">%s</span><span class="se">\n</span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">tif</span><span class="p">),</span> <span class="nb">str</span><span class="p">(</span><span class="n">page</span><span class="p">),</span> <span class="nb">str</span><span class="p">(</span><span class="n">series</span><span class="p">))</span>
<a name="line-8995"></a>                <span class="k">else</span><span class="p">:</span>
<a name="line-8996"></a>                    <span class="n">title</span> <span class="o">=</span> <span class="s2">"</span><span class="si">%s</span><span class="se">\n</span><span class="s2"> </span><span class="si">%s</span><span class="s2">"</span> <span class="o">%</span> <span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">tif</span><span class="p">),</span> <span class="nb">str</span><span class="p">(</span><span class="n">page</span><span class="p">))</span>
<a name="line-8997"></a>                <span class="n">photometric</span> <span class="o">=</span> <span class="s1">'MINISBLACK'</span>
<a name="line-8998"></a>                <span class="k">if</span> <span class="n">page</span><span class="o">.</span><span class="n">photometric</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">3</span><span class="p">,):</span>
<a name="line-8999"></a>                    <span class="n">photometric</span> <span class="o">=</span> <span class="n">TIFF</span><span class="o">.</span><span class="n">PHOTOMETRIC</span><span class="p">(</span><span class="n">page</span><span class="o">.</span><span class="n">photometric</span><span class="p">)</span><span class="o">.</span><span class="n">name</span>
<a name="line-9000"></a>                <span class="n">imshow</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="n">title</span><span class="p">,</span> <span class="n">vmin</span><span class="o">=</span><span class="n">vmin</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="n">vmax</span><span class="p">,</span>
<a name="line-9001"></a>                       <span class="n">bitspersample</span><span class="o">=</span><span class="n">page</span><span class="o">.</span><span class="n">bitspersample</span><span class="p">,</span>
<a name="line-9002"></a>                       <span class="n">photometric</span><span class="o">=</span><span class="n">photometric</span><span class="p">,</span>
<a name="line-9003"></a>                       <span class="n">interpolation</span><span class="o">=</span><span class="n">settings</span><span class="o">.</span><span class="n">interpol</span><span class="p">,</span>
<a name="line-9004"></a>                       <span class="n">dpi</span><span class="o">=</span><span class="n">settings</span><span class="o">.</span><span class="n">dpi</span><span class="p">)</span>
<a name="line-9005"></a>            <span class="n">pyplot</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
<a name="line-9006"></a>
<a name="line-9007"></a>
<a name="line-9008"></a><span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
<a name="line-9009"></a>    <span class="n">inttypes</span> <span class="o">=</span> <span class="nb">int</span><span class="p">,</span> <span class="nb">long</span>  <span class="c1"># noqa</span>
<a name="line-9010"></a>
<a name="line-9011"></a>    <span class="k">def</span> <span class="nf">print_</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
<a name="line-9012"></a>        <span class="sd">"""Print function with flush support."""</span>
<a name="line-9013"></a>        <span class="n">flush</span> <span class="o">=</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="s1">'flush'</span><span class="p">,</span> <span class="bp">False</span><span class="p">)</span>
<a name="line-9014"></a>        <span class="k">print</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
<a name="line-9015"></a>        <span class="k">if</span> <span class="n">flush</span><span class="p">:</span>
<a name="line-9016"></a>            <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
<a name="line-9017"></a>
<a name="line-9018"></a>    <span class="k">def</span> <span class="nf">bytes2str</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">errors</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-9019"></a>        <span class="sd">"""Return string from bytes."""</span>
<a name="line-9020"></a>        <span class="k">return</span> <span class="n">b</span>
<a name="line-9021"></a>
<a name="line-9022"></a>    <span class="k">def</span> <span class="nf">str2bytes</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
<a name="line-9023"></a>        <span class="sd">"""Return bytes from string."""</span>
<a name="line-9024"></a>        <span class="k">return</span> <span class="n">s</span>
<a name="line-9025"></a>
<a name="line-9026"></a>    <span class="k">def</span> <span class="nf">byte2int</span><span class="p">(</span><span class="n">b</span><span class="p">):</span>
<a name="line-9027"></a>        <span class="sd">"""Return value of byte as int."""</span>
<a name="line-9028"></a>        <span class="k">return</span> <span class="nb">ord</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<a name="line-9029"></a>
<a name="line-9030"></a>    <span class="k">class</span> <span class="nc">FileNotFoundError</span><span class="p">(</span><span class="ne">IOError</span><span class="p">):</span>
<a name="line-9031"></a>        <span class="k">pass</span>
<a name="line-9032"></a>
<a name="line-9033"></a>    <span class="n">TiffFrame</span> <span class="o">=</span> <span class="n">TiffPage</span>  <span class="c1"># noqa</span>
<a name="line-9034"></a><span class="k">else</span><span class="p">:</span>
<a name="line-9035"></a>    <span class="n">inttypes</span> <span class="o">=</span> <span class="nb">int</span>
<a name="line-9036"></a>    <span class="nb">basestring</span> <span class="o">=</span> <span class="nb">str</span><span class="p">,</span> <span class="nb">bytes</span>
<a name="line-9037"></a>    <span class="nb">unicode</span> <span class="o">=</span> <span class="nb">str</span>
<a name="line-9038"></a>    <span class="n">print_</span> <span class="o">=</span> <span class="k">print</span>
<a name="line-9039"></a>
<a name="line-9040"></a>    <span class="k">def</span> <span class="nf">bytes2str</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">errors</span><span class="o">=</span><span class="s1">'strict'</span><span class="p">):</span>
<a name="line-9041"></a>        <span class="sd">"""Return unicode string from encoded bytes."""</span>
<a name="line-9042"></a>        <span class="k">if</span> <span class="n">encoding</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
<a name="line-9043"></a>            <span class="k">return</span> <span class="n">b</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="n">encoding</span><span class="p">,</span> <span class="n">errors</span><span class="p">)</span>
<a name="line-9044"></a>        <span class="k">try</span><span class="p">:</span>
<a name="line-9045"></a>            <span class="k">return</span> <span class="n">b</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">'utf-8'</span><span class="p">,</span> <span class="n">errors</span><span class="p">)</span>
<a name="line-9046"></a>        <span class="k">except</span> <span class="ne">UnicodeDecodeError</span><span class="p">:</span>
<a name="line-9047"></a>            <span class="k">return</span> <span class="n">b</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">'cp1252'</span><span class="p">,</span> <span class="n">errors</span><span class="p">)</span>
<a name="line-9048"></a>
<a name="line-9049"></a>    <span class="k">def</span> <span class="nf">str2bytes</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">'cp1252'</span><span class="p">):</span>
<a name="line-9050"></a>        <span class="sd">"""Return bytes from unicode string."""</span>
<a name="line-9051"></a>        <span class="k">return</span> <span class="n">s</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="n">encoding</span><span class="p">)</span>
<a name="line-9052"></a>
<a name="line-9053"></a>    <span class="k">def</span> <span class="nf">byte2int</span><span class="p">(</span><span class="n">b</span><span class="p">):</span>
<a name="line-9054"></a>        <span class="sd">"""Return value of byte as int."""</span>
<a name="line-9055"></a>        <span class="k">return</span> <span class="n">b</span>
<a name="line-9056"></a>
<a name="line-9057"></a><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">"__main__"</span><span class="p">:</span>
<a name="line-9058"></a>    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="n">main</span><span class="p">())</span>
</pre></div>




</body></html>